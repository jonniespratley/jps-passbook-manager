{
  "name": "gruntacular",
  "version": "0.1.1",
  "description": "grunt plugin for testacular",
  "main": "testacularServer.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/OpenWebStack/gruntacular.git"
  },
  "keywords": [
    "gruntplugin",
    "testacular",
    "grunt",
    "test"
  ],
  "author": {
    "name": "Dave Geddes"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "testacular": "~0.5.7"
  },
  "readme": "#gruntacular\nGrunt plugin for [Testacular](http://vojtajina.github.com/testacular/)\nNOTE: this plugin requires Grunt 0.4.x\n\n##Getting Started\nFrom the same directory as your project's Gruntfile and package.json, install this plugin with the following command:\n\n`npm install gruntacular --save-dev`\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('gruntacular');\n```\n\n##Config\nInside your `Gruntfile.js` file, add a section named *testacular*, containing any number of configurations for running testacular. The only required option is the path to the [testacular config file](https://github.com/vojtajina/testacular/wiki/Configuration-File-Overview). Here's a simple example:\n\n```js\ntestacular: {\n  unit: {\n    configFile: 'testacular.conf.js'\n  }\n}\n```\n\nYou can override any of the config file's settings directly:\n\n```js\ntestacular: {\n  unit: {\n    configFile: 'testacular.conf.js',\n    runnerPort: 9999,\n    singleRun: true,\n    browsers: ['PhantomJS']\n  }\n}\n```\n\n##Running tests\nThere are three ways to run your tests with testacular:\n\n###Testacular Server with Auto Runs on File Change\nSetting the `autoWatch` option to true will instruct testacular to start a server and watch for changes to files, running tests automatically:\n\n```js\ntestacular: {\n  unit: {\n    configFile: 'testacular.conf.js',\n    autoWatch: true\n  }\n}\n```\nNow run `$ grunt testacular`\n\nHowever, usually Grunt projects watch many types of files using [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch), so this option isn't preferred. \n\n###Testacular Server with Grunt Watch\nConfig testacular like usual (without the autoWatch option):\n\n```js\ntestacular: {\n  unit: {\n    configFile: 'testacular.conf.js'\n  }\n}\n```\n\nConfig your `watch` task to run the testacular task with the `:run` flag. For example:\n\n```js\nwatch: {\n  //run unit tests with testacular (server needs to be already running)\n  testacular: {\n    files: ['app/js/**/*.js', 'test/browser/**/*.js'],\n    tasks: ['testacular:unit:run'] //NOTE the :run flag\n  }\n},\n```\n\nIn one terminal window start the testacular server by running `$ grunt testacular`. In another terminal window start grunt watch by running `$ grunt watch`. Now when grunt watch detects a change to one of those files, it will run the testacular tests using the already running testacular server. This is the preferred method for development.  \n\n###Single Run\nKeeping a browser window & testacular server running during development is productive, but not a good solution for build processes. For that reason testacular provides a \"continuous integration\" mode, which will launch the specified browser(s), run the tests, and close the browser(s). It also supports running tests in [PhantomJS](http://phantomjs.org/), a headless webkit browser which is great for running tests as part of a build. To run tests in continous integration mode just add the `singleRun` option:\n\n```js\ntestacular: {\n  unit: {\n    configFile: 'config/testacular.conf.js',\n  },\n  //continuous integration mode: run tests once in PhantomJS browser.\n  continuous: {\n    configFile: 'config/testacular.conf.js',\n    singleRun: true,\n    browsers: ['PhantomJS']\n  },\n}\n```\n\nThe build would then run `grunt testacular:continuous` to start PhantomJS, run tests, and close PhantomJS.\n\n##License\nMIT License",
  "_id": "gruntacular@0.1.1",
  "dist": {
    "shasum": "995f13b5ac9ec59dc82027571d3cdb62fe944f68",
    "tarball": "http://registry.npmjs.org/gruntacular/-/gruntacular-0.1.1.tgz"
  },
  "_npmVersion": "1.1.69",
  "_npmUser": {
    "name": "geddesign",
    "email": "davidcgeddes@gmail.com"
  },
  "maintainers": [
    {
      "name": "geddesign",
      "email": "davidcgeddes@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "995f13b5ac9ec59dc82027571d3cdb62fe944f68",
  "_from": "gruntacular@0.1.1",
  "_resolved": "https://registry.npmjs.org/gruntacular/-/gruntacular-0.1.1.tgz"
}
