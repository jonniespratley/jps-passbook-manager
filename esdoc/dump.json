[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/adapters/db-couchdb.js",
    "memberof": null,
    "longname": "lib/adapters/db-couchdb.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nconst _ = require('lodash');\nconst utils = require('../utils');\nconst request = require('request');\n\nmodule.exports = function(options) {\n\toptions = options || {};\n\tvar logger = utils.getLogger('couchdb');\n\tconst BASE_URL = options.baseUrl || 'http://localhost:5984/passbookmanager';\n\n\tvar defaultOptions = {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t//'Accept': 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'x-token': 'my-token'\n\t\t}\n\t};\n\n\tvar baseRequest = request.defaults(defaultOptions);\n\n\tvar sendRequest = function(options) {\n\t\toptions.url = `${BASE_URL}/${options.url}`;\n\n\t\tlogger('sendRequest', options);\n\t\tlet _response = {};\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\t_.defer(function() {\n\t\t\t\trequest(options, function(err, resp, body) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\tlogger('response', body);\n\t\t\t\t\t_response.data = body;\n\n\t\t\t\t\tif (!options.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t_response.data = JSON.parse(body);\n\t\t\t\t\t\t\tresolve(_response.data);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tresolve(_response.data);\n\t\t\t\t\t\t\tlogger('ERROR', options.url, 'Could not parse json', e);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(_response.data);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tvar api = {\n\t\tget: function(id) {\n\t\t\tlogger('get', id);\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tsendRequest({\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: `${id}`\n\t\t\t\t}).then(resolve, reject);\n\t\t\t});\n\t\t},\n\t\tremove: function(id, rev) {\n\t\t\tlogger('remove', id);\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tsendRequest({\n\t\t\t\t\turl: `${id}?rev=${rev}`,\n\t\t\t\t\tmethod: 'DELETE'\n\t\t\t\t}).then(resolve, reject);\n\t\t\t});\n\t\t},\n\t\tput: function(doc) {\n\t\t\tlogger('put', doc);\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tif (!doc._rev) {\n\t\t\t\t\tapi.get(doc._id).then(function(resp) {\n\t\t\t\t\t\tdoc._rev = resp._rev;\n\t\t\t\t\t\tsendRequest({\n\t\t\t\t\t\t\turl: `${doc._id}`,\n\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\tjson: true,\n\t\t\t\t\t\t\tbody: doc\n\t\t\t\t\t\t}).then(resolve, reject);\n\t\t\t\t\t}).catch(function(err) {\n\t\t\t\t\t\tsendRequest({\n\t\t\t\t\t\t\turl: `${doc._id}`,\n\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\tjson: true,\n\t\t\t\t\t\t\tbody: doc\n\t\t\t\t\t\t}).then(resolve, reject);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tsaveAll: function(docs) {\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tsendRequest({\n\t\t\t\t\turl: `_bulk_docs`,\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\tjson: true,\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tdocs: docs\n\t\t\t\t\t}\n\t\t\t\t}).then(resolve, reject);\n\t\t\t});\n\t\t},\n\t\tpost: function(doc) {\n\t\t\tdoc._id = require('node-uuid').v4();\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tsendRequest({\n\t\t\t\t\turl: `${doc._id}`,\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\tjson: true,\n\t\t\t\t\tbody: doc\n\n\t\t\t\t}).then(resolve, reject);\n\t\t\t});\n\t\t},\n\t\tfind: function(params) {\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tsendRequest({\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: '_all_docs?include_docs=true',\n\t\t\t\t\tjson: false\n\t\t\t\t}).then(function(resp) {\n\n\t\t\t\t\tvar docs = [];\n\t\t\t\t\tresp.rows.forEach(function(row) {\n\t\t\t\t\t\tdocs.push(row.doc);\n\t\t\t\t\t});\n\t\t\t\t\tvar filtered = _.findLast(docs, params);\n\t\t\t\t\tresolve(filtered);\n\n\t\t\t\t}, reject);\n\t\t\t});\n\t\t},\n\t\tallDocs: function(params) {\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tsendRequest({\n\t\t\t\t\turl: '_all_docs?include_docs=true',\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tjson: false\n\t\t\t\t}).then(function(resp) {\n\t\t\t\t\tvar docs = resp.rows.filter(function(row) {\n\t\t\t\t\t\treturn row.doc;\n\t\t\t\t\t});\n\n\t\t\t\t\tlogger('allDocs', docs);\n\n\t\t\t\t\tresolve(_.filter(docs, params));\n\t\t\t\t}, reject);\n\t\t\t});\n\t\t}\n\t};\n\n\treturn api;\n};\n"
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/adapters/db-couchdb.js",
    "longname": "lib/adapters/db-couchdb.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/adapters/db-couchdb.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "utils",
    "memberof": "lib/adapters/db-couchdb.js",
    "longname": "lib/adapters/db-couchdb.js~utils",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/adapters/db-couchdb.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "request",
    "memberof": "lib/adapters/db-couchdb.js",
    "longname": "lib/adapters/db-couchdb.js~request",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/adapters/db-couchdb.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/adapters/db-couchdb.js",
    "longname": "lib/adapters/db-couchdb.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/adapters/db-couchdb.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 5,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/adapters/db-redis.js",
    "memberof": null,
    "longname": "lib/adapters/db-redis.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst _ = require('lodash');\nconst redis = require('redis');\nconst utils = require('../utils');\n\nmodule.exports = function(options) {\n\tconst logger = utils.getLogger('redis');\n\tlogger('instance', options);\n\toptions = options || {};\n\n\tlet client;\n\n\tif (options.client) {\n\t\tclient = options.client;\n\t} else {\n\t\tclient = redis.createClient(options);\n\t\tclient.on('error', function(err) {\n\t\t\tlogger('Redis Client error', err);\n\t\t});\n\t}\n\n\treturn {\n\t\tget: function(id) {\n\t\t\tlogger('get', id);\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tclient.get(id, function(err, res) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\tlogger('success', res);\n\t\t\t\t\tresolve(JSON.parse(res));\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tput: function(doc) {\n\t\t\tlogger('put', doc._id);\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tclient.set(doc._id, JSON.stringify(doc), function(err, res) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\tlogger('success', res);\n\t\t\t\t\tresolve(res);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tremove: function(id) {\n\t\t\tlogger('remove', id);\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tclient.del(id, function(err, res) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\tlogger('success', res);\n\t\t\t\t\tresolve(res);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tallDocs: function(params) {\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tclient.keys('*', function(err, res) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\t_(res).forEach(function(i, n) {\n\t\t\t\t\t\tlogger(i, n);\n\t\t\t\t\t});\n\t\t\t\t\tlogger('success', res);\n\t\t\t\t\tresolve(res);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n};\n"
  },
  {
    "__docId__": 6,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/adapters/db-redis.js",
    "longname": "lib/adapters/db-redis.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/adapters/db-redis.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "redis",
    "memberof": "lib/adapters/db-redis.js",
    "longname": "lib/adapters/db-redis.js~redis",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/adapters/db-redis.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "utils",
    "memberof": "lib/adapters/db-redis.js",
    "longname": "lib/adapters/db-redis.js~utils",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/adapters/db-redis.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/adapters/db-redis.js",
    "longname": "lib/adapters/db-redis.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/adapters/db-redis.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 10,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/cli.js",
    "memberof": null,
    "longname": "lib/cli.js",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "content": "#!/usr/bin/env node\n\n'use strict';\nconst assert = require('assert');\nconst fs = require('fs-extra');\nconst _ = require('lodash');\nconst path = require('path');\nconst request = require('request');\nconst cli = require('commander');\n\nconst program = require(path.resolve(__dirname, './program.js'))();\nconst logger = program.utils.getLogger('cli');\nconst utils = program.utils;\nconst SignPass = program.require('signpass');\nconst db = program.db;\n\n\n/*\nTODO - Commands\n=======================================================\n\nHere is a list of things that are always done with\nthis app.\n\n0. System\n  a. build\n  b. test\n  c. clean\n  d. release\n  e. export\n\n1. Passes\n  a. list\n  b. delete\n  c. create (defaults)\n  d. export (.raw)\n  e. sign (.pkpass)\n\n2. devices\n  a. list\n  b. delete\n\n3. logs\n  a. list\n  b. delete\n\n4. users\n  a. list\n  b. delete\n  c. create\n\n=======================================================\n*/\n\ncli\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (cli.peppers) console.log('  - peppers');\nif (cli.pineapple) console.log('  - pineappe');\nif (cli.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', cli.cheese);\n"
  },
  {
    "__docId__": 11,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/cli.js",
    "longname": "lib/cli.js~assert",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fs",
    "memberof": "lib/cli.js",
    "longname": "lib/cli.js~fs",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/cli.js",
    "longname": "lib/cli.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "lib/cli.js",
    "longname": "lib/cli.js~path",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "request",
    "memberof": "lib/cli.js",
    "longname": "lib/cli.js~request",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 16,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "cli",
    "memberof": "lib/cli.js",
    "longname": "lib/cli.js~cli",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 17,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "program",
    "memberof": "lib/cli.js",
    "longname": "lib/cli.js~program",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "logger",
    "memberof": "lib/cli.js",
    "longname": "lib/cli.js~logger",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "utils",
    "memberof": "lib/cli.js",
    "longname": "lib/cli.js~utils",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 20,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "SignPass",
    "memberof": "lib/cli.js",
    "longname": "lib/cli.js~SignPass",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "db",
    "memberof": "lib/cli.js",
    "longname": "lib/cli.js~db",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/cmds/certs.js",
    "memberof": null,
    "longname": "lib/cmds/certs.js",
    "access": null,
    "description": null,
    "lineNumber": 0,
    "content": ""
  },
  {
    "__docId__": 23,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/cmds/devices.js",
    "memberof": null,
    "longname": "lib/cmds/devices.js",
    "access": null,
    "description": null,
    "lineNumber": 0,
    "content": ""
  },
  {
    "__docId__": 24,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/cmds/passes.js",
    "memberof": null,
    "longname": "lib/cmds/passes.js",
    "access": null,
    "description": null,
    "lineNumber": 0,
    "content": ""
  },
  {
    "__docId__": 25,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/cmds/utils.js",
    "memberof": null,
    "longname": "lib/cmds/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 0,
    "content": ""
  },
  {
    "__docId__": 26,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/controllers/admin-controller.js",
    "memberof": null,
    "longname": "lib/controllers/admin-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst path = require('path');\nconst fs = require('fs-extra');\nmodule.exports = function(program) {\n\tconst jpsPassbook = program.require('jps-passbook')(program);\n\tconst SignPass = program.require('signpass');\n\tconst logger = program.getLogger('AdminController');\n\tlet AdminController = {};\n\n\t/**\n\t * I handle saving a upload to the file system and data store.\n\t * @param file\n\t * @returns {*}\n\t */\n\tfunction saveUpload(file) {\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tlet toFilename = path.resolve(program.config.defaults.dataPath, './uploads/' + file.originalFilename);\n\t\t\tlet _doc = {\n\t\t\t\t_id: 'file-' + file.name,\n\t\t\t\toriginalFilename: file.originalFilename,\n\t\t\t\tpath: toFilename,\n\t\t\t\tsize: file.size,\n\t\t\t\tname: file.name,\n\t\t\t\ttype: file.type\n\t\t\t};\n\t\t\tlogger('saveUpload', _doc);\n\t\t\tfs.copy(file.path, _doc.path, function(err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t\tprogram.db.put(_doc).then(resolve, reject);\n\t\t\t});\n\t\t});\n\t}\n\tAdminController.saveUpload = saveUpload;\n\n\t/**\n\t * I handle getting a pass type identifier\n\t * @param req\n\t * @param res\n\t */\n\tAdminController.get_passTypeIdentifier = function(req, res) {\n\t\tjpsPassbook.getPassTypeIdentifier(req.params.id).then(function(resp) {\n\t\t\tconsole.log('found identifier', resp);\n\t\t\tif(resp){\n\t\t\t\tres.status(200).json(resp);\n\t\t\t} else {\n\t\t\t\tres.status(404).json(err);\n\t\t\t}\n\t\t}).catch(function(err) {\n\t\t\tres.status(404).json(err);\n\t\t});\n\t};\n\n\n\t/**\n\t * I handle saving a passTypeIdentifier\n\t * @param req\n\t * @param res\n\t */\n\tAdminController.post_passTypeIdentifier = function(req, res) {\n\t\tlogger('post_passTypeIdentifier', req.body, req.files);\n\t\tlet out = {};\n\t\tlet _id = req.params.id;\n\t\tlet passTypeIdentifier = req.body;\n\t\tpassTypeIdentifier.passTypeIdentifier = _id;\n\n\t\tif (req.files && req.files.file) {\n\t\t\tlogger('Upload file', req.files);\n\n\t\t\tsaveUpload(req.files.file).then(function(_file) {\n\t\t\t\tlogger('Save file', _file);\n\n\t\t\t\tpassTypeIdentifier.p12 = _file.path;\n\n\t\t\t\tjpsPassbook.savePassTypeIdentifier(passTypeIdentifier, function(err, resp) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tlogger('savePassTypeIdentifier - error', err);\n\t\t\t\t\t\tres.status(400).json(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.status(201).json(resp);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}).catch(function(err) {\n\t\t\t\tlogger('saveUpload - error', err);\n\t\t\t\tres.status(400).json(err);\n\t\t\t});\n\n\t\t} else {\n\t\t\tres.status(400).json({\n\t\t\t\terror: 'Please upload a .p12 file!'\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * I handle downloading a pass\n\t * @param req\n\t * @param res\n\t */\n\tAdminController.get_downloadPass = function(req, res) {\n\t\tlet id = req.params.id;\n\t\tlogger('get_downloadPass', id);\n\t\tif (id) {\n\t\t\tprogram.db.get(id).then(function(resp) {\n\t\t\t\tlogger('found pass', resp._id);\n\t\t\t\tlogger('found pkpassFilename', resp.pkpassFilename);\n\t\t\t\tres.set('Content-Type', 'application/vnd.apple.pkpass')\n\t\t\t\t\t.status(200)\n\t\t\t\t\t.download(resp.pkpassFilename);\n\t\t\t}).catch(function(err) {\n\t\t\t\tres.status(404).json(err);\n\t\t\t});\n\t\t} else {\n\t\t\tres.status(400).json('Must provide id!');\n\t\t}\n\t};\n\n\t/**\n\t * I handle getting a pass\n\t * @param req\n\t * @param res\n\t */\n\tAdminController.get_signPass = function(req, res) {\n\t\tlet id = req.params.id\n\t\tlogger('get_signPass', id);\n\t\tprogram.db.get(id).then(function(resp) {\n\t\t\tjpsPassbook.createPassPromise(resp).then(function(p) {\n\t\t\t\tjpsPassbook.signPassPromise(p).then(function(_resp) {\n\t\t\t\t\tres.status(200).json(_resp);\n\t\t\t\t}).catch(function(err) {\n\t\t\t\t\tres.status(404).json(err);\n\t\t\t\t});\n\t\t\t}).catch(function(err) {\n\t\t\t\tlogger('get_signPass - error', err);\n\t\t\t\tres.status(400).json(err);\n\t\t\t});\n\t\t}).catch(function(err) {\n\t\t\tres.status(404).json(err);\n\t\t});\n\t};\n\n\t/**\n\t * I handle finding data\n\t * @param req\n\t * @param res\n\t */\n\tAdminController.get_find = function(req, res) {\n\t\tlogger('get_find', req.query);\n\t\tprogram.db.find(req.query).then(function(resp) {\n\t\t\tlogger('get_find', 'resp', resp);\n\t\t\tif(resp){\n\t\t\t\tres.status(200).json(resp);\n\t\t\t} else {\n\t\t\t\tres.status(404).json(err);\n\t\t\t}\n\n\t\t}).catch(function(err) {\n\t\t\tres.status(404).json(err);\n\t\t});\n\t};\n\n\n\n\treturn AdminController;\n\n\n};\n"
  },
  {
    "__docId__": 27,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "lib/controllers/admin-controller.js",
    "longname": "lib/controllers/admin-controller.js~path",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/admin-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fs",
    "memberof": "lib/controllers/admin-controller.js",
    "longname": "lib/controllers/admin-controller.js~fs",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/admin-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/controllers/admin-controller.js",
    "longname": "lib/controllers/admin-controller.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/admin-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "program",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/controllers/app-controller.js",
    "memberof": null,
    "longname": "lib/controllers/app-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nconst multipart = require('connect-multiparty');\nconst bodyParser = require('body-parser');\nconst path = require('path');\nconst fs = require('fs-extra');\nconst assert = require('assert');\nconst _ = require('lodash');\n\n\nmodule.exports = function(program) {\n\tconst config = program.config.defaults;\n\tconst logger = program.getLogger('AppController');\n  let AppController = {};\n\n\tAppController.index = function(req, res, next){\n\t\tres.status(200).json({\n\t\t\tmessage: config.name\n\t\t});\n\t};\n\n\t/**\n\t * I handle displaying an upload form.\n\t * @param req\n\t * @param res\n\t * @param next\n     */\n\tAppController.get_upload = function(req, res, next){\n\t\tres.writeHead(200, {\n\t\t\t'content-type': 'text/html'\n\t\t});\n\t\tres.end(\n\t\t\t'<form action=\"\" enctype=\"multipart/form-data\" method=\"post\">' +\n\t\t\t'<input type=\"file\" name=\"files\" multiple=\"multiple\"><br>' +\n\t\t\t\t//\t\t'<input type=\"file\" name=\"file\"><br>' +\n\t\t\t'<input type=\"submit\" value=\"Upload\">' +\n\t\t\t'</form>'\n\t\t);\n\t};\n\n\t/**\n\t * I handle processing a file upload.\n\t * @param req\n\t * @param res\n\t * @param next\n     */\n\tAppController.post_upload = function(req, res, next){\n\t\tvar out = [];\n\t\tvar files = [];\n\t\tvar file = null;\n\t\tvar toFilename;\n\n\t\t\tlogger('upload', req.files);\n\n\t\t\t// parse a file upload\n\t\t\tfiles = req.files;\n\t\t\tfor (var f in files) {\n\t\t\t\tfile = files[f];\n\t\t\t\tlogger('upload', 'file', file);\n\t\t\t\ttoFilename = path.resolve(config.dataPath, './passes/' + req.body._id + '.raw/' + file.originalFilename);\n\n\t\t\t\ttry {\n\t\t\t\t\t//\tfs.writeFileSync(toFilename, fs.readFileSync(file.path));\n\t\t\t\t\tfs.copySync(file.path, toFilename);\n\t\t\t\t\tout.push(toFilename);\n\t\t\t\t\tlogger('upload', 'to', toFilename);\n\t\t\t\t\tfs.removeSync(file.path);\n\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.error('Oh no, there was an error: ' + err.message);\n\t\t\t\t\tres.status(400).json({\n\t\t\t\t\t\terror: err.message\n\t\t\t\t\t});\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t\tres.status(200).json(out);\n\n\n\t};\n\n\tAppController.post_log = function(req, res, next){\n\t\tvar dataLog = {};\n\t\tdataLog._id = _.uniqueId('log-');\n\t\tdataLog.docType = 'log';\n\t\tdataLog.data = req.body;\n\t\tdataLog.created_at = _.now();\n\n\t\t_.defer(function() {\n\t\t\tprogram.db.put(dataLog).then(function(resp) {\n\t\t\t\tres.status(200).json(resp);\n\t\t\t}).catch(function(err) {\n\t\t\t\tres.status(400).json(err);\n\t\t\t});\n\t\t}, 250);\n\t};\n\n  return AppController;\n\n};\n"
  },
  {
    "__docId__": 31,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "multipart",
    "memberof": "lib/controllers/app-controller.js",
    "longname": "lib/controllers/app-controller.js~multipart",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/app-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "bodyParser",
    "memberof": "lib/controllers/app-controller.js",
    "longname": "lib/controllers/app-controller.js~bodyParser",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/app-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "lib/controllers/app-controller.js",
    "longname": "lib/controllers/app-controller.js~path",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/app-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fs",
    "memberof": "lib/controllers/app-controller.js",
    "longname": "lib/controllers/app-controller.js~fs",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/app-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/controllers/app-controller.js",
    "longname": "lib/controllers/app-controller.js~assert",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/app-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/controllers/app-controller.js",
    "longname": "lib/controllers/app-controller.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/app-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/controllers/app-controller.js",
    "longname": "lib/controllers/app-controller.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/app-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "program",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/controllers/auth-controller.js",
    "memberof": null,
    "longname": "lib/controllers/auth-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nmodule.exports = function (program) {\n\tconst path = require('path');\n\tconst url = require('url');\n\tconst express = require('express');\n\tconst expressValidator = require('express-validator');\n\tconst methodOverride = require('method-override');\n\tconst bodyParser = require('body-parser');\n\tconst session = require('express-session');\n\tconst RedisStore = require('connect-redis')(session);\n\tconst Router = express.Router;\n\tconst jsonParser = bodyParser.json();\n\tconst passport = require('passport');\n\tconst OAuth2Strategy = require('passport-oauth').OAuth2Strategy;\n\tconst GitHubStrategy = require('passport-github2').Strategy;\n\tconst LocalStrategy = require('passport-local').Strategy;\n\tconst User = require(path.resolve(__dirname, '../models/user.js'));\n\tconst Users = require(path.resolve(__dirname, '../models/users.js'))(program.db);\n\tconst config = program.config.defaults;\n\tconst db = program.db;\n\tconst logger = program.getLogger('AuthController');\n\tvar GITHUB_CLIENT_ID = config.passport.development.github.clientID;\n\tvar GITHUB_CLIENT_SECRET = config.passport.development.github.clientSecret;\n\tvar OAUTH_CALLBACK_URL = config.passport.development.github.callbackURL;\n\n\tif (process.env.NODE_ENV === 'production') {\n\t\tGITHUB_CLIENT_ID = config.passport.production.github.clientID;\n\t\tGITHUB_CLIENT_SECRET = config.passport.production.github.clientSecret;\n\t\tOAUTH_CALLBACK_URL = config.passport.production.github.callbackURL;\n\t}\n\n\tconst OAUTH_CLIENT_SECRET = GITHUB_CLIENT_SECRET;\n\tconst OAUTH_CLIENT_ID = GITHUB_CLIENT_ID;\n\tconst OAUTH_AUTH_URL = 'https://github.com/login/oauth/authorize';\n\tconst OAUTH_TOKEN_URL = 'https://github.com/login/oauth/access_token';\n\n\n\tlogger('OAUTH_CLIENT_SECRET', OAUTH_CLIENT_SECRET);\n\tlogger('OAUTH_CLIENT_ID', OAUTH_CLIENT_ID);\n\tlogger('OAUTH_AUTH_URL', OAUTH_AUTH_URL);\n\tlogger('OAUTH_TOKEN_URL', OAUTH_TOKEN_URL);\n\tlogger('OAUTH_CALLBACK_URL', OAUTH_CALLBACK_URL);\n\n\n\t// =========================================================================\n\t// LOCAL SIGNUP ============================================================\n\t// =========================================================================\n\tpassport.use('local-signup', new LocalStrategy({\n\t\t\tusernameField: 'email',\n\t\t\tpasswordField: 'password',\n\t\t\tpassReqToCallback: true\n\t\t},\n\t\tfunction (req, email, password, done) {\n\t\t\tlogger('local-signup', email);\n\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tUsers.find({\n\t\t\t\t\t'email': email\n\t\t\t\t}, function (err, user) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tlogger('local-signup', 'error', 'Fatal error');\n\t\t\t\t\t\treturn done(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (user) {\n\t\t\t\t\t\tlogger('local-signup', 'error', 'found existing user', user);\n\t\t\t\t\t\treturn done(null, false, req.flash('signupMessage', 'That email is already taken.'));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger('local-signup', 'registering', email);\n\n\t\t\t\t\t\tvar newUser = new User({\n\t\t\t\t\t\t\t//username: email,\n\t\t\t\t\t\t\temail: email\n\t\t\t\t\t\t});\n\t\t\t\t\t\tnewUser.password = newUser.generateHash(password);\n\n\t\t\t\t\t\tUsers.save(newUser, function (err, u) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tlogger('saveUser', 'error', err);\n\t\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlogger('local-signup', 'success', u);\n\t\t\t\t\t\t\treturn done(null, u);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}));\n\t// =========================================================================\n\t// LOCAL LOGIN =============================================================\n\t// =========================================================================\n\tpassport.use('local-login', new LocalStrategy({\n\t\tusernameField: 'email',\n\t\tpasswordField: 'password',\n\t\tpassReqToCallback: true\n\t}, function (req, email, password, done) {\n\t\tlogger('local-login', email);\n\n\t\tUsers.findByEmail(email, function (err, user) {\n\t\t\tuser = new User(user);\n\t\t\tlogger('local-login', 'findOne', user);\n\n\t\t\tif (err) {\n\t\t\t\tlogger('local-login', 'error', err);\n\t\t\t\treturn done(err);\n\t\t\t}\n\n\t\t\tif (!user) {\n\t\t\t\tlogger('local-login', 'No User Found!');\n\t\t\t\treturn done(null, false, req.flash('loginMessage', 'No user found.'));\n\t\t\t}\n\n\t\t\tif (!user.checkPassword(password, user.password)) {\n\t\t\t\tlogger('local-login', 'invalidePassword', user.password, password);\n\t\t\t\treturn done(null, false, req.flash('loginMessage', 'Oops! Wrong password.'));\n\t\t\t}\n\n\t\t\treturn done(null, user);\n\t\t});\n\t}));\n\n\n\tpassport.use('oauth2', new OAuth2Strategy({\n\t\t\tauthorizationURL: OAUTH_AUTH_URL,\n\t\t\ttokenURL: OAUTH_TOKEN_URL,\n\t\t\tclientID: OAUTH_CLIENT_ID,\n\t\t\tclientSecret: OAUTH_CLIENT_SECRET,\n\t\t\tcallbackURL: OAUTH_CALLBACK_URL\n\t\t},\n\t\tfunction (accessToken, refreshToken, profile, done) {\n\t\t\tlogger('accessToken', accessToken, refreshToken, profile);\n\t\t\tUsers.findOrCreate(profile, done);\n\t\t}\n\t));\n\n\tpassport.use('github', new GitHubStrategy({\n\t\t\tclientID: OAUTH_CLIENT_ID,\n\t\t\tclientSecret: OAUTH_CLIENT_SECRET,\n\t\t\tcallbackURL: OAUTH_CALLBACK_URL\n\t\t},\n\t\tfunction (accessToken, refreshToken, profile, done) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tlogger('accessToken', accessToken);\n\t\t\t\tlogger('refreshToken', refreshToken);\n\t\t\t\tlogger('profile', profile);\n\n\t\t\t\treturn Users.findOrCreate(profile, done);\n\t\t\t});\n\t\t}\n\t));\n\n\tpassport.serializeUser(function (user, done) {\n\t\tlogger('serializeUser', user);\n\t\tUsers.findOrCreate(user, done);\n\t});\n\n\tpassport.deserializeUser(function (id, done) {\n\t\tlogger('deserializeUser', id);\n\t\tUsers.find(id, done);\n\t});\n\n\tfunction restrict(req, res, next) {\n\t\tif (req.user) {\n\t\t\treturn next();\n\t\t} else {\n\t\t\tres.send(403); // Forbidden\n\t\t}\n\t}\n\n\tfunction ensureAuthenticated(req, res, next) {\n\t\tlogger('ensureAuthenticated', req.url);\n\t\tif (req.isAuthenticated()) {\n\t\t\treturn next();\n\t\t}\n\t\tres.redirect('/login')\n\t}\n\n\t// TODO: do any checks you want to in here\n\tfunction isAuthenticated(req, res, next) {\n\t\tlogger('isAuthenticated', req.session);\n\t\tif (req.session && req.session.authenticated) {\n\t\t\treturn next();\n\t\t}\n\t\tres.redirect('/login');\n\t}\n\n\tlet AuthController = {\n\t\tensureAuthenticated: ensureAuthenticated,\n\t\tisAuthenticated: isAuthenticated,\n\t\trestrict: restrict,\n\t\tget_index: function (req, res, next) {\n\t\t\tres.render('index', {\n\t\t\t\tuser: req.user\n\t\t\t});\n\t\t},\n\t\tget_login: function (req, res, next) {\n\t\t\tif (req.session) {\n\t\t\t\tlogger('get_login', 'session', req.session);\n\t\t\t}\n\t\t\tif (req.user) {\n\t\t\t\tlogger('get_login', 'user', req.user);\n\t\t\t}\n\t\t\tres.render('login', {\n\t\t\t\tuser: req.user,\n\t\t\t\tmessage: req.flash('loginMessage', 'Please sign in')\n\t\t\t});\n\n\t\t},\n\t\tpost_login: function (req, res, next) {\n\t\t\tlogger('post_login', req.body);\n\n\t\t\t//  localAuth(req, res, next);\n\t\t\tif (req.user) {\n\t\t\t\tres.redirect('/account');\n\t\t\t}\n\n\t\t\tUsers.validate(_user, function (err, resp) {\n\t\t\t\tif(err){\n\t\t\t\t\tres.format({\n\t\t\t\t\t\thtml: function () {\n\t\t\t\t\t\t\tres.render('login', {\n\t\t\t\t\t\t\t\tuser: req.user,\n\t\t\t\t\t\t\t\tmessage: req.flash('loginMessage', err.message)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjson: function () {\n\t\t\t\t\t\t\tres.status(200).json(resp);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tres.format({\n\t\t\t\t\thtml: function () {\n\t\t\t\t\t\tres.redirect('/account');\n\t\t\t\t\t},\n\t\t\t\t\tjson: function () {\n\t\t\t\t\t\tres.status(200).json(resp);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tget_logout: function (req, res, next) {\n\t\t\tlogger('get_logout');\n\t\t\treq.logout();\n\t\t\tres.redirect('/login', {\n\t\t\t\tmessage: req.flash('loginMessage', 'You have been logged out.')\n\t\t\t});\n\t\t},\n\t\tget_me: function (req, res, next) {\n\t\t\tlogger('get_me', req.url, req.session);\n\t\t\tres.status(200).json(req.user);\n\t\t},\n\t\tpost_me: function (req, res, next) {\n\t\t\tlogger('post_me', req.url, req.user);\n\t\t\tres.status(200).json(req.user);\n\t\t},\n\t\tget_provider: function (req, res, next) {\n\t\t\tlogger('get_provider');\n\t\t\tpassport.authenticate('oauth2');\n\t\t},\n\t\tget_provider_callback: function (req, res, next) {\n\t\t\tlogger('get_provider_callback', req.url);\n\t\t\tres.redirect('/account');\n\t\t},\n\t\tget_register: function (req, res, next) {\n\t\t\tlogger('get_register');\n\t\t\tres.render('register', {\n\t\t\t\tmessage: req.flash('signupMessage')\n\t\t\t});\n\t\t},\n\t\tpost_register: function (req, res, next) {\n\t\t\tlogger('post_register', req.body);\n\n\t\t\t//user.password = user.generateHash(user.password);\n\t\t\t//  req.body.password = program.utils.checksum(req.body.password, 'sha1');\n\t\t\tlogger('post_register', req.body);\n\t\t\tUsers.findOrCreate(req.body, function (err, u) {\n\t\t\t\tif (err) {\n\t\t\t\t\tres.format({\n\t\t\t\t\t\thtml: function () {\n\t\t\t\t\t\t\tres.render('register', {\n\t\t\t\t\t\t\t\tmessage: err\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjson: function () {\n\t\t\t\t\t\t\tres.status(400).json(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tres.format({\n\t\t\t\t\t\thtml: function () {\n\t\t\t\t\t\t\tres.render('login', {\n\t\t\t\t\t\t\t\tmessage: 'User was created!'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjson: function () {\n\t\t\t\t\t\t\tres.status(200).json(u);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tget_account: function (req, res, next) {\n\t\t\tif (req.isAuthenticated()) {\n\t\t\t\tlogger('isAuthenticated');\n\t\t\t}\n\t\t\treq.authenticated = true;\n\t\t\treq.session.authenticated = true;\n\t\t\treq.session.save(function (err) {\n\n\t\t\t\tif (err) {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t\tlogger('session.save', req.session);\n\t\t\t\tlogger('session.user', req.user);\n\n\n\t\t\t\tres.format({\n\t\t\t\t\thtml: function () {\n\t\t\t\t\t\tres.render('account', {\n\t\t\t\t\t\t\tuser: req.user\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tjson: function () {\n\t\t\t\t\t\tres.status(200).json({ok: true});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t});\n\t\t},\n\t\tpost_account: function (req, res, next) {\n\t\t\tlogger('post_account');\n\t\t\t//res.render('register', {});\n\t\t\tres.format({\n\t\t\t\thtml: function () {\n\t\t\t\t\tres.render('login', {\n\t\t\t\t\t\tmessage: 'User was created!'\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tjson: function () {\n\t\t\t\t\tres.status(200).json({ok: true});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn AuthController;\n\tlogger('initialized');\n};\n"
  },
  {
    "__docId__": 39,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/controllers/auth-controller.js",
    "longname": "lib/controllers/auth-controller.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/auth-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "program",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/controllers/db-controller.js",
    "memberof": null,
    "longname": "lib/controllers/db-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nmodule.exports = function(program) {\n  const _ = require('lodash');\n  let logger = program.getLogger('DbController');\n  var Controller = {};\n  Controller = {\n    get_doc: function(req, res, next) {\n      if (req.params.id) {\n        program.db.get(req.params.id, req.params).then(function(resp) {\n          res.status(200).json(resp);\n        }).catch(function(err) {\n          res.status(404).json(err);\n        });\n      } else {\n        Controller.get_docs(req, res, next);\n      }\n    },\n    get_docs: function(req, res, next) {\n      program.db.allDocs(req.query).then(function(resp) {\n        res.status(200).json(resp);\n      }).catch(function(err) {\n        res.status(400).json(err);\n      });\n    },\n    put_doc: function(req, res, next) {\n      _.defer(function() {\n        program.db.put(req.body, req.params.id, req.query.rev).then(function(resp) {\n          res.status(200).json(resp);\n        }).catch(function(err) {\n          res.status(404).json(err);\n        });\n      });\n    },\n    post_doc: function(req, res, next) {\n      program.db.post(req.body).then(function(resp) {\n        res.status(201).json(resp);\n      }).catch(function(err) {\n        res.status(400).json(err);\n      });\n    },\n    delete_doc: function(req, res, next) {\n      _.defer(function() {\n        program.db.remove(req.params.id).then(function(resp) {\n          res.sendStatus(200);\n        }).catch(function(err) {\n          res.sendStatus(404);\n        });\n      });\n    }\n  };\n\n  return Controller;\n  logger('initialized');\n};\n"
  },
  {
    "__docId__": 41,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/controllers/db-controller.js",
    "longname": "lib/controllers/db-controller.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/db-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "program",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/controllers/devices-controller.js",
    "memberof": null,
    "longname": "lib/controllers/devices-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst _ = require('lodash');\nconst assert = require('assert');\nconst Registration = require('../models/registration');\nconst Device = require('../models/device');\nconst Passes = require('../models/passes');\n\nmodule.exports = function(program) {\n\tvar logger = program.getLogger('controller:devices');\n\treturn {\n\t\t/*\n\t\t # Registration\n\t\t # register a device to receive push notifications for a pass\n\t\t #\n\t\t # POST /v1/devices/<deviceID>/registrations/<typeID>/<serial#>\n\t\t # Header: Authorization: ApplePass <authenticationToken>\n\t\t # JSON payload: { \"pushToken\" : <push token, which the server needs to send push notifications to this device> }\n\t\t #\n\t\t # Params definition\n\t\t # :device_id      - the device's identifier\n\t\t # :pass_type_id   - the bundle identifier for a class of passes, sometimes refered to as the pass topic, e.g. pass.com.apple.backtoschoolgift, registered with WWDR\n\t\t # :serial_number  - the pass' serial number\n\t\t # :pushToken      - the value needed for Apple Push Notification service\n\t\t #\n\t\t # server action: if the authentication token is correct, associate the given push token and device identifier with this pass\n\t\t # server response:\n\t\t # --> if registration succeeded: 201\n\t\t # --> if this serial number was already registered for this device: 304\n\t\t # --> if not authorized: 401\n\n\t\t post '/v1/devices/:device_id/registrations/:pass_type_id/:serial_number'\n\t\t */\n\t\tpost_device_registration: function(req, res, next) {\n\n\t\t\tlogger('post_device_registration', req.url);\n\t\t\tlogger('post_device_registration', 'params', req.params);\n\t\t\tlogger('post_device_registration', 'Handling registration request...');\n\n\t\t\tlet device_id = req.params.device_id;\n\t\t\tlet pass_type_id = req.params.pass_type_id;\n\t\t\tlet serial_number = req.params.serial_number;\n\t\t\tlet push_token = req.body.pushToken;\n\t\t\tlet authentication_token = req.get('Authorization');\n\t\t\tlet device = null;\n\t\t\tlet registration = null;\n\n\t\t\tlogger('post_device_registration', 'authentication =', authentication_token);\n\t\t\tlogger('post_device_registration', 'device_id =', device_id);\n\t\t\tlogger('post_device_registration', 'pass_type_id =', pass_type_id);\n\t\t\tlogger('post_device_registration', 'serial_number =', serial_number);\n\t\t\tlogger('post_device_registration', 'push_token =', push_token);\n\n\t\t\tif (!authentication_token) {\n\t\t\t\tres.status(401).json({\n\t\t\t\t\terror: 'Unauthorized'\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t\ttry {\n\t\t\t\t\tdevice = new Device({\n\t\t\t\t\t\t//_id: 'device-' + device_id,\n\t\t\t\t\t\tdeviceLibraryIdentifier: device_id,\n\t\t\t\t\t\tpassTypeIdentifier: pass_type_id,\n\t\t\t\t\t\tauthorization: authentication_token,\n\t\t\t\t\t\tpushToken: push_token,\n\t\t\t\t\t\tserialNumber: serial_number\n\t\t\t\t\t});\n\n\t\t\t\t\tregistration = new Registration({\n\t\t\t\t\t\t//pass_id: serial_number,\n\t\t\t\t\t\tserial_number: serial_number,\n\t\t\t\t\t\tpass_type_id: pass_type_id,\n\t\t\t\t\t\tdevice_id: device._id,\n\t\t\t\t\t\tauth_token: authentication_token,\n\t\t\t\t\t\tdeviceLibraryIdentifier: device_id,\n\t\t\t\t\t\tpush_token: push_token\n\t\t\t\t\t});\n\n\t\t\t\t\t//# The device has already registered for updates on this pass\n\t\t\t\t\tprogram.db.get(registration._id).then(function(reg) {\n\t\t\t\t\t\tlogger('post_device_registration', 'found', registration._id);\n\t\t\t\t\t\tlogger('post_device_registration', 'returning 200');\n\t\t\t\t\t\tres.status(200).json(reg);\n\t\t\t\t\t}).catch(function(err) {\n\t\t\t\t\t\tprogram.db.saveAll([device, registration]).then(function(resp) {\n\t\t\t\t\t\t\tlogger('post_device_registration', 'inserted', resp);\n\t\t\t\t\t\t\tlogger('post_device_registration', 'returning 201');\n\t\t\t\t\t\t\tres.status(201).json(resp);\n\t\t\t\t\t\t}).catch(function(err) {\n\t\t\t\t\t\t\tlogger('post_device_registration', 'error', err);\n\t\t\t\t\t\t\tres.status(400).json(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogger('post_device_registration', 'error', e);\n\t\t\t\t\t//\tprogram.db.saveSync(registration);\n\t\t\t\t\t//\tprogram.db.saveSync(device);\n\t\t\t\t\tres.status(400).json(e);\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * # Unregister\n\t\t #\n\t\t # unregister a device to receive push notifications for a pass\n\t\t #\n\t\t # DELETE /v1/devices/<deviceID>/registrations/<passTypeID>/<serial#>\n\t\t # Header: Authorization: ApplePass <authenticationToken>\n\t\t #\n\t\t # server action: if the authentication token is correct, disassociate the device from this pass\n\t\t # server response:\n\t\t # --> if disassociation succeeded: 200\n\t\t # --> if not authorized: 401\n\t\t * @param req\n\t\t * @param res\n\t\t * @param next\n\t\t */\n\t\tdelete_device_registration: function(req, res, next) {\n\t\t\tlogger('delete_device_registration', req.url);\n\n\t\t\tlet authentication_token = `${req.get('Authorization')}`;\n\t\t\tlet device_id = req.params.device_id;\n\t\t\tlet pass_type_id = req.params.pass_type_id;\n\t\t\tlet serial_number = req.params.serial_number;\n\n\t\t\tassert.ok(device_id, 'has device id');\n\t\t\tassert.ok(pass_type_id, 'has pass type id');\n\t\t\tassert.ok(serial_number, 'has serial number');\n\n\t\t\tlet uuid = device_id + '-' + serial_number;\n\t\t\tlet registration;\n\n\t\t\tlet device = new Device({\n\t\t\t\tdeviceLibraryIdentifier: device_id\n\t\t\t});\n\n\t\t\tregistration = new Registration({\n\t\t\t\tserial_number: serial_number,\n\t\t\t\tauth_token: authentication_token,\n\t\t\t\tdevice_id: device._id\n\t\t\t});\n\n\t\t\tvar tokensMatch = false;\n\n\t\t\tlogger('delete_device_registration', 'req.authenticationToken =', authentication_token);\n\t\t\tif (!authentication_token) {\n\t\t\t\tres.status(401).json({\n\t\t\t\t\terror: 'Unauthorized'\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t\tlogger('delete_device_registration', 'Finding registration', registration._id);\n\n\t\t\t\tprogram.db.get(registration._id).then(function(reg) {\n\t\t\t\t\ttokensMatch = (authentication_token === reg.auth_token);\n\n\t\t\t\t\tlogger('delete_device_registration', 'found', reg._id);\n\t\t\t\t\tlogger('delete_device_registration', 'checking tokens', tokensMatch);\n\n\t\t\t\t\tif (tokensMatch) {\n\n\t\t\t\t\t\tlogger('delete_device_registration', 'req.authenticationToken =', authentication_token);\n\t\t\t\t\t\tlogger('delete_device_registration', 'registration token =', reg.auth_token);\n\t\t\t\t\t\tlogger('delete_device_registration', 'Pass and authentication token match.');\n\n\n\t\t\t\t\t\tprogram.db.remove(reg._id).then(function(resp) {\n\t\t\t\t\t\t\tres.status(200).json(resp);\n\n\t\t\t\t\t\t}).catch(function(err) {\n\t\t\t\t\t\t\tres.status(404).json({\n\t\t\t\t\t\t\t\terror: 'Registration does not exist'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger('delete_device_registration', 'Pass and authentication token DO NOT match.');\n\t\t\t\t\t\tres.status(401).json({\n\t\t\t\t\t\t\terror: 'Pass and authentication do not token match.'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}).catch(function(err) {\n\t\t\t\t\tres.status(404).json({\n\t\t\t\t\t\terror: 'Registration does not exist'\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t *\n\n\t\t # Updatable passes\n\t\t #\n\t\t # get all serial #s associated with a device for passes that need an update\n\t\t # Optionally with a query limiter to scope the last update since\n\t\t #\n\t\t # GET /v1/devices/<deviceID>/registrations/<typeID>\n\t\t # GET /v1/devices/<deviceID>/registrations/<typeID>?passesUpdatedSince=<tag>\n\t\t #\n\t\t # server action: figure out which passes associated with this device have been modified since the supplied tag (if no tag provided, all associated serial #s)\n\t\t # server response:\n\t\t # --> if there are matching passes: 200, with JSON payload: { \"lastUpdated\" : <new tag>, \"serialNumbers\" : [ <array of serial #s> ] }\n\t\t # --> if there are no matching passes: 204\n\t\t # --> if unknown device identifier: 404\n\t\t #\n\t\t #\n\t\t * @param req\n\t\t * @param res\n\t\t * @param next\n\t\t */\n\t\tget_device_passes: function(req, res, next) {\n\t\t\tlet authentication_token = req.get('Authorization');\n\t\t\tlet device_id = req.params.device_id;\n\t\t\tlet pass_type_id = req.params.pass_type_id;\n\t\t\tlet serials = [];\n\t\t\t//\tlet serial_number = req.params.serial_number;\n\n\t\t\tassert(device_id, 'has device id');\n\t\t\tassert(pass_type_id, 'has pass type id');\n\n\t\t\tlogger('get_device_passes', authentication_token);\n\t\t\tlogger('get_device_passes', req.method, req.url);\n\n\t\t\tif (!authentication_token) {\n\t\t\t\tres.status(401).json({\n\t\t\t\t\terror: 'Unauthorized'\n\t\t\t\t});\n\n\t\t\t} else {\n\n\t\t\t\tlogger('get_device_passes', 'Make sure device is registered');\n\t\t\t\tprogram.db.find({\n\t\t\t\t\tpassTypeIdentifier: pass_type_id,\n\t\t\t\t\tauthorization: authentication_token,\n\t\t\t\t\tdeviceLibraryIdentifier: device_id\n\t\t\t\t}).then(function(devices) {\n\n\t\t\t\t\tif (devices) {\n\n\t\t\t\t\t\tserials = _.pluck(devices, 'serialNumber');\n\n\t\t\t\t\t\tlogger('get_device_passes', 'get passes by pass_type_id');\n\t\t\t\t\t\tlogger('get_device_passes', 'Return matching passes');\n\n\t\t\t\t\t\tres.status(200).json({\n\t\t\t\t\t\t\tlastUpdated: Date.now().toString(),\n\t\t\t\t\t\t\tserialNumbers: serials\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.status(404).json({\n\t\t\t\t\t\t\terror: 'Device not registered'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}).catch(function(err) {\n\t\t\t\t\tres.status(404).json(err);\n\t\t\t\t});\n\n\n\t\t\t}\n\t\t}\n\t};\n};\n"
  },
  {
    "__docId__": 43,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/controllers/devices-controller.js",
    "longname": "lib/controllers/devices-controller.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/devices-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/controllers/devices-controller.js",
    "longname": "lib/controllers/devices-controller.js~assert",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/devices-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 45,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Registration",
    "memberof": "lib/controllers/devices-controller.js",
    "longname": "lib/controllers/devices-controller.js~Registration",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/devices-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Device",
    "memberof": "lib/controllers/devices-controller.js",
    "longname": "lib/controllers/devices-controller.js~Device",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/devices-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Passes",
    "memberof": "lib/controllers/devices-controller.js",
    "longname": "lib/controllers/devices-controller.js~Passes",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/devices-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/controllers/devices-controller.js",
    "longname": "lib/controllers/devices-controller.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/devices-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "program",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/controllers/passes-controller.js",
    "memberof": null,
    "longname": "lib/controllers/passes-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst assert = require('assert');\nconst _ = require('lodash');\n/*\n * Methods\n * to find the passes that a given device has registered for,\n * to find the devices that have registered for a given pass.\n *\n *  Registration is a many-to-many relationship: a single device can register for updates to multiple passes,\n *  and a single pass can be registered by multiple devices.*/\nmodule.exports = function(program) {\n\tvar db = program.db;\n\tvar logger = program.getLogger('controller:passes');\n\tvar Passbook = new program.modules.Passbook(program);\n\tvar Passes = program.models.Passes;\n\tvar Pass = program.models.Pass;\n\n\t/*\n\t * To handle the device registration, do the following:\n\n\t Verify that the authentication token is correct. If it doesn’t match, immediately return the HTTP status 401 Unauthorized and disregard the request.\n\t Store the mapping between the device library identifier and the push token in the devices table.\n\t Store the mapping between the pass (by pass type identifier and serial number) and the device library identifier in the registrations table.\n\t */\n\treturn {\n\n\t\tget_passes: function(req, res) {\n\t\t\tvar self = this;\n\t\t\tvar auth = req.get('Authorization');\n\t\t\tvar pass_type_id = req.params.pass_type_id;\n\t\t\tvar device_id = req.params.device_id;\n\t\t\tvar serial_number = req.params.serial_number;\n\t\t\tvar lastUpdated = req.query.updatedSince;\n\n\t\t\t//assert.ok(pass_type_id, 'has pass type id');\n\n\t\t\tlogger('Handling pass delivery request...');\n\t\t\tlogger('Authorization=', auth);\n\t\t\tlogger('pass_type_id=', pass_type_id);\n\t\t\tlogger('serial_number=', serial_number);\n\t\t\tlogger('device_id=', device_id);\n\n\t\t\tif (!auth) {\n\t\t\t\tlogger('get_passes:unauthorized');\n\t\t\t\treturn res.status(401).json({\n\t\t\t\t\terror: 'Unauthorized'\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tPasses.find({\n\t\t\t\t\tpassTypeIdentifier: pass_type_id,\n\t\t\t\t\tserialNumber: serial_number\n\t\t\t\t}).then(function(resp) {\n\t\t\t\t\tlogger('get_passes:success');\n\n\t\t\t\t\tif (lastUpdated > resp.lastUpdated) {\n\t\t\t\t\t\tres.status(204).json({});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.status(200).json(resp);\n\t\t\t\t\t}\n\n\t\t\t\t}).catch(function(err) {\n\t\t\t\t\tlogger('get_passes:error', err);\n\t\t\t\t\tres.status(404).json(err);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\n\t\tpost_pass: function(req, res) {\n\t\t\tvar p = new Pass(req.body);\n\t\t\tlogger('post_pass', p._id);\n\n\t\t\tPasses.save(p).then(function(resp) {\n\t\t\t\tres.status(201).json(resp);\n\t\t\t\t/*\tPassbook.createPass(resp, function(err, obj) {\n\t\t\t\t\t\tres.status(201).json(resp);\n\t\t\t\t\t});*/\n\t\t\t}).catch(function(err) {\n\t\t\t\tres.status(404).json(err);\n\t\t\t});\n\n\t\t},\n\n\n\t\tput_pass: function(req, res) {\n\t\t\tvar p = new Pass(req.body);\n\t\t\tvar id = req.params.id\n\t\t\tp._id = id;\n\t\t\tlogger('put_pass', id);\n\t\t\tPasses.save(p).then(function(resp) {\n\t\t\t\tlogger('save', resp);\n\t\t\t\tres.status(200).json(resp);\n\t\t\t}).catch(function(err) {\n\t\t\t\tres.status(404).json(err);\n\t\t\t});\n\t\t},\n\t\tget_all_passes: function(req, res) {\n\t\t\tPasses.getPasses(req.params).then(function(resp) {\n\t\t\t\tres.status(200).json(resp);\n\t\t\t}).catch(function(err) {\n\t\t\t\tres.status(404).json(err);\n\t\t\t});\n\t\t},\n\t\tget_pass: function(req, res) {\n\t\t\tvar id = req.params.id\n\t\t\tlogger('get_pass', id);\n\t\t\tdb.get(id).then(function(resp) {\n\t\t\t\tres.status(200).json(resp);\n\t\t\t}).catch(function(err) {\n\t\t\t\tres.status(204).json(err);\n\t\t\t});\n\t\t},\n\t\tsign_pass: function(req, res) {\n\t\t\tvar id = req.params.id\n\t\t\tlogger('sign_pass', id);\n\t\t\tPasses.get(id).then(function(resp) {\n\t\t\t\tprogram.modules.Passbook.createPass(mockPass, function(err, p) {\n\t\t\t\t\t//\tres.status(200).json(p);\n\t\t\t\t\tres.set('Content-Type', 'application/vnd.apple.pkpass')\n\t\t\t\t\t\t.status(200)\n\t\t\t\t\t\t.download(p.pkpassFilename);\n\t\t\t\t});\n\t\t\t\t//\tres.status(200).json(resp);\n\t\t\t}).catch(function(err) {\n\t\t\t\tres.status(404).json(err);\n\t\t\t});\n\t\t},\n\t\tdelete_pass: function(req, res) {\n\t\t\tvar id = req.params.id;\n\t\t\tlogger('delete_pass', id);\n\n\t\t\tPasses.remove(id).then(function(resp) {\n\t\t\t\tres.status(200).json(resp);\n\t\t\t}).catch(function(err) {\n\t\t\t\tres.status(404).json(err);\n\t\t\t});\n\t\t},\n\t\tget_find_pass: function(req, res) {\n\t\t\tvar params = req.query;\n\t\t\tlogger('get_find_pass', params);\n\t\t\tPasses.find(params).then(function(resp) {\n\t\t\t\tres.status(200).json(resp);\n\t\t\t}).catch(function(err) {\n\t\t\t\tres.status(404).json(err);\n\t\t\t});\n\t\t}\n\t};\n};\n"
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/controllers/passes-controller.js",
    "longname": "lib/controllers/passes-controller.js~assert",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/passes-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/controllers/passes-controller.js",
    "longname": "lib/controllers/passes-controller.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/passes-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/controllers/passes-controller.js",
    "longname": "lib/controllers/passes-controller.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/controllers/passes-controller.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "program",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 53,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/db.js",
    "memberof": null,
    "longname": "lib/db.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nvar logger = require('debug')('jps-passbook-manager:store');\nvar instance = null;\nvar _ = require('lodash');\nvar Store = require('jfs');\n\nfunction FileDataStore(name, options) {\n\t//logger('new FileDataStore', name, options)\n\tvar db = new Store(name, options || {\n\t\t\tsaveId: '_key',\n\t\t\t//\ttype: 'single',\n\t\t\tpretty: true\n\t\t});\n\tvar _ds = {\n\t\tgetUUID: function (prefix) {\n\t\t\treturn prefix || 'doc-' + require('node-uuid').v4();\n\t\t},\n\t\tfindBy: function (params) {\n\t\t\tlogger('findBy', params);\n\t\t\treturn this.find(params).then(function (resp) {\n\t\t\t\treturn _(resp).first();\n\t\t\t});\n\t\t},\n\n\t\tfind: function (params) {\n\t\t\tlet self = this;\n\t\t\tlogger('find', params);\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tlet _out, _docs = [];\n\n\t\t\t\tself.allDocs(params).then(function (resp) {\n\t\t\t\t\t_out = _.where(resp.rows, params);\n\n\t\t\t\t\tif (_out && _out.length > 0) {\n\t\t\t\t\t\tlogger('find.success', _out.length);\n\t\t\t\t\t\tresolve(_out);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/*TODO - Never reject, just return empty */\n\t\t\t\t\t\treject({\n\t\t\t\t\t\t\terror: 'No match found',\n\t\t\t\t\t\t\tparams: params\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tallDocs: function (params) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tlet _docs = [], _obj;\n\t\t\t\tlogger('allDocs', params);\n\t\t\t\t_.defer(function () {\n\t\t\t\t\tdb.all(function (err, objs) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (_obj in objs) {\n\t\t\t\t\t\t\t_docs.push(objs[_obj]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (params) {\n\t\t\t\t\t\t\t_docs = _.filter(_docs, params);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\trows: _docs\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tput: function (doc, id) {\n\t\t\tlogger('put', doc._id);\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t_.defer(function () {\n\t\t\t\t\tdb.save(doc._id || id, doc, function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tlogger('put.error', err);\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger('put.success', doc._id);\n\t\t\t\t\t\t\tresolve(doc);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tpost: function (doc) {\n\t\t\tdoc._id = this.getUUID();\n\t\t\tlogger('post', doc);\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t_.defer(function () {\n\t\t\t\t\tdb.save(doc, function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tlogger('post.error', err);\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger('post.success', doc._id);\n\t\t\t\t\t\t\tresolve(doc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tremove: function (id) {\n\t\t\tlogger('remove', id);\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t_.defer(function () {\n\t\t\t\t\tdb.delete(id, function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tlogger('remove.error', err);\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger('remove.success', id);\n\t\t\t\t\t\t\tresolve(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tget: function (id) {\n\t\t\tlogger('get', id);\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t_.defer(function () {\n\t\t\t\t\tdb.get(id, function (err, obj) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tlogger('get.error', err);\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger('get.success', id);\n\t\t\t\t\t\t\tresolve(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tsaveAll: function (docs) {\n\t\t\tlet self = this;\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tlet saves = [];\n\n\t\t\t\tlet _done = _.after(docs.length, function () {\n\t\t\t\t\tlogger('saveAll.success');\n\t\t\t\t\tresolve(saves);\n\t\t\t\t});\n\t\t\t\tlogger('saveAll', docs.length);\n\n\t\t\t\t_.forEach(docs, function (doc) {\n\t\t\t\t\tdoc._id = doc._id || self.getUUID();\n\t\t\t\t\tself.put(doc).then(function (resp) {\n\t\t\t\t\t\tlogger('put.success', resp._id);\n\t\t\t\t\t\tsaves.push(resp);\n\t\t\t\t\t\t_done();\n\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\t_done(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n\t_ds.saveSync = db.saveSync;\n\t_ds.allSync = db.allSync;\n\t_ds.getSync = db.getSync;\n\n\t_ds.bulkDocs = _ds.saveAll;\n\t_ds.findOne = _ds.findBy;\n\n\tinstance = _ds;\n\n\treturn instance;\n}\n\nmodule.exports.getInstance = function () {\n\tif (instance) {\n\t\treturn instance;\n\t} else {\n\t\treturn new FileDataStore();\n\t}\n};\n\nexports.FileDataStore = FileDataStore;\n"
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "logger",
    "memberof": "lib/db.js",
    "longname": "lib/db.js~logger",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/db.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "instance",
    "memberof": "lib/db.js",
    "longname": "lib/db.js~instance",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/db.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/db.js",
    "longname": "lib/db.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/db.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Store",
    "memberof": "lib/db.js",
    "longname": "lib/db.js~Store",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/db.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "FileDataStore",
    "memberof": "lib/db.js",
    "longname": "lib/db.js~FileDataStore",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/db.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 59,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "getInstance",
    "memberof": "lib/db.js",
    "longname": "lib/db.js~getInstance",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/db.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 60,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/jps-passbook.js",
    "memberof": null,
    "longname": "lib/jps-passbook.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nconst fs = require('fs-extra');\nconst async = require('async');\nconst glob = require('glob');\nconst path = require('path');\nconst Pass = require('./models/pass');\nconst assert = require('assert');\nconst _ = require('lodash');\nconst child_process = require('child_process');\nconst debug = require('debug');\n\n/**\n * jpsPassbook contains methods for creating/validating/signing passes.\n * @param program\n * @returns {{\n * savePassTypeIdentifier: savePassTypeIdentifier,\n * savePassTypeIdentifierPromise: savePassTypeIdentifierPromise,\n * getPassTypeIdentifier: getPassTypeIdentifier,\n * getPassCerts: getPassCerts,\n * signPass: signPass,\n * validatePass: validatePass,\n * createPass: createPass,\n * batchPromise: batchPromise,\n * createPassPromise: createPassPromise,\n * signPassPromise: signPassPromise,\n * validatePassPromise: validatePassPromise\n * }}\n */\nmodule.exports = function jpsPassbook(program) {\n\tvar utils = program.utils;\n\tlet logger = program.getLogger('passbook');\n\tlet db = program.db;\n\tlet config = program.config.defaults;\n\tconst SignPass = program.require('signpass');\n\n\t/**\n\t * I handle getting the certificates for a pass.\n\t * @param id\n\t * @param cb\n\t * @returns {*}\n\t */\n\tfunction getPassCerts(id, cb) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tdb.findOne({\n\t\t\t\tdocType: 'pass-type-id',\n\t\t\t\tpassTypeIdentifier: id\n\t\t\t}).then(function (resp) {\n\t\t\t\tcb(null, resp);\n\t\t\t}).catch(function (err) {\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * I handle saving a pass type id to database and create pems.\n\t * @param obj\n\t * @param cb\n\t * @returns {*}\n\t */\n\tfunction savePassTypeIdentifier(obj, cb) {\n\t\tlet outputPath = path.resolve(program.config.defaults.dataPath, './', '');\n\t\tfs.ensureDirSync(outputPath);\n\t\tobj.wwdr = obj.wwdr || path.resolve(__dirname, '../certificate/wwdr-authority.pem');\n\n\t\tlogger('savePassTypeIdentifier', 'outputPath', outputPath);\n\t\tlogger('savePassTypeIdentifier', 'passed', obj);\n\n\t\tif (!obj.p12) {\n\t\t\treturn cb({\n\t\t\t\terror: 'Must provide path to .p12 certificate'\n\t\t\t});\n\t\t} else if (!obj.passphrase) {\n\t\t\treturn cb({\n\t\t\t\terror: 'Must provide passphrase to .p12 certificate'\n\t\t\t});\n\t\t}\n\n\t\tSignPass.createPems({\n\t\t\toutput: outputPath,\n\t\t\twwdr: obj.wwdr,\n\t\t\tpassTypeIdentifier: obj.passTypeIdentifier,\n\t\t\tpassphrase: obj.passphrase,\n\t\t\tp12: obj.p12\n\t\t}, function (err, resp) {\n\t\t\tif (err) {\n\t\t\t\tcb(err, null);\n\t\t\t}\n\t\t\tlogger('createPems', 'success', resp._id);\n\t\t\tprogram.db.put(resp).then(function (o) {\n\t\t\t\tif (cb) {\n\t\t\t\t\tcb(null, o);\n\t\t\t\t}\n\n\t\t\t}).catch(function (err) {\n\t\t\t\tif (cb) {\n\t\t\t\t\tcb(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * I handle saving the pass type identifier.\n\t * @param obj\n\t * @returns {*}\n\t */\n\tfunction savePassTypeIdentifierPromise(obj) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tsavePassTypeIdentifier(obj, function (err, resp) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t\tresolve(resp);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * I handle saving a upload to database and move to data directory\n\t * @param file\n\t * @returns {*}\n\t */\n\tfunction saveUpload(file) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tvar toFilename = path.resolve(program.config.defaults.dataPath, './uploads/' + file.originalFilename);\n\t\t\tvar _doc = {\n\t\t\t\t_id: 'file-' + file.name,\n\t\t\t\toriginalFilename: file.originalFilename,\n\t\t\t\tpath: toFilename,\n\t\t\t\tsize: file.size,\n\t\t\t\tname: file.name,\n\t\t\t\ttype: file.type\n\t\t\t};\n\t\t\tlogger('saveUpload', _doc);\n\t\t\tfs.copy(file.path, _doc.path, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t\tprogram.db.put(_doc).then(resolve, reject);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * I handle signing a .raw pass with signpass bin.\n\t * Fetch pass certs from db and use signPass\\\n\t * Fetch pass info from pass.json file instead of db.\n\t * @param pass\n\t * @param callback\n\t */\n\tfunction signPass(pass, callback) {\n\t\tpass = new Pass(pass);\n\t\tlet signpass = null;\n\t\tlet _passFilename = pass.filename || path.resolve(\n\t\t\t\tprogram.config.defaults.dataPath, `./${pass.passTypeIdentifier}/passes/${pass._id}.raw`);\n\t\tlet options = {\n\t\t\tpassFilename: null,\n\t\t\tcert: null,\n\t\t\tpassphrase: null,\n\t\t\tkey: null,\n\t\t\twwdr: null,\n\t\t\toutputFilename: null,\n\t\t\tcompress: true\n\t\t};\n\n\t\tlogger('signPass');\n\t\tlogger('signPass', 'pass', pass._id);\n\t\tlogger('signPass', 'filename', pass.filename);\n\n\t\t//\tassert(pass.rawFilename, 'has rawFilename');\n\n\t\t// TODO: SignPass instance using cert info\n\t\tgetPassCerts(pass.passTypeIdentifier, function (err, _certs) {\n\t\t\tlogger('getPassCerts', _certs._id);\n\t\t\tif (err) {\n\t\t\t\tcallback(err);\n\t\t\t}\n\t\t\t_certs.outputFilename = _passFilename.replace('.raw', '.pkpass');\n\t\t\t_certs.passFilename = pass.filename || pass.rawFilename || _passFilename;\n\n\t\t\tlogger('signPass', 'certs', _certs.cert);\n\t\t\t//\t\tlogger('sign pass options', _certs);\n\t\t\t//\tcallback(null, pass);\n\t\t\tsignpass = new SignPass(_certs);\n\t\t\tsignpass.signPromise().then(function (resp) {\n\t\t\t\tlogger('signPass', 'success', resp);\n\t\t\t\tpass.pkpassFilename = resp.dest;\n\t\t\t\tsavePass(pass, function (err, p) {\n\t\t\t\t\tcallback(err, resp);\n\t\t\t\t});\n\t\t\t}).catch(function (err) {\n\t\t\t\tcallback(err);\n\t\t\t});\n\n\t\t});\n\t}\n\n\t/**\n\t * Validate the contents of a signed pass\n\t */\n\tfunction validatePass(pass, callback) {\n\t\tlet _passFilename = pass.filename || pass.rawFilename || path.resolve(program.config.defaults.dataPath,\n\t\t\t\t`./${pass.passTypeIdentifier}/passes/${pass._id}.raw`);\n\t\tlet pathToPass = _passFilename;\n\t\tlet passDir = path.resolve(pathToPass, './');\n\t\tlet files = fs.readdirSync(passDir);\n\t\tlet manifest = {};\n\t\tlet _manifest = {};\n\t\tlet _dsStoreFilename = path.resolve(passDir, './.DS_Store');\n\t\tlet _manifestFilename = path.resolve(passDir, './manifest.json');\n\n\n\t\tlogger('validatePass', pathToPass);\n\n\t\tglob(passDir + '/**/*.*', function (err, files) {\n\t\t\tlogger('validatePass', 'files', files);\n\t\t\tif (err) {\n\t\t\t\tcallback(err)\n\t\t\t}\n\n\t\t\tlet _done = _.after(files.length, function () {\n\t\t\t\tfs.writeFile(_manifestFilename, JSON.stringify(_manifest), function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tcallback(err)\n\t\t\t\t\t}\n\t\t\t\t\tlogger('generate_json_manifest', 'writing', _manifestFilename);\n\t\t\t\t\tfs.remove(_dsStoreFilename, function () {\n\t\t\t\t\t\tcallback(null, pass);\n\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t_.forEach(files, function (file) {\n\t\t\t\tlogger('checksum', file);\n\t\t\t\t_manifest[file.replace(passDir + path.sep, '')] = utils.checksum(fs.readFileSync(file), 'sha1');\n\t\t\t\t_done();\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Copy pass assets from ./templates dir to pass destination.\n\t * @param type\n\t * @param dest\n\t * @param callback\n\t */\n\tfunction copyAssets(type, dest, callback) {\n\t\tlet templatesDir = path.resolve(__dirname, '../templates/' + type + '.raw/');\n\n\t\tlogger('copyAssets', 'from', templatesDir);\n\t\tlogger('copyAssets', 'to', dest);\n\t\tfs.ensureDir(dest, function (err) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err);\n\t\t\t}\n\t\t\tfs.copy(templatesDir, dest, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t}\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback(null, dest);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t}\n\n\t/**\n\t * I handle creating the pass.raw folder and writing the pass.json file into it.\n\t * @param pass\n\t * @param cb\n\t * @returns {*}\n\t */\n\tfunction createPass(pass, cb) {\n\t\tlogger('createPass', '============================= start');\n\n\t\tlet _pass = new Pass(pass);\n\t\tlet passName = pass._id;\n\n\t\treturn async.waterfall([\n\n\t\t\t\t//1. Build filenames\n\t\t\t\tfunction (callback) {\n\t\t\t\t\tlogger('createPass', '1. Build file names');\n\t\t\t\t\tpassName = passName.replace(/\\W/g, '-');\n\t\t\t\t\tpassName = passName.replace(' ', '-');\n\n\t\t\t\t\tlet passPath = path.resolve(config.dataPath,\n\t\t\t\t\t\tpass.passTypeIdentifier,\n\t\t\t\t\t\t'./passes/',\n\t\t\t\t\t\t`./${passName}.raw`);\n\n\t\t\t\t\tlogger('createPass', 'passType =', pass.type);\n\t\t\t\t\tlogger('createPass', 'passName =', passName);\n\t\t\t\t\tlogger('createPass', 'passPath =', passPath);\n\t\t\t\t\tcallback(null, pass.type, passPath);\n\t\t\t\t},\n\n\t\t\t\t//2. Copy assets\n\t\t\t\tfunction (_type, _path, callback) {\n\t\t\t\t\tlogger('createPass', '2. Copy assets');\n\t\t\t\t\tcopyAssets(_type, _path, callback);\n\t\t\t\t},\n\n\t\t\t\t//3. Create pass.json\n\t\t\t\tfunction (_path, callback) {\n\t\t\t\t\tlet passJsonPath = path.resolve(_path, './pass.json');\n\t\t\t\t\tlet passPath = _path;\n\t\t\t\t\tlogger('createPass', '3. Create pass.json');\n\t\t\t\t\tlogger('createPass', 'writeFile', passJsonPath);\n\t\t\t\t\tfs.writeFile(passJsonPath, JSON.stringify(pass), function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpass.filename = path.resolve(passPath);\n\t\t\t\t\t\tpass.rawFilename = path.resolve(passPath);\n\t\t\t\t\t\tcallback(null, pass);\n\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\t//4. Validate\n\t\t\t\tfunction (_pass, callback) {\n\t\t\t\t\tlogger('validatePass', '4.');\n\t\t\t\t\tvalidatePass(_pass, callback);\n\t\t\t\t},\n\n\t\t\t\t/*\n\t\t\t\t //4. sign\n\t\t\t\t function(_pass, callback) {\n\t\t\t\t logger('sign', '4. Sign Pass');\n\t\t\t\t signPass(_pass, callback);\n\t\t\t\t },\n\t\t\t\t */\n\n\t\t\t\t//5. Save\n\t\t\t\tfunction (_pass, callback) {\n\t\t\t\t\tlogger('createPass', '5. Save to database');\n\t\t\t\t\tsavePass(_pass, callback);\n\t\t\t\t}\n\t\t\t],\n\t\t\tfunction (err, resp) {\n\t\t\t\tlogger('createPass', '============================= complete');\n\t\t\t\tif (err) {\n\t\t\t\t\tcb(err);\n\t\t\t\t}\n\t\t\t\tcb(null, resp);\n\t\t\t});\n\t}\n\n\t/**\n\t * Save pass to data store.\n\t * @param pass\n\t * @param sign\n\t * @returns {*}\n\t */\n\tfunction savePass(pass, callback) {\n\t\tpass = new Pass(pass);\n\t\tlogger('savePass', pass._id);\n\t\tprogram.db.put(pass).then(function (resp) {\n\t\t\tlogger('savePass', 'success', resp._id);\n\t\t\tcallback(null, resp);\n\t\t}).catch(function (err) {\n\t\t\tlogger('savePass', 'error', err);\n\t\t\tcallback(err);\n\t\t});\n\t}\n\n\treturn {\n\t\tsavePassTypeIdentifier: savePassTypeIdentifier,\n\t\tsavePassTypeIdentifierPromise: savePassTypeIdentifierPromise,\n\t\tgetPassTypeIdentifier: function (id) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tgetPassCerts(id, function (err, resp) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(resp);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tgetPassCerts: getPassCerts,\n\t\tsignPass: signPass,\n\t\tvalidatePass: validatePass,\n\t\tcreatePass: createPass,\n\t\tbatchPromise: function (action, passes) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t//\tlet passes = [];\n\t\t\t\tlet _resp = [];\n\t\t\t\tlet _done = _.after(passes.length, function () {\n\t\t\t\t\tresolve(_resp);\n\t\t\t\t});\n\n\t\t\t\tlet _doBatch = function (_pass) {\n\t\t\t\t\tswitch (action) {\n\t\t\t\t\t\tcase 'create':\n\t\t\t\t\t\t\tcreatePass(_pass, function (err, p) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t\t\t\t_done();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_resp.push(p);\n\t\t\t\t\t\t\t\t_done();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'sign':\n\t\t\t\t\t\t\tsignPass(_pass, function (err, p) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t\t\t\t_done();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_resp.push(p);\n\t\t\t\t\t\t\t\t_done();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'validate':\n\t\t\t\t\t\t\tvalidatePass(_pass, function (err, p) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t\t\t\t_done();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_resp.push(p);\n\t\t\t\t\t\t\t\t_done();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t_.forEach(passes, function (_pass) {\n\t\t\t\t\tlogger('batch', action, _pass);\n\t\t\t\t\t_.defer(function () {\n\t\t\t\t\t\t_doBatch(_pass);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tcreatePassPromise: function (pass) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tcreatePass(pass, function (err, resp) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(resp);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tsignPassPromise: function (pass) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tsignPass(pass, function (err, resp) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(resp);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tvalidatePassPromise: function (pass) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvalidatePass(pass, function (err, resp) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(resp);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n};\n"
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fs",
    "memberof": "lib/jps-passbook.js",
    "longname": "lib/jps-passbook.js~fs",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/jps-passbook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "async",
    "memberof": "lib/jps-passbook.js",
    "longname": "lib/jps-passbook.js~async",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/jps-passbook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "glob",
    "memberof": "lib/jps-passbook.js",
    "longname": "lib/jps-passbook.js~glob",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/jps-passbook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "lib/jps-passbook.js",
    "longname": "lib/jps-passbook.js~path",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/jps-passbook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Pass",
    "memberof": "lib/jps-passbook.js",
    "longname": "lib/jps-passbook.js~Pass",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/jps-passbook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/jps-passbook.js",
    "longname": "lib/jps-passbook.js~assert",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/jps-passbook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/jps-passbook.js",
    "longname": "lib/jps-passbook.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/jps-passbook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "child_process",
    "memberof": "lib/jps-passbook.js",
    "longname": "lib/jps-passbook.js~child_process",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/jps-passbook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "debug",
    "memberof": "lib/jps-passbook.js",
    "longname": "lib/jps-passbook.js~debug",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/jps-passbook.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/jps-passbook.js",
    "longname": "lib/jps-passbook.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/jps-passbook.js",
    "importStyle": null,
    "description": "jpsPassbook contains methods for creating/validating/signing passes.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{\nsavePassTypeIdentifier: savePassTypeIdentifier,\nsavePassTypeIdentifierPromise: savePassTypeIdentifierPromise,\ngetPassTypeIdentifier: getPassTypeIdentifier,\ngetPassCerts: getPassCerts,\nsignPass: signPass,\nvalidatePass: validatePass,\ncreatePass: createPass,\nbatchPromise: batchPromise,\ncreatePassPromise: createPassPromise,\nsignPassPromise: signPassPromise,\nvalidatePassPromise: validatePassPromise\n}}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "program",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{\nsavePassTypeIdentifier: savePassTypeIdentifier,\nsavePassTypeIdentifierPromise: savePassTypeIdentifierPromise,\ngetPassTypeIdentifier: getPassTypeIdentifier,\ngetPassCerts: getPassCerts,\nsignPass: signPass,\nvalidatePass: validatePass,\ncreatePass: createPass,\nbatchPromise: batchPromise,\ncreatePassPromise: createPassPromise,\nsignPassPromise: signPassPromise,\nvalidatePassPromise: validatePassPromise\n}"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 71,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/models/device.js",
    "memberof": null,
    "longname": "lib/models/device.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst _ = require('lodash');\nconst assert = require('assert');\nmodule.exports = function(o) {\n\to = o || {};\n\tassert(o.deviceLibraryIdentifier, 'has device id');\n\tif (!o.deviceLibraryIdentifier) {\n\t\tthrow new Error('Must provide deviceLibraryIdentifier');\n\t}\n\n\tlet id = 'device-' + o.deviceLibraryIdentifier;\n\treturn _.assign({\n\t\t_id: id,\n\t\tpushToken: o.pushToken,\n\t\tdeviceLibraryIdentifier: o.deviceLibraryIdentifier,\n\t\tdocType: 'device',\n\t\tcreated_at: _.now(),\n\t\tupdated_at: _.now(),\n\t\ttype: 'device'\n\t}, o);\n};\n"
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/models/device.js",
    "longname": "lib/models/device.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/device.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/models/device.js",
    "longname": "lib/models/device.js~assert",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/device.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/models/device.js",
    "longname": "lib/models/device.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/device.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 75,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/models/index.js",
    "memberof": null,
    "longname": "lib/models/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nmodule.exports = {\n  Device: require('./device'),\n  Pass: require('./pass'),\n  Passes: require('./passes'),\n  Registration: require('./registration'),\n  User: require('./user'),\n  Users: require('./users')\n};\n"
  },
  {
    "__docId__": 76,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/models/pass.js",
    "memberof": null,
    "longname": "lib/models/pass.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst path = require('path');\nconst _ = require('lodash');\nconst config = require(path.resolve(__dirname, '../../config.js'));\n\nmodule.exports = function(obj) {\n\tobj = obj || {};\n\tlet type = obj.type || 'generic';\n\tlet passType = require(path.resolve(__dirname, '../../templates/schemas/' + type + '.json'));\n\tlet uuid = require('node-uuid').v4() || obj.serialNumber;\n\n\t_.assign(this, {\n\t\t\t_id: \"pass-\" + uuid,\n\n\n\t\t\tdocType: \"pass\",\n\t\t\ttype: type,\n\n\t\t\t// TODO: Standard keys - Information that is required for all passes.\n\t\t\tlastUpdated: _.now(),\n\t\t\t\"logoText\": \"Passbook Manager\",\n\t\t\t\"description\": \"This is the default pass description.\",\n\t\t\tformatVersion: 1,\n\t\t\t\"organizationName\": \"Passbook Manager\",\n\t\t\t\"passTypeIdentifier\": obj.passTypeIdentifier || config.passkit.passTypeIdentifier,\n\t\t\tserialNumber: uuid,\n\t\t\t\"teamIdentifier\": obj.teamIdentifier || config.passkit.teamIdentifier,\n\n\t\t\t//web service keys\n\t\t\t\"authenticationToken\": uuid,\n\t\t\t\"webServiceURL\": obj.webServiceURL || config.passkit.webServiceURL,\n\n\t\t\t// TODO: expiration keys - Information about when a pass expires and whether it is still valid.\n\t\t\t/*expirationDate: null,\n\t\t\t */\n\t\t\tvoided: false,\n\n\t\t\t//Apple pay keys\n\t\t\t/*\tnfc: [\n\t\t\t\t\t{\n\t\t\t\t\t\tmessage: '',\n\t\t\t\t\t\tencryptionPublicKey: ''\n\t\t\t\t\t}\n\t\t\t\t],*/\n\t\t\t\"barcode\": {\n\t\t\t\t\"message\": \"123456789\",\n\t\t\t\t\"format\": \"PKBarcodeFormatQR\",\n\t\t\t\t\"messageEncoding\": \"iso-8859-1\"\n\t\t\t},\n\n\t\t\t// TODO: Relevance keys\n\t\t\tbeacons: [\n\t\t\t\t/* [{\n\t\t\t\t\t\t\t\tmajor: null,\n\t\t\t\t\t\t\t\tminor: null,\n\t\t\t\t\t\t\t\tproximityUUID: '',\n\t\t\t\t\t\t\t\trelevantText: ''\n\t\t\t\t\t\t\t}]*/\n\t\t\t],\n\n\t\t\tlocations: [{\n\t\t\t\t\"longitude\": -122.00,\n\t\t\t\t\"latitude\": 37.00,\n\t\t\t\t//\taltitude: null,\n\t\t\t\trelevantText: 'Nearby'\n\t\t\t}],\n\n\t\t\tmaxDistance: 0,\n\t\t\t/*\n\t\t\trelevantDate: '',\n\t\tw3c date string*/\n\n\t\t\t//Visual apperance\n\t\t\tbarcodes: [],\n\n\t\t\t//Only for eventTicket and boardingPass\n\t\t\t//groupingIdentifier: '',\n\n\t\t\tlabelColor: 'rgb(0, 0, 0)',\n\t\t\tforegroundColor: \"rgb(72, 72, 72)\",\n\t\t\tbackgroundColor: \"rgb(183, 180, 183)\",\n\t\t\tsuppressStripShine: false,\n\n\t\t\t//File locations\n\t\t\tfilename: null,\n\t\t\tpkpassFilename: null,\n\t\t\trawFilename: null\n\n\t\t},\n\t\tpassType,\n\t\tobj\n\t\t/*{\n\t\t\t\"passTypeIdentifier\": config.passkit.passTypeIdentifier,\n\t\t\t\"teamIdentifier\": config.passkit.teamIdentifier,\n\t\t\t\"webServiceURL\": config.passkit.webServiceURL\n\t\t}*/\n\t);\n};\n"
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "lib/models/pass.js",
    "longname": "lib/models/pass.js~path",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/pass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/models/pass.js",
    "longname": "lib/models/pass.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/pass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "config",
    "memberof": "lib/models/pass.js",
    "longname": "lib/models/pass.js~config",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/pass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/models/pass.js",
    "longname": "lib/models/pass.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/pass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 81,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/models/passes.js",
    "memberof": null,
    "longname": "lib/models/passes.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst db = require('../db').getInstance();\nconst Pass = require('./pass');\nconst utils = require('../utils');\nconst _ = require('lodash');\nconst async = require('async');\nconst logger = utils.getLogger('passes');\nconst SignPass = require('../signpass');\n\nvar Passes = (function() {\n\tvar _passes = null;\n\treturn {\n\t\tsave: function(p) {\n\t\t\treturn db.put(new Pass(p));\n\t\t},\n\t\tadd: function(p) {\n\t\t\treturn db.put(new Pass(p));\n\t\t},\n\t\tget: function(p) {\n\t\t\treturn db.get(p);\n\t\t},\n\t\tremove: function(p) {\n\t\t\treturn db.remove(p);\n\t\t},\n\t\t/**\n\t\t * Get all passes\n\t\t * @param params\n\t\t * @returns {*}\n\t\t */\n\t\tgetPasses: function(params) {\n\t\t\tlet __passes = [];\n\t\t\tparams = _.assign({\n\t\t\t\tdocType: 'pass'\n\t\t\t}, params);\n\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tdb.allDocs(params).then(function(resp) {\n\t\t\t\t\t__passes = _.where(resp.rows, params);\n\t\t\t\t\tresolve(__passes);\n\n\t\t\t\t}).catch(reject);\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Find pass by params\n\t\t * @param params\n\t\t * @returns {*}\n\t\t */\n\t\tfind: function(params) {\n\t\t\tvar self = this,\n\t\t\t\tpass = null;\n\n\t\t\tlogger('find', params);\n\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\t_.defer(function() {\n\t\t\t\t\tasync.waterfall([\n\t\t\t\t\t\tfunction _getPasses(callback) {\n\t\t\t\t\t\t\tself.getPasses(params).then(function(resp) {\n\t\t\t\t\t\t\t\tcallback(null, resp);\n\t\t\t\t\t\t\t}).catch(function(err) {\n\t\t\t\t\t\t\t\tcallback(err, null);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction _findPass(passes, callback) {\n\t\t\t\t\t\t\tpass = _.find(passes, params);\n\t\t\t\t\t\t\tif (pass) {\n\t\t\t\t\t\t\t\tcallback(null, pass);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcallback('No pass', null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t], function(err, result) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treject({\n\t\t\t\t\t\t\t\terror: 'Pass not found',\n\t\t\t\t\t\t\t\tquery: params\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log('find', result);\n\t\t\t\t\t});\n\n\t\t\t\t});\n\n\t\t\t});\n\t\t},\n\t\tregisterDeviceWithPass: function(device, pass) {\n\n\t\t},\n\t\tfindPassesForDevice: function(device) {\n\n\t\t},\n\t\tfindPassBySerial: function(serial) {\n\t\t\tlogger('findPassBySerial', serial);\n\t\t\treturn this.find({\n\t\t\t\tdocType: 'pass',\n\t\t\t\tserialNumber: serial\n\t\t\t});\n\t\t}\n\t};\n})();\nmodule.exports = Passes;\n"
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "db",
    "memberof": "lib/models/passes.js",
    "longname": "lib/models/passes.js~db",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/passes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Pass",
    "memberof": "lib/models/passes.js",
    "longname": "lib/models/passes.js~Pass",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/passes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "utils",
    "memberof": "lib/models/passes.js",
    "longname": "lib/models/passes.js~utils",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/passes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/models/passes.js",
    "longname": "lib/models/passes.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/passes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "async",
    "memberof": "lib/models/passes.js",
    "longname": "lib/models/passes.js~async",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/passes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "logger",
    "memberof": "lib/models/passes.js",
    "longname": "lib/models/passes.js~logger",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/passes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "SignPass",
    "memberof": "lib/models/passes.js",
    "longname": "lib/models/passes.js~SignPass",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/passes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Passes",
    "memberof": "lib/models/passes.js",
    "longname": "lib/models/passes.js~Passes",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/passes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/models/registration.js",
    "memberof": null,
    "longname": "lib/models/registration.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst _ = require('lodash');\n\nfunction Registration(obj) {\n  let device_id = obj.device_id;\n  let pass_id = obj.pass_id || 'pass-' + obj.serial_number;\n  let id = `registration-${device_id}`;\n\n  return _.assign({\n    _id: id,\n    docType: 'registration',\n    device_id: device_id,\n    pass_id: pass_id,\n    auth_token: null,\n    push_token: null,\n    created_at: _.now(),\n    updated_at: _.now()\n  }, obj);\n}\n\nmodule.exports = Registration;\n"
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/models/registration.js",
    "longname": "lib/models/registration.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/registration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "Registration",
    "memberof": "lib/models/registration.js",
    "longname": "lib/models/registration.js~Registration",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/registration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 93,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/models/user.js",
    "memberof": null,
    "longname": "lib/models/user.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst _ = require('lodash');\n//const bcrypt = require('bcrypt');\nconst assert = require('assert');\n\nmodule.exports = function(o) {\n\t//assert(o.username, 'has username');\n\tassert(o.email, 'has email');\n\to = o || {};\n\tlet id = 'user-' + (o.email);\n\n\tid = id.replace(/\\W/g, '-');\n\tlet emailRegex = /@[\\w\\-][\\w\\-\\.]+[a-zA-Z]{1,4}/gi;\n\tif (o.email) {\n\t\to.username = o.email.replace(emailRegex, '');\n\t}\n\n\tlet methods = {};\n\n\tmethods.generateHash = function(password) {\n\t\treturn password;\n\t};\n\n\tmethods.validatePassword = function(password) {\n\t\treturn true;\n\t};\n\n\tmethods.checkPassword = function(p1, p2) {\n\t\treturn true;\n\t};\n\n\tlet profile = {\n\t\t_id: id,\n\t\tid: id,\n\t\tprovider: 'local',\n\t\tdisplayName: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tname: {\n\t\t\tfamilyName: null,\n\t\t\tgivenName: null,\n\t\t\tmiddleName: null\n\t\t},\n\t\temails: [{\n\t\t\tvalue: null,\n\t\t\ttype: null\n\t\t}],\n\t\tphotos: [],\n\t\tpassTypeIdentifiers: [],\n\t\tdata: {},\n\t\tdocType: 'user',\n\t\tcreated_at: _.now(),\n\t\tupdated_at: _.now()\n\t};\n\n\tif (o._json) {\n\t\tprofile.data = o._json;\n\t\tdelete o._json;\n\t}\n\n\tif (o._raw) {\n\t\tdelete o._raw;\n\t}\n\n\tlet User = _.assign(profile, o, methods);\n\n\treturn User;\n};\n"
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/models/user.js",
    "longname": "lib/models/user.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/user.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/models/user.js",
    "longname": "lib/models/user.js~assert",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/user.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/models/user.js",
    "longname": "lib/models/user.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/user.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/models/users.js",
    "memberof": null,
    "longname": "lib/models/users.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nconst _ = require('lodash');\nconst User = require('./user');\nconst logger = require('../utils').getLogger('Users');\n\nmodule.exports = function (db) {\n\n\tvar Users = {\n\t\tvalidate: function (user, done) {\n\t\t\tlet self = this;\n\t\t\tuser = new User(user);\n\t\t\tuser.password = user.generateHash(user.password);\n\t\t\tlogger('validate', user);\n\n\t\t\tself.findByUsername(user.username, done);\n\t\t},\n\n\t\tcreate: function (user, done) {\n\t\t\tuser = new User(user);\n\t\t\tuser.password = user.generateHash(user.password);\n\t\t\tlogger('save', user);\n\n\t\t\tdb.put(user).then(function (resp) {\n\t\t\t\tlogger('save', 'success', resp);\n\t\t\t\tdone(null, new User(resp));\n\t\t\t}).catch(function (err) {\n\t\t\t\tdone(err);\n\t\t\t});\n\t\t},\n\n\t\tsave: function (user, done) {\n\t\t\tlogger('save', user);\n\t\t\tuser = new User(user);\n\n\t\t\tdb.put(user).then(function (resp) {\n\t\t\t\tlogger('save', 'success', resp);\n\t\t\t\tdone(null, resp);\n\t\t\t}).catch(function (err) {\n\t\t\t\tdone(err);\n\t\t\t});\n\t\t},\n\n\t\tfindOne: function (params, done) {\n\t\t\tlogger('findOne', params);\n\t\t\tlet _user = null;\n\t\t\tthis.find(params, function (err, resp) {\n\t\t\t\tif (err) {\n\t\t\t\t\tdone(err);\n\t\t\t\t}\n\t\t\t\tlogger('findOne', 'success', resp);\n\t\t\t\t_user = new User(_(resp).first());\n\t\t\t\tdone(null, _user);\n\t\t\t});\n\t\t},\n\n\t\tfindByUsername: function (username, done) {\n\t\t\treturn this.findOne({\n\t\t\t\tusername: username\n\t\t\t}, done);\n\t\t},\n\n\t\tfindByEmail: function (email, done) {\n\t\t\treturn this.findOne({\n\t\t\t\temail: email\n\t\t\t}, done);\n\t\t},\n\n\t\tfind: function (params, done) {\n\t\t\tlogger('find', params);\n\t\t\tdb.find(params).then(function (resp) {\n\t\t\t\tdone(null, resp);\n\t\t\t}).catch(function (err) {\n\t\t\t\tlogger('find', 'error', err);\n\t\t\t\tdone(err);\n\t\t\t});\n\t\t},\n\n\t\tfindOrCreate: function (profile, done) {\n\t\t\tlet self = this;\n\t\t\tprofile = new User(profile);\n\t\t\tlogger('findOrCreate', profile);\n\n\t\t\tdb.find({\n\t\t\t\t_id: profile._id\n\t\t\t}).then(function (resp) {\n\t\t\t\tdone(null, resp);\n\t\t\t}).catch(function (err) {\n\t\t\t\tself.create(profile, done);\n\t\t\t});\n\t\t},\n\n\t\tgetUsers: function () {\n\t\t\treturn db.allDocs();\n\t\t}\n\t};\n\n\treturn Users;\n};\n"
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/models/users.js",
    "longname": "lib/models/users.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "User",
    "memberof": "lib/models/users.js",
    "longname": "lib/models/users.js~User",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "logger",
    "memberof": "lib/models/users.js",
    "longname": "lib/models/users.js~logger",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/models/users.js",
    "longname": "lib/models/users.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/models/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "db",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 102,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/program.js",
    "memberof": null,
    "longname": "lib/program.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nmodule.exports = function(config) {\n\tconst debug = require('debug');\n\tconst _ = require('lodash');\n\tconst http = require('http');\n\tconst path = require('path');\n\tconst pkg = require(path.resolve(__dirname, '../package.json'));\n\n\tconst defaultConfig = require(path.resolve(__dirname, '../config.js'));\n\tconst DB = require('./db');\n\t//const db = require('./adapters/db-couchdb')();\n\t//const db = require('./adapters/db-redis')();\n\tconst utils = require('./utils');\n\n\tvar logger = utils.getLogger('program');\n\tif (!config) {\n\t\tconfig = defaultConfig;\n\t}\n\n\tconfig = _.assign(defaultConfig, config);\n\tvar db = new DB.FileDataStore(config.dataPath);\n\tvar program = {\n\t\tpkg: pkg,\n\t\tlog: logger,\n\t\tgetLogger: utils.getLogger,\n\t\tutils: utils,\n\t\tmodels: require('./models'),\n\t\tmodules: {\n\t\t\tdb: db,\n\t\t\tPusher: require('./pusher'),\n\t\t\tPassbook: require('./jps-passbook'),\n\t\t\tSignPass: require('./signpass')\n\t\t},\n\t\tdb: db,\n\t\tserver: null,\n\t\tconfig: {\n\t\t\tdefaults: config\n\t\t},\n\t\trequire: function(name) {\n\t\t\treturn require(path.resolve(__dirname, name));\n\t\t}\n\t};\n\n\n\t// TODO: Save Config\n\t//config\n\tconfig._id = 'config';\n\n\t//db.put(config);\n\n\n\treturn program;\n};\n"
  },
  {
    "__docId__": 103,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/program.js",
    "longname": "lib/program.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/program.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 104,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/pusher.js",
    "memberof": null,
    "longname": "lib/pusher.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nmodule.exports = function(options) {\n\n  /*\n  const apn = require('apn');\n  const utils = require('./utils');\n\n  var logger = utils.getLogger('pusher');\n\n    var defaults = {\n      \"production\": false,\n      cert: '../certificates/passbookmanager-apns-cert.pem',\n      //certData: null,\n      key: '../certificates/passbookmanager-apns-key.p12',\n      //keyData: null,\n      passphrase: 'fred',\n      ca: '../certificates/AppleWWDRCA.cer',\n      //pfx: null,\n\n      //pfxData: null,\n\n      gateway: 'gateway.push.apple.com',\n      //gateway: 'gateway.sandbox.push.apple.com',\n\n      port: 2195,\n\n      rejectUnauthorized: true,\n\n      enhanced: true,\n      //errorCallback: onError,\n\n      cacheLength: 100,\n\n      autoAdjustCache: true,\n\n      connectionTimeout: 0\n    };\n    var token = '8701addcd7c847b07776c95883b79243527c5b959b12f81658d74fe2c1938fd';\n    var apnConnection = new apn.Connection(options);\n    var myDevice = new apn.Device(token);\n\n    var note = new apn.Notification();\n    note.expiry = Math.floor(Date.now() / 1000) + 3600;\n    note.payload = {};\n\n    apnConnection.pushNotification(note, myDevice);\n\n    */\n};\n/*\nvar options = {\n  \"batchFeedback\": true,\n  \"interval\": 300\n};\n\nvar feedback = new apn.Feedback(options);\nfeedback.on(\"feedback\", function(devices) {\n  devices.forEach(function(item) {\n    logger('feedback', item);\n    // Do something with item.device and item.time;\n  });\n});\n*/\n"
  },
  {
    "__docId__": 105,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "exports",
    "memberof": "lib/pusher.js",
    "longname": "lib/pusher.js~exports",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/pusher.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 106,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/signpass.js",
    "memberof": null,
    "longname": "lib/signpass.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst async = require('async');\nconst child_process = require('child_process');\nconst assert = require('assert');\nconst glob = require('glob');\nconst _ = require('lodash');\nconst path = require('path');\nconst os = require('os');\nconst fs = require('fs-extra');\nconst utils = require('./utils');\nconst zip = new require('node-zip')();\n\n\n\n/**\n * SignPass class\n\n var certFilename = path.resolve(__dirname, '../../certificates/pass-cert.pem');\n var key = path.resolve(__dirname, '../../certificates/pass-key.pem');\n var wwdrFilename = path.resolve(__dirname, '../../certificates/wwdr-authority.pem');\n var certPass = 'fred';\n var passFilename = path.resolve(__dirname, '../../data/pass-jonniespratley.json');\n var rawpassFilename = path.resolve(__dirname, '../../data/passes/pass-jonniespratley.raw');\n var pkpassFilename = path.resolve(__dirname, '../../data/passes/pass-jonniespratley.pkpass');\n var outputFilename = path.resolve(__dirname, '../temp/passes/');\n var files = null;\n\n\n var options = {\n \tpassFilename: rawpassFilename,\n \tcert: certFilename,\n \tpassphrase: certPass,\n \tkey: keyFilename,\n \twwdr: wwdrFilename,\n \toutputFilename: tmpdir,\n \tcompress: true\n };\n\n signpass = new SignPass(options);\n signpass.sign(function(err, resp) {\n\t _done(resp);\n });\n\n * @param pass_url {String} The url to the .pkpass\n * @param certificate_url {String} The url to the cert\n * @param certificate_password {String} The cert password\n * @param wwdr_certificate  {String} The url to the wwrd cert\n * @param output_url  {String} The output url\n * @param compress_into_zip_file {Boolean} Compress into zip.\n * @constructor\n */\nfunction SignPass(opts /*pass_url, cert_url, cert_password, key, wwdr_cert_path, output_url, compress, tmpdir*/ ) {\n\n\tvar defaults = {\n\t\tpassFilename: 'pass.raw',\n\t\tcert: 'pass.cert',\n\t\tpassphrase: null,\n\t\tkey: null,\n\t\twwdr: null,\n\t\toutputFilename: null,\n\t\tcompress: true,\n\t\tforce: true,\n\t\ttempDir: os.tmpdir()\n\t};\n\n\tvar options = _.extend(defaults, opts);\n\tlet logger = utils.getLogger('signpass:' + path.basename(options.passFilename));\n\tlogger('SignPass', options);\n\n\tlet temporary_directory = options.tempDir;\n\n\t//\tassert(options.passFilename, 'has passFilename');\n\ttemporary_directory += path.sep + _.last(options.passFilename.split('/'));\n\n\tconst certificate_url = options.cert;\n\tconst certificate_password = options.passphrase;\n\tconst key_url = options.key;\n\tconst compress_into_zip_file = options.compress;\n\n\tif (!options.outputFilename) {\n\t\toptions.outputFilename = path.resolve(path.dirname(options.passFilename));\n\t}\n\n\tvar signature_url = path.resolve(temporary_directory, './signature');\n\tvar cert_url = options.cert;\n\tvar cert_password = options.passphrase;\n\n\tvar pass_url = options.passFilename;\n\tvar output_url = options.outputFilename;\n\tvar zip_url = '';\n\tvar pkpass_url = '';\n\n\tconst wwdr_certificate = options.wwdr || path.resolve(__dirname, '../certificates/wwdr-authority.pem');\n\tvar manifest_url;\n\n\n\tassert(options, 'has options');\n\tassert(pass_url, 'has pass url');\n\tassert(cert_url, 'has cert url');\n\tassert(cert_password, 'has cert password');\n\tassert(wwdr_certificate, 'has wwdr');\n\n\t//\tassert(fs.existsSync(cert_url), 'has cert');\n\t//assert(fs.existsSync(pass_url), 'has pass.raw');\n\t//\tassert(fs.existsSync(wwdr_certificate), 'has WWDR Cert');\n\n\tlogger('SignPass', 'instance');\n\tlogger('temporary_directory', temporary_directory);\n\tlogger('certificate_url', certificate_url);\n\tlogger('certificate_password', certificate_password);\n\tlogger('wwdr_certificate', wwdr_certificate);\n\tlogger('output_url', output_url);\n\tlogger('compress_into_zip_file', compress_into_zip_file);\n\n\tfunction validate_directory_as_unsigned_raw_pass(cb) {\n\t\tlet has_manifiest = fs.existsSync(path.resolve(pass_url, './manifest.json'));\n\t\tlet has_signiture = fs.existsSync(path.resolve(pass_url, './signature'));\n\t\tif (options.force) {\n\t\t\tforce_clean_raw_pass(cb);\n\t\t} else if (has_signiture || has_manifiest) {\n\t\t\tthrow new Error('Pass contains artifacts that must be removed!');\n\t\t} else {\n\t\t\tif (cb) {\n\t\t\t\tcb(null, null);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction force_clean_raw_pass(callback) {\n\t\tlet manifest_file = path.resolve(pass_url, './manifest.json');\n\t\tlet signature_file = path.resolve(pass_url, './signature');\n\t\tlet files = [manifest_file, signature_file];\n\t\tlet _done = _.after(files.length, function() {\n\t\t\tcallback(null, {\n\t\t\t\tmanifest: manifest_file,\n\t\t\t\tsignature: signature_file\n\t\t\t});\n\t\t});\n\n\t\t_.forEach(files, function(file) {\n\t\t\tlogger('force_clean_raw_pass', 'removing', path.basename(file));\n\t\t\tfs.remove(file, function(err) {\n\t\t\t\t_done(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction create_temporary_directory(callback) {\n\t\tlogger('create_temporary_directory', temporary_directory);\n\t\tfs.ensureDir(path.resolve(temporary_directory), function(err) {\n\t\t\tcallback(err, temporary_directory);\n\t\t});\n\t}\n\n\tfunction copy_pass_to_temporary_location(callback) {\n\t\tlogger('copy_pass_to_temporary_location', pass_url, temporary_directory);\n\t\t//\tfs.ensureDirSync(pass_url);\n\t\tfs.copy(path.resolve(pass_url, './'), temporary_directory, function(err) {\n\t\t\tcallback(err, pass_url);\n\t\t});\n\t}\n\n\tfunction clean_ds_store_files(callback) {\n\t\tlogger('clean_ds_store_files');\n\t\tlet ds_files = path.resolve(temporary_directory, './.DS_Store');\n\t\tfs.remove(ds_files, function(err) {\n\t\t\tcallback(err, ds_files);\n\t\t});\n\t}\n\n\tfunction generate_json_manifest(callback) {\n\t\tlogger('generate_json_manifest');\n\t\tlet _manifest = {};\n\t\tlet _manifestFilename = path.resolve(temporary_directory, './manifest.json');\n\n\t\tmanifest_url = _manifestFilename;\n\t\tfs.removeSync(path.resolve(temporary_directory, './.DS_Store'));\n\t\tglob(temporary_directory + path.sep + '**/*.*', function(err, files) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null)\n\t\t\t}\n\t\t\tif (files && files.length) {\n\t\t\t\tfiles.forEach(function(file) {\n\t\t\t\t\t//\tlogger('checksum', file);\n\t\t\t\t\t_manifest[file.replace(temporary_directory + path.sep, '')] = utils.checksum(fs.readFileSync(file), 'sha1');\n\t\t\t\t});\n\t\t\t\tfs.writeFile(_manifestFilename, JSON.stringify(_manifest), function(err) {\n\t\t\t\t\tlogger('generate_json_manifest', 'wrote to', _manifestFilename);\n\t\t\t\t\tcallback(err, _manifestFilename);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction sign_manifest(cb) {\n\t\tlet signedContents;\n\t\tlogger('sign_manifest');\n\t\tsignature_url = path.resolve(temporary_directory, './signature');\n\n\t\tlet sign_pass_cmd =\n\t\t\t`openssl smime \\\n\t\t\t-binary \\\n\t\t\t-sign \\\n\t\t\t-certfile ${wwdr_certificate} \\\n\t\t\t-signer ${certificate_url} \\\n\t\t\t-inkey ${key_url} \\\n\t\t\t-in ${manifest_url} \\\n\t\t\t-out ${signature_url} \\\n\t\t\t-outform DER \\\n\t\t\t-passin pass:${certificate_password}`;\n\n\t\tlogger('cmd', sign_pass_cmd);\n\n\t\tlet exec = child_process.exec(sign_pass_cmd, {\n\t\t\tcwd: pass_url\n\t\t}, function(error, stdout, stderr) {\n\t\t\tif (error) {\n\t\t\t\tcb(error, null);\n\t\t\t} else {\n\t\t\t\tlogger('sign_manifest', 'child_process', stdout, stderr);\n\t\t\t\tcb(null, signature_url);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction compress_pass_file(callback) {\n\t\tlogger('compress_pass_file');\n\t\tlet filename = temporary_directory.replace('.raw', '.zip');\n\t\tlet zip_pass_cmd = `zip -R * ${filename}`;\n\n\t\tpkpass_url = filename.replace('.zip', '.pkpass');\n\t\tglob(path.resolve(temporary_directory, './*'), function(err, files) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t}\n\t\t\tvar done = _.after(files.length, function() {\n\t\t\t\tvar data = zip.generate({\n\t\t\t\t\tbase64: false,\n\t\t\t\t\tcompression: 'DEFLATE'\n\t\t\t\t});\n\t\t\t\tzip_url = filename;\n\t\t\t\tfs.writeFileSync(filename, data, 'binary');\n\t\t\t\tlogger('compress_pass_file', 'writeZip', path.basename(filename));\n\t\t\t\tcallback(null, filename);\n\t\t\t});\n\n\t\t\t_.forEach(files, function(file) {\n\t\t\t\tlogger('compress_pass_file', 'add', path.basename(file));\n\t\t\t\tzip.file(path.basename(file), fs.readFileSync(path.resolve(file)));\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t};\n\n\tfunction rename_pass_file(cb) {\n\t\tpkpass_url = zip_url.replace('.zip', '.pkpass');\n\t\tlogger('rename_pass_file', 'to', pkpass_url);\n\t\tfs.copy(zip_url, pkpass_url, function(err) {\n\t\t\tif (err) {\n\t\t\t\tcb(err);\n\t\t\t}\n\t\t\tcb(null, pkpass_url);\n\t\t});\n\t}\n\n\tfunction copy_to_dest(cb) {\n\t\toutput_url = path.resolve(options.outputFilename, '../', path.basename(pkpass_url));\n\t\tfs.remove(output_url, function(err) {\n\t\t\tif (err) {\n\t\t\t\tcb(err);\n\t\t\t}\n\t\t\tlogger('copy_to_dest', output_url);\n\t\t\tfs.copy(pkpass_url, output_url, function(err) {\n\t\t\t\tif (err) {\n\t\t\t\t\tcb(err);\n\t\t\t\t}\n\t\t\t\tcb(null, output_url);\n\t\t\t});\n\t\t});\n\n\t}\n\n\tfunction delete_temp_dir(cb) {\n\t\tlogger('delete_temp_dir');\n\t\ttry {\n\t\t\tfs.removeSync(pkpass_url);\n\t\t\tfs.removeSync(zip_url);\n\t\t\tfs.removeSync(temporary_directory);\n\t\t\tcb(null, temporary_directory);\n\t\t} catch (err) {\n\t\t\tcb(err);\n\t\t}\n\t}\n\n\tfunction sign_pass(cb) {\n\t\tlogger('sign_pass');\n\t\tasync.series({\n\t\t\tvalidate: validate_directory_as_unsigned_raw_pass,\n\t\t\traw: force_clean_raw_pass,\n\t\t\ttmpdir: create_temporary_directory,\n\t\t\tcopy: copy_pass_to_temporary_location,\n\t\t\tclean: clean_ds_store_files,\n\t\t\tmanifest: generate_json_manifest,\n\t\t\tsignature: sign_manifest,\n\t\t\tzip: compress_pass_file,\n\t\t\tpkpass: rename_pass_file,\n\t\t\tdest: copy_to_dest,\n\t\t\tcleantmpdir: delete_temp_dir\n\t\t}, function(err, result) {\n\t\t\tlogger('sign_pass', 'complete', result);\n\t\t\tif (err) {\n\t\t\t\tcb(err);\n\t\t\t}\n\t\t\tif (cb) {\n\t\t\t\tcb(err, result);\n\t\t\t}\n\t\t});\n\n\t}\n\treturn {\n\t\tsign: sign_pass,\n\t\tsignPromise: function(raw) {\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tsign_pass(function(err, resp) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(resp);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n\n\n\n/*\n$ openssl pkcs12 -in cert.p12 -clcerts -nokeys -out certificate.pem\n$ openssl pkcs12 -in cert.p12 -nocerts -out key.pem\n\n$ openssl smime -sign \\\n\t\t\t\t\t\t\t-detach \\\n\t\t\t\t\t\t\t-in manifest.json \\\n\t\t\t\t\t\t\t-out ./signature \\\n\t\t\t\t\t\t\t-outform DER \\\n\t\t\t\t\t\t\t-inkey ./certificates/pass-passbookmanager-key.p12 \\\n\t\t\t\t\t\t\t-signer ./certificates/AppleWWDRCA.cer\n*/\n\nSignPass.passTypes = [{\n\tvalue: 'generic',\n\tname: 'Generic'\n}, {\n\tvalue: 'github',\n\tname: 'Github'\n}, {\n\tvalue: 'boardingPass',\n\tname: 'Boarding Pass'\n}, {\n\tvalue: 'coupon',\n\tname: 'Coupon'\n}, {\n\tvalue: 'eventTicket',\n\tname: 'Event Ticket'\n}, {\n\tvalue: 'storeCard',\n\tname: 'Store Card'\n}];\n\n\nfunction PassTypeId(id, o) {\n\tlet _id = id.replace(/\\W/g, '-');\n\treturn _.assign({\n\t\t_id: _id,\n\t\tpassTypeIdentifier: o.passTypeIdentifier,\n\t\tcert: '',\n\t\tkey: '',\n\t\tpassphrase: '',\n\t\tdocType: 'pass-type-id'\n\t}, o);\n}\n\nSignPass.createPassTypeId = function(id, o) {\n\treturn new PassTypeId(id, o);\n};\n\n/*\n take a apple .p12 pass cert and make the pems.\n $ openssl pkcs12 -in cert.p12 -clcerts -nokeys -out certificate.pem\n $ openssl pkcs12 -in cert.p12 -nocerts -out key.pem\n\n @param {String} p12 - The path to the .p12 cert.\n @param {String} pass - The passpharse for the .p12 cert.\n*/\nSignPass.createPems = function(options, callback) {\n\tlet _options = {\n\t\tpassphrase: null,\n\t\tpassTypeIdentifier: null,\n\t\tp12: null,\n\t\toutput: null\n\t};\n\t_.assign(_options, options);\n\n\tassert(_options.passTypeIdentifier, 'has passTypeIdentifier');\n\t//assert(_options.pass, 'has pass');\n\tassert(_options.passphrase, 'has passphrase');\n\tassert(fs.existsSync(_options.p12), 'has p12');\n\n\tlet passTypeIdentifier = _options.passTypeIdentifier;\n\tlet passTypeIdentifierFilename = passTypeIdentifier.replace(/\\W/g, '-');\n\tlet p12 = _options.p12;\n\tlet passphrase = _options.passphrase;\n\tlet certOutputPath = path.resolve(_options.output, './', passTypeIdentifier, './certs');\n\n\tlet _out = [],\n\t\tcmd1 = {},\n\t\tcmd2 = {},\n\t\t_p12,\n\t\t_outCert,\n\t\t_cmd1,\n\t\t_cmd2,\n\t\t_outKey,\n\t\t_path = path.parse(p12);\n\n\tfunction _checkCert(cb) {\n\t\tfs.exists(p12, function(err) {\n\t\t\tcb(err, p12);\n\t\t});\n\t}\n\n\tfunction _copyP12(cb) {\n\t\t_p12 = path.resolve(certOutputPath, './', path.basename(p12));\n\t\tfs.removeSync(_p12);\n\t\tfs.copy(path.resolve(p12), _p12, function(err) {\n\t\t\tp12 = _p12;\n\t\t\tcb(err, _p12);\n\t\t});\n\t}\n\n\tfunction _certCmd(cb) {\n\t\t_path.ext = '.pem';\n\t\t_path.name += '-cert';\n\t\t_outCert = p12.replace('.p12', '-cert.pem');\n\t\t_cmd1 = `openssl pkcs12 -in ${p12} -passin pass:${passphrase} -clcerts -nokeys -out ${_outCert}`;\n\t\tfs.removeSync(_outCert);\n\n\t\tcmd1 = {\n\t\t\tfilename: _outCert,\n\t\t\tcmd: _cmd1\n\t\t};\n\t\tcb(null, _outCert);\n\t}\n\n\tfunction _keyCmd(cb) {\n\t\t_path.name += '-key';\n\t\t_outKey = p12.replace('.p12', '-key.pem');\n\t\t_cmd2 = `openssl pkcs12 -in ${p12} -nocerts -passout pass:${passphrase} -passin pass:${passphrase} -out ${_outKey}`;\n\t\tfs.removeSync(_outKey);\n\n\t\tcmd2 = {\n\t\t\tfilename: _outKey,\n\t\t\tcmd: _cmd2\n\t\t};\n\t\tcb(null, _outKey);\n\t}\n\n\tfunction _certCmdExec(cb) {\n\t\tchild_process.exec(cmd1.cmd, function(err, stdout, stderr) {\n\t\t\tcb(err, cmd1.cmd);\n\t\t});\n\t}\n\n\tfunction _keyCmdExec(cb) {\n\t\tchild_process.exec(cmd2.cmd, function(err, stdout, stderr) {\n\t\t\tcb(err, cmd2.cmd);\n\t\t});\n\t}\n\n\tasync.series({\n\n\t\tp12: _copyP12,\n\t\tcert: _certCmd,\n\t\tkey: _keyCmd,\n\t\tcertcmd: _certCmdExec,\n\t\tkeycmd: _keyCmdExec\n\t}, function(err, result) {\n\n\t\tlet _out = SignPass.createPassTypeId(passTypeIdentifier, result);\n\t\t_out.passTypeIdentifier = passTypeIdentifier;\n\t\t_out.wwdr = path.resolve(__dirname, '../certificates/wwdr-authority.pem');\n\t\t_out.p12 = p12;\n\t\t_out.passphrase = passphrase;\n\t\tif (callback) {\n\t\t\tcallback(err, _out);\n\t\t}\n\t});\n};\n\nSignPass.createPemsPromise = function(options) {\n\treturn new Promise(function(resolve, reject) {\n\t\tSignPass.createPems(options, function(err, resp) {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t\tresolve(resp);\n\t\t});\n\t});\n};\n\nmodule.exports = SignPass;\n"
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "async",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~async",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "child_process",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~child_process",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "assert",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~assert",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "glob",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~glob",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~_",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~path",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "os",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~os",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "fs",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~fs",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "utils",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~utils",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "zip",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~zip",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "SignPass",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~SignPass",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": "SignPass class\nvar certFilename = path.resolve(__dirname, '../../certificates/pass-cert.pem');\nvar key = path.resolve(__dirname, '../../certificates/pass-key.pem');\nvar wwdrFilename = path.resolve(__dirname, '../../certificates/wwdr-authority.pem');\nvar certPass = 'fred';\nvar passFilename = path.resolve(__dirname, '../../data/pass-jonniespratley.json');\nvar rawpassFilename = path.resolve(__dirname, '../../data/passes/pass-jonniespratley.raw');\nvar pkpassFilename = path.resolve(__dirname, '../../data/passes/pass-jonniespratley.pkpass');\nvar outputFilename = path.resolve(__dirname, '../temp/passes/');\nvar files = null;\nvar options = {\n\tpassFilename: rawpassFilename,\n\tcert: certFilename,\n\tpassphrase: certPass,\n\tkey: keyFilename,\n\twwdr: wwdrFilename,\n\toutputFilename: tmpdir,\n\tcompress: true\n};\nsignpass = new SignPass(options);\nsignpass.sign(function(err, resp) {\n_done(resp);\n});",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pass_url",
        "description": "{String} The url to the .pkpass"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "certificate_url",
        "description": "{String} The url to the cert"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "certificate_password",
        "description": "{String} The cert password"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "wwdr_certificate",
        "description": "{String} The url to the wwrd cert"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "output_url",
        "description": "{String} The output url"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "compress_into_zip_file",
        "description": "{Boolean} Compress into zip."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 118,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "PassTypeId",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~PassTypeId",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 371,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createPassTypeId",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~createPassTypeId",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 383,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 120,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createPems",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~createPems",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 395,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 121,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createPemsPromise",
    "memberof": "lib/signpass.js",
    "longname": "lib/signpass.js~createPemsPromise",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/signpass.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 499,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 122,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "lib/utils.js",
    "memberof": null,
    "longname": "lib/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst request = require('request');\nconst path = require('path');\nconst crypto = require('crypto');\nconst pkg = require(path.resolve(__dirname, '../package.json'));\nconst debug = require('debug');\n\nvar utils = {};\n\n\nutils.getLogger = function(name) {\n\treturn debug(pkg.name + ':' + name);\n};\n\nvar logger = utils.getLogger('utils');\n\n\nfunction checksum(str, algorithm, encoding) {\n\treturn crypto\n\t\t.createHash(algorithm || 'md5')\n\t\t.update(str, 'utf8')\n\t\t.digest(encoding || 'hex')\n}\nutils.checksum = checksum;\n\n\n/**\n * I take a github username and fetch the user info\n * and return a pss object.\n * @param username\n */\nvar githubToPass = function(username, cb) {\n\tvar Pass = require('./models/pass');\n\tlet github = {};\n\tlet pass = {\n\t\tdescription: null\n\t};\n\n\tvar options = {\n\t\tmethod: 'GET',\n\t\turl: 'https://api.github.com/users/' + username,\n\t\theaders: {\n\t\t\t'User-Agent': 'jps-passbook-manager',\n\t\t\t'content-type': 'application/json'\n\t\t}\n\t};\n\n\tlogger('githubToPass', 'request', options.method, options.url);\n\trequest(options, function(error, response, body) {\n\n\t\tvar user = JSON.parse(body);\n\t\t//\tconsole.log(user);\n\t\tlogger('githubToPass', 'response', user);\n\t\tvar p = new Pass({\n\t\t\t_id: 'pass-' + user.login,\n\t\t\ttype: 'github',\n\t\t\tgeneric: {}\n\t\t});\n\t\tp.description = `${user.name} Github`;\n\t\tp.logoText = 'Github';\n\t\tp.organizationName = user.company;\n\n\t\tp.generic.primaryFields = [{\n\t\t\tkey: 'name',\n\t\t\tlabel: 'Name',\n\t\t\tvalue: user.name\n\t\t}];\n\n\t\tp.generic.secondaryFields = [{\n\t\t\tkey: 'username',\n\t\t\tlabel: 'Username',\n\t\t\tvalue: user.username\n\t\t}];\n\n\t\tp.generic.backFields = [{\n\t\t\tkey: 'user_following',\n\t\t\tlabel: 'Following',\n\t\t\tvalue: user.following\n\t\t}, {\n\t\t\tlabel: 'Followers',\n\t\t\tkey: 'user_followers',\n\t\t\tvalue: user.followers\n\t\t}, {\n\t\t\tlabel: 'Repos',\n\t\t\tkey: 'repos',\n\t\t\tvalue: user.public_repos\n\t\t}, {\n\t\t\tlabel: 'Gists',\n\t\t\tkey: 'gists',\n\t\t\tvalue: user.public_gists\n\t\t}, {\n\t\t\tlabel: 'Location',\n\t\t\tkey: 'location',\n\t\t\tvalue: user.location\n\t\t}, {\n\t\t\tlabel: 'Blog',\n\t\t\tkey: 'blog',\n\t\t\tvalue: user.blog\n\t\t}];\n\n\t\tcb(error, {\n\t\t\tuser: user,\n\t\t\tpass: p\n\t\t});\n\t});\n\n};\nutils.githubToPass = githubToPass;\n\n\nmodule.exports = utils;\n"
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "request",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~request",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~path",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "crypto",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~crypto",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "pkg",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~pkg",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "debug",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~debug",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "utils",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~utils",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "getLogger",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~getLogger",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 130,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "logger",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~logger",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "checksum",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~checksum",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      },
      {
        "name": "algorithm",
        "types": [
          "*"
        ]
      },
      {
        "name": "encoding",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 132,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "githubToPass",
    "memberof": "lib/utils.js",
    "longname": "lib/utils.js~githubToPass",
    "access": null,
    "export": false,
    "importPath": "jps-passbook-manager/lib/utils.js",
    "importStyle": null,
    "description": "I take a github username and fetch the user info\nand return a pss object.",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 134,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 135,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 139,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 148,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 149,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 150,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 151,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 152,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 153,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 154,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 155,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 156,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 157,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 158,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 159,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 160,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 161,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 162,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 163,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 164,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 165,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 166,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 167,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 168,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 169,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 170,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 171,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 172,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 173,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 174,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 175,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 176,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 177,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 178,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 179,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 180,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 182,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 183,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 184,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 185,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 186,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 187,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 188,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/admin-controller-spec.js",
    "memberof": null,
    "longname": "specs/admin-controller-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst path = require('path');\nconst _ = require('lodash');\nconst assert = require('assert');\nconst request = require('supertest');\nconst express = require('express');\nconst mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nconst program = mocks.program;\nconst AdminController = program.require('controllers/admin-controller');\n\nlet mockDevice = mocks.mockDevice;\nlet testDevice = mockDevice;\ndelete testDevice._id;\n\nlet mockPass = mocks.mockPasses[2];\nlet testPass = mockPass;\ndelete testPass._id;\n\nlet mockLog = {\n\tname: 'test',\n\tdocType: 'log'\n};\n\nlet controller;\nlet app = express();\nlet mockIdentifer = {\n\tpassTypeIdentifier: 'pass.io.passbookmanager.test',\n\twwdr: path.resolve(__dirname, '../../certificates/wwdr-authority.pem'),\n\tp12: path.resolve(__dirname, '../../certificates/pass.io.passbookmanager.test.p12'),\n\tpassphrase: 'test'\n};\n\nconst AdminRoutes = require(path.resolve(__dirname, '../../routes/jps-middleware-admin'))(program, app);\n\ndescribe('Admin', function () {\n\tbefore(function () {\n\t\tprogram.db.saveAll([\n\t\t\tmockLog,\n\t\t\tmockDevice,\n\t\t\ttestDevice,\n\t\t\tmockPass,\n\t\t\ttestPass\n\t\t]).then(function (resp) {\n\t\t\tconsole.log('Saved', resp);\n\t\t});\n\t});\n\n\tdescribe('Admin Controller', function () {\n\t\tbefore(function () {\n\t\t\tcontroller = new AdminController(program);\n\t\t});\n\t\tit('should be defined', function (done) {\n\t\t\tassert(AdminController);\n\t\t\tdone();\n\t\t});\n\t\tit('should return instance', function (done) {\n\t\t\tassert(controller);\n\t\t\tdone();\n\t\t});\n\t\tit('post_passTypeIdentifier - Handles creating passTypeIdentifier', function (done) {\n\t\t\tassert(controller.post_passTypeIdentifier);\n\t\t\tdone();\n\t\t});\n\t\tit('get_downloadPass - Handles download pass request', function (done) {\n\t\t\tassert(controller.get_downloadPass);\n\t\t\tdone();\n\t\t});\n\t\tit('get_signPass - Handles signing a pass', function (done) {\n\t\t\tassert(controller.get_signPass);\n\t\t\tdone();\n\t\t});\n\t\tit('get_find - Handles finding a pass', function (done) {\n\t\t\tassert(controller.get_find);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tdescribe('Admin Routes', function () {\n\t\tdescribe('Identifiers', function () {\n\t\t\tit('/api/v1/admin/identifiers - should create new pass type identifier entry', function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.post(`/api/v1/admin/identifiers/${mockIdentifer.passTypeIdentifier}`)\n\t\t\t\t\t.field('passphrase', mockIdentifer.passphrase)\n\t\t\t\t\t.attach('file', mockIdentifer.p12)\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(201, done);\n\t\t\t});\n\n\t\t\tit('/api/v1/admin/identifiers - should get pass type identifier', function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get(`/api/v1/admin/identifiers/${mockIdentifer.passTypeIdentifier}`)\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\n\t\t\tit('/api/v1/admin/identifiers - should not get pass type identifier', function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get(`/api/v1/admin/identifiers/unknown-identifier`)\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(404, done);\n\t\t\t});\n\t\t});\n\n\t\tdescribe('Passes', function () {\n\t\t\tit('POST - /api/v1/admin/passes - should create pass', function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.post('/api/v1/admin/passes')\n\t\t\t\t\t.send({\n\t\t\t\t\t\ttype: 'generic'\n\t\t\t\t\t})\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(201, done);\n\t\t\t});\n\t\t\tit('PUT - /api/v1/admin/passes/:ID - should update pass', function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.put(`/api/v1/admin/passes/${mockPass._id}`)\n\t\t\t\t\t.send(mockPass)\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\t\t\tit('GET - /api/v1/admin/passes/:id - should return 1 pass', function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get(`/api/v1/admin/passes/${mockPass._id}`)\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\t\t});\n\n\t\tdescribe('Finding', function () {\n\n\t\t\tit('GET - /api/v1/admin/find?docType=device - should return documents matching.', function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get('/api/v1/admin/find?docType=device')\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\n\t\t\tit('GET - /api/v1/admin/find?name=value - should return 404 if no match', function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get('/api/v1/admin/find?not-a-key=value')\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(404, done);\n\t\t\t});\n\t\t});\n\n\n\t\tdescribe('Signing', function () {\n\t\t\tit(`GET - /api/v1/admin/passes/sign/:id - should sign pass _id ${mockPass._id}`, function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get(`/api/v1/admin/passes/sign/${mockPass._id}`)\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\t\t\tit(`GET - /api/v1/admin/passes/sign/:id - should not sign unknown pass _id`, function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get(`/api/v1/admin/passes/sign/unknown`)\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(404, done);\n\t\t\t});\n\t\t});\n\t\tdescribe('Downloading', function () {\n\t\t\tit(`GET - /api/v1/admin/passes/download/:id - should download pass _id ${mockPass._id}`, function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get(`/api/v1/admin/passes/download/${mockPass._id}`)\n\t\t\t\t\t.expect('Content-Type', /application\\/vnd.apple.pkpass/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\t\t\tit(`GET - /api/v1/admin/passes/download/:id - should not download unknown pass _id`, function (done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get(`/api/v1/admin/passes/download/unknown`)\n\t\t\t\t\t//.expect('Content-Type', /application\\/vnd.apple.pkpass/)\n\t\t\t\t\t.expect(404, done);\n\t\t\t});\n\t\t});\n\t});\n});\n"
  },
  {
    "__docId__": 191,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe0",
    "testId": 0,
    "memberof": "specs/admin-controller-spec.js",
    "testDepth": 0,
    "longname": "specs/admin-controller-spec.js~describe0",
    "access": null,
    "description": "Admin",
    "lineNumber": 35
  },
  {
    "__docId__": 192,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe1",
    "testId": 1,
    "memberof": "specs/admin-controller-spec.js~describe0",
    "testDepth": 1,
    "longname": "specs/admin-controller-spec.js~describe0.describe1",
    "access": null,
    "description": "Admin Controller",
    "lineNumber": 48
  },
  {
    "__docId__": 193,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it2",
    "testId": 2,
    "memberof": "specs/admin-controller-spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "specs/admin-controller-spec.js~describe0.describe1.it2",
    "access": null,
    "description": "should be defined",
    "lineNumber": 52
  },
  {
    "__docId__": 194,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it3",
    "testId": 3,
    "memberof": "specs/admin-controller-spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "specs/admin-controller-spec.js~describe0.describe1.it3",
    "access": null,
    "description": "should return instance",
    "lineNumber": 56
  },
  {
    "__docId__": 195,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it4",
    "testId": 4,
    "memberof": "specs/admin-controller-spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "specs/admin-controller-spec.js~describe0.describe1.it4",
    "access": null,
    "description": "post_passTypeIdentifier - Handles creating passTypeIdentifier",
    "lineNumber": 60
  },
  {
    "__docId__": 196,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it5",
    "testId": 5,
    "memberof": "specs/admin-controller-spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "specs/admin-controller-spec.js~describe0.describe1.it5",
    "access": null,
    "description": "get_downloadPass - Handles download pass request",
    "lineNumber": 64
  },
  {
    "__docId__": 197,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it6",
    "testId": 6,
    "memberof": "specs/admin-controller-spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "specs/admin-controller-spec.js~describe0.describe1.it6",
    "access": null,
    "description": "get_signPass - Handles signing a pass",
    "lineNumber": 68
  },
  {
    "__docId__": 198,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it7",
    "testId": 7,
    "memberof": "specs/admin-controller-spec.js~describe0.describe1",
    "testDepth": 2,
    "longname": "specs/admin-controller-spec.js~describe0.describe1.it7",
    "access": null,
    "description": "get_find - Handles finding a pass",
    "lineNumber": 72
  },
  {
    "__docId__": 199,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe8",
    "testId": 8,
    "memberof": "specs/admin-controller-spec.js~describe0",
    "testDepth": 1,
    "longname": "specs/admin-controller-spec.js~describe0.describe8",
    "access": null,
    "description": "Admin Routes",
    "lineNumber": 78
  },
  {
    "__docId__": 200,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe9",
    "testId": 9,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8",
    "testDepth": 2,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe9",
    "access": null,
    "description": "Identifiers",
    "lineNumber": 79
  },
  {
    "__docId__": 201,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it10",
    "testId": 10,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe9",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe9.it10",
    "access": null,
    "description": "/api/v1/admin/identifiers - should create new pass type identifier entry",
    "lineNumber": 80
  },
  {
    "__docId__": 202,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it11",
    "testId": 11,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe9",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe9.it11",
    "access": null,
    "description": "/api/v1/admin/identifiers - should get pass type identifier",
    "lineNumber": 89
  },
  {
    "__docId__": 203,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it12",
    "testId": 12,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe9",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe9.it12",
    "access": null,
    "description": "/api/v1/admin/identifiers - should not get pass type identifier",
    "lineNumber": 96
  },
  {
    "__docId__": 204,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe13",
    "testId": 13,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8",
    "testDepth": 2,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe13",
    "access": null,
    "description": "Passes",
    "lineNumber": 104
  },
  {
    "__docId__": 205,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it14",
    "testId": 14,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe13",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe13.it14",
    "access": null,
    "description": "POST - /api/v1/admin/passes - should create pass",
    "lineNumber": 105
  },
  {
    "__docId__": 206,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it15",
    "testId": 15,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe13",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe13.it15",
    "access": null,
    "description": "PUT - /api/v1/admin/passes/:ID - should update pass",
    "lineNumber": 114
  },
  {
    "__docId__": 207,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it16",
    "testId": 16,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe13",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe13.it16",
    "access": null,
    "description": "GET - /api/v1/admin/passes/:id - should return 1 pass",
    "lineNumber": 121
  },
  {
    "__docId__": 208,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe17",
    "testId": 17,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8",
    "testDepth": 2,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe17",
    "access": null,
    "description": "Finding",
    "lineNumber": 129
  },
  {
    "__docId__": 209,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it18",
    "testId": 18,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe17",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe17.it18",
    "access": null,
    "description": "GET - /api/v1/admin/find?docType=device - should return documents matching.",
    "lineNumber": 131
  },
  {
    "__docId__": 210,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it19",
    "testId": 19,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe17",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe17.it19",
    "access": null,
    "description": "GET - /api/v1/admin/find?name=value - should return 404 if no match",
    "lineNumber": 138
  },
  {
    "__docId__": 211,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe20",
    "testId": 20,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8",
    "testDepth": 2,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe20",
    "access": null,
    "description": "Signing",
    "lineNumber": 147
  },
  {
    "__docId__": 212,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it21",
    "testId": 21,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe20",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe20.it21",
    "access": null,
    "lineNumber": 148
  },
  {
    "__docId__": 213,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it22",
    "testId": 22,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe20",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe20.it22",
    "access": null,
    "lineNumber": 154
  },
  {
    "__docId__": 214,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe23",
    "testId": 23,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8",
    "testDepth": 2,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe23",
    "access": null,
    "description": "Downloading",
    "lineNumber": 161
  },
  {
    "__docId__": 215,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it24",
    "testId": 24,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe23",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe23.it24",
    "access": null,
    "lineNumber": 162
  },
  {
    "__docId__": 216,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it25",
    "testId": 25,
    "memberof": "specs/admin-controller-spec.js~describe0.describe8.describe23",
    "testDepth": 3,
    "longname": "specs/admin-controller-spec.js~describe0.describe8.describe23.it25",
    "access": null,
    "lineNumber": 168
  },
  {
    "__docId__": 217,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/auth-controller-spec.js",
    "memberof": null,
    "longname": "specs/auth-controller-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst path = require('path');\nconst _ = require('lodash');\nconst assert = require('assert');\nconst request = require('supertest');\nconst express = require('express');\nconst mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nconst program = mocks.program;\nconst AuthController = program.require('controllers/auth-controller');\nlet app = express();\nlet controller;\nconst AuthRoutes = require(path.resolve(__dirname, '../../routes/jps-middleware-auth'))(program, app);\n\ndescribe('Auth', function() {\n\n\txdescribe('Routes', function() {\n\n\t\tit('GET - /index - should return index', function(done) {\n\t\t\trequest(app)\n\t\t\t\t.get('/index')\n\t\t\t\t.expect('Content-Type', /html/)\n\t\t\t\t.expect(200, done);\n\t\t});\n\n\t\tdescribe('Register', function() {\n\n\t\t\tit('POST - /signup - should register user', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.post('/signup')\n\t\t\t\t\t.send({\n\t\t\t\t\t\temail: 'test5@gmail.com',\n\t\t\t\t\t\tpassword: 'test'\n\t\t\t\t\t})\n\t\t\t\t\t.set('Content-Type', 'application/json')\n\t\t\t\t\t.set('Accept', 'application/json')\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\n\t\t\tit('POST - /signup - should register new user', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.post('/signup')\n\t\t\t\t\t.send({\n\t\t\t\t\t\temail: 'test6@gmail.com',\n\t\t\t\t\t\tpassword: 'test'\n\t\t\t\t\t})\n\t\t\t\t\t.set('Content-Type', 'application/json')\n\t\t\t\t\t.set('Accept', 'application/json')\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\n\t\t\tit('GET - /signup - should return register form', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get('/signup')\n\t\t\t\t\t.expect('Content-Type', /html/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\t\t});\n\n\t\tdescribe('Account', function() {\n\n\t\t\tit('GET - /account - should return account view', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get('/account')\n\t\t\t\t\t.set('Accept', 'application/json')\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\n\t\t\tit('GET - /me - should return json user info', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get('/me')\n\t\t\t\t\t.set('Accept', 'application/json')\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\n\t\t});\n\n\t\tdescribe('Authorization', function() {\n\n\t\t\tit('GET - /login - should return login form', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get('/login')\n\t\t\t\t\t.expect('Content-Type', /html/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\n\t\t\tit('POST - /login - should login user', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.post('/login')\n\t\t\t\t\t.send({\n\t\t\t\t\t\temail: 'test@gmail.com',\n\t\t\t\t\t\tpassword: 'test'\n\t\t\t\t\t})\n\t\t\t\t\t.expect('Content-Type', /html/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\n\t\t\tit('GET - /logout - should return logout', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get('/logout')\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\n\t\t});\n\n\t});\n\n\tdescribe('Auth Controller', function() {\n\t\tbefore(function() {\n\t\t\tcontroller = new AuthController(program);\n\t\t});\n\n\t\tit('should be defined', function(done) {\n\t\t\tassert(AuthController);\n\t\t\tdone();\n\t\t});\n\n\t\tit('should create instance', function(done) {\n\t\t\tassert(controller);\n\t\t\tdone();\n\t\t});\n\n\t});\n});\n"
  },
  {
    "__docId__": 218,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe26",
    "testId": 26,
    "memberof": "specs/auth-controller-spec.js",
    "testDepth": 0,
    "longname": "specs/auth-controller-spec.js~describe26",
    "access": null,
    "description": "Auth",
    "lineNumber": 14
  },
  {
    "__docId__": 219,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it27",
    "testId": 27,
    "memberof": "specs/auth-controller-spec.js~describe26",
    "testDepth": 1,
    "longname": "specs/auth-controller-spec.js~describe26.it27",
    "access": null,
    "description": "GET - /index - should return index",
    "lineNumber": 18
  },
  {
    "__docId__": 220,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe28",
    "testId": 28,
    "memberof": "specs/auth-controller-spec.js~describe26",
    "testDepth": 1,
    "longname": "specs/auth-controller-spec.js~describe26.describe28",
    "access": null,
    "description": "Register",
    "lineNumber": 25
  },
  {
    "__docId__": 221,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it29",
    "testId": 29,
    "memberof": "specs/auth-controller-spec.js~describe26.describe28",
    "testDepth": 2,
    "longname": "specs/auth-controller-spec.js~describe26.describe28.it29",
    "access": null,
    "description": "POST - /signup - should register user",
    "lineNumber": 27
  },
  {
    "__docId__": 222,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it30",
    "testId": 30,
    "memberof": "specs/auth-controller-spec.js~describe26.describe28",
    "testDepth": 2,
    "longname": "specs/auth-controller-spec.js~describe26.describe28.it30",
    "access": null,
    "description": "POST - /signup - should register new user",
    "lineNumber": 40
  },
  {
    "__docId__": 223,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it31",
    "testId": 31,
    "memberof": "specs/auth-controller-spec.js~describe26.describe28",
    "testDepth": 2,
    "longname": "specs/auth-controller-spec.js~describe26.describe28.it31",
    "access": null,
    "description": "GET - /signup - should return register form",
    "lineNumber": 53
  },
  {
    "__docId__": 224,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe32",
    "testId": 32,
    "memberof": "specs/auth-controller-spec.js~describe26",
    "testDepth": 1,
    "longname": "specs/auth-controller-spec.js~describe26.describe32",
    "access": null,
    "description": "Account",
    "lineNumber": 61
  },
  {
    "__docId__": 225,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it33",
    "testId": 33,
    "memberof": "specs/auth-controller-spec.js~describe26.describe32",
    "testDepth": 2,
    "longname": "specs/auth-controller-spec.js~describe26.describe32.it33",
    "access": null,
    "description": "GET - /account - should return account view",
    "lineNumber": 63
  },
  {
    "__docId__": 226,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it34",
    "testId": 34,
    "memberof": "specs/auth-controller-spec.js~describe26.describe32",
    "testDepth": 2,
    "longname": "specs/auth-controller-spec.js~describe26.describe32.it34",
    "access": null,
    "description": "GET - /me - should return json user info",
    "lineNumber": 71
  },
  {
    "__docId__": 227,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe35",
    "testId": 35,
    "memberof": "specs/auth-controller-spec.js~describe26",
    "testDepth": 1,
    "longname": "specs/auth-controller-spec.js~describe26.describe35",
    "access": null,
    "description": "Authorization",
    "lineNumber": 81
  },
  {
    "__docId__": 228,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it36",
    "testId": 36,
    "memberof": "specs/auth-controller-spec.js~describe26.describe35",
    "testDepth": 2,
    "longname": "specs/auth-controller-spec.js~describe26.describe35.it36",
    "access": null,
    "description": "GET - /login - should return login form",
    "lineNumber": 83
  },
  {
    "__docId__": 229,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it37",
    "testId": 37,
    "memberof": "specs/auth-controller-spec.js~describe26.describe35",
    "testDepth": 2,
    "longname": "specs/auth-controller-spec.js~describe26.describe35.it37",
    "access": null,
    "description": "POST - /login - should login user",
    "lineNumber": 90
  },
  {
    "__docId__": 230,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it38",
    "testId": 38,
    "memberof": "specs/auth-controller-spec.js~describe26.describe35",
    "testDepth": 2,
    "longname": "specs/auth-controller-spec.js~describe26.describe35.it38",
    "access": null,
    "description": "GET - /logout - should return logout",
    "lineNumber": 101
  },
  {
    "__docId__": 231,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe39",
    "testId": 39,
    "memberof": "specs/auth-controller-spec.js~describe26",
    "testDepth": 1,
    "longname": "specs/auth-controller-spec.js~describe26.describe39",
    "access": null,
    "description": "Auth Controller",
    "lineNumber": 111
  },
  {
    "__docId__": 232,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it40",
    "testId": 40,
    "memberof": "specs/auth-controller-spec.js~describe26.describe39",
    "testDepth": 2,
    "longname": "specs/auth-controller-spec.js~describe26.describe39.it40",
    "access": null,
    "description": "should be defined",
    "lineNumber": 116
  },
  {
    "__docId__": 233,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it41",
    "testId": 41,
    "memberof": "specs/auth-controller-spec.js~describe26.describe39",
    "testDepth": 2,
    "longname": "specs/auth-controller-spec.js~describe26.describe39.it41",
    "access": null,
    "description": "should create instance",
    "lineNumber": 121
  },
  {
    "__docId__": 234,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/couchdb-spec.js",
    "memberof": null,
    "longname": "specs/couchdb-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n/**\n * Created by jps on 12/17/15.\n */\nvar assert = require('assert'),\n\t_ = require('lodash'),\n\n\tpath = require('path');\n\n\nvar mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nvar program = mocks.program;\n\nvar config = program.config.defaults;\nvar CouchDB = require(path.resolve(__dirname, '../../lib/adapters/db-couchdb.js'));\n\nvar testDoc = {\n\t_id: 'test-doc',\n\n\tname: 'test'\n};\n\nvar db = new CouchDB(config);\n\nvar mockDevice = mocks.mockDevice;\nvar mockPass = _.assign({}, mocks.mockPass);\n\nvar nock = require('nock');\nvar scope = nock(config.baseUrl)\n\n//get\n.get(`/${testDoc._id}`)\n\t.query(true)\n\t.reply(200, testDoc)\n\n//put\n.put(`/${mockPass._id}`)\n\t.query(true)\n\t.reply(200, {\n\t\tid: mockPass._id\n\t})\n\n//put\n.put(`/test-doc`)\n\t.query(true)\n\t.reply(200, testDoc)\n\n//put\n.put(`/test-doc?rev=2-0000`)\n\t.query(true)\n\t.reply(200, {\n\t\tid: testDoc._id\n\t})\n\n//remove\n.delete(`/test-doc?rev=2-0000`)\n\t.query(true)\n\t.reply(200, {\n\t\tid: testDoc._id\n\t})\n\n//post\n.post(`/test-doc`)\n\t.reply(201, {\n\t\tid: testDoc._id\n\t})\n\n//post\n.post(`/_bulk_docs`)\n\t.query(true)\n\t.reply(201, JSON.stringify(mocks.mockPasses))\n\n//put - fail\n.put('/test-fail')\n\t.query(true)\n\t.reply(404, {\n\t\terror: 'Error'\n\t})\n\n.get('/_all_docs')\n\t.query(true)\n\t.reply(200, {\n\t\trows: [{\n\t\t\tdoc: testDoc\n\t\t}]\n\t});\n\n\n\ndescribe('CouchDB Adapter', function() {\n\n\tit('should be defined', function(done) {\n\t\tassert(db);\n\t\tdone();\n\t});\n\n\tit('should have allDocs, get, remove, put methods', function(done) {\n\t\tassert(db.allDocs);\n\t\tassert(db.remove);\n\t\tassert(db.put);\n\t\tassert(db.get);\n\t\tassert(db.find, 'has find');\n\t\tassert(db.post, 'has post');\n\t\tassert(db.saveAll, 'has saveall');\n\t\tdone();\n\t});\n\n\tit('db.put - should create doc with id', function(done) {\n\t\tdb.put(mockPass).then(function(resp) {\n\t\t\tmockPass._rev = 1;\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('db.put - should reject create doc with _id', function(done) {\n\t\tdb.put({\n\t\t\t_id: 'test-fail'\n\t\t}).then(function(resp) {\n\t\t\tassert.fail(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.ok(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\txit('db.post - should create doc with generated', function(done) {\n\t\tlet o = _.assign({}, mocks.mockPass);\n\t\tdelete o._id;\n\t\tdb.post(o).then(function(resp) {\n\t\t\t//\tassert(resp._id, 'returns id');\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\txit('should get doc with id', function(done) {\n\t\tdb.get(testDoc._id).then(function(resp) {\n\t\t\tassert(resp);\n\t\t\tassert(resp.name === testDoc.name, 'returns object');\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\txit('should find doc', function(done) {\n\t\tdb.find({\n\t\t\tname: testDoc.name\n\t\t}).then(function(resp) {\n\t\t\tconsole.log('find res[', resp);\n\t\t\tassert(resp.name === testDoc.name, 'returns object');\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\txit('db.remove - should remove doc with id', function(done) {\n\t\ttestDoc._rev = '2-0000';\n\t\tdb.remove(testDoc._id, testDoc._rev).then(function(resp) {\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\txit('should save array of docs', function(done) {\n\t\tdb.saveAll([\n\t\t\tmockDevice,\n\t\t\tmockPass\n\t\t]).then(function(resp) {\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('db.allDocs - should return array of docs', function(done) {\n\t\tdb.allDocs().then(function(resp) {\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\txit('should find doc by params', function(done) {\n\t\tdb.find({\n\t\t\tserialNumber: mockPass.serialNumber\n\t\t}).then(function(resp) {\n\t\t\tassert(resp[0].serialNumber === mockPass.serialNumber, 'returns object');\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\n\n});\n"
  },
  {
    "__docId__": 235,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe42",
    "testId": 42,
    "memberof": "specs/couchdb-spec.js",
    "testDepth": 0,
    "longname": "specs/couchdb-spec.js~describe42",
    "access": null,
    "description": "CouchDB Adapter",
    "lineNumber": 90
  },
  {
    "__docId__": 236,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it43",
    "testId": 43,
    "memberof": "specs/couchdb-spec.js~describe42",
    "testDepth": 1,
    "longname": "specs/couchdb-spec.js~describe42.it43",
    "access": null,
    "description": "should be defined",
    "lineNumber": 92
  },
  {
    "__docId__": 237,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it44",
    "testId": 44,
    "memberof": "specs/couchdb-spec.js~describe42",
    "testDepth": 1,
    "longname": "specs/couchdb-spec.js~describe42.it44",
    "access": null,
    "description": "should have allDocs, get, remove, put methods",
    "lineNumber": 97
  },
  {
    "__docId__": 238,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it45",
    "testId": 45,
    "memberof": "specs/couchdb-spec.js~describe42",
    "testDepth": 1,
    "longname": "specs/couchdb-spec.js~describe42.it45",
    "access": null,
    "description": "db.put - should create doc with id",
    "lineNumber": 108
  },
  {
    "__docId__": 239,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it46",
    "testId": 46,
    "memberof": "specs/couchdb-spec.js~describe42",
    "testDepth": 1,
    "longname": "specs/couchdb-spec.js~describe42.it46",
    "access": null,
    "description": "db.put - should reject create doc with _id",
    "lineNumber": 119
  },
  {
    "__docId__": 240,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it47",
    "testId": 47,
    "memberof": "specs/couchdb-spec.js~describe42",
    "testDepth": 1,
    "longname": "specs/couchdb-spec.js~describe42.it47",
    "access": null,
    "description": "db.allDocs - should return array of docs",
    "lineNumber": 192
  },
  {
    "__docId__": 241,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/db-controller-spec.js",
    "memberof": null,
    "longname": "specs/db-controller-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst path = require('path');\nconst _ = require('lodash');\nconst assert = require('assert');\nconst request = require('supertest');\nconst express = require('express');\n\nconst mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nconst program = mocks.program;\nconst DbController = program.require('controllers/db-controller');\n\nconst config = program.config.defaults;\nlet app = express();\nlet controller;\nlet testDoc = mocks.mockPass;\ndelete testDoc._id;\nconst DbRoutes = require(path.resolve(__dirname, '../../routes/jps-middleware-db'))(program, app);\n\nvar nock = require('nock');\nvar scope = nock('/api/v1/db')\n\t.get('')\n\t.reply(200, {})\n\n\t.get(`/unknown`)\n\t.reply(404, {})\n\n\t//put\n\t.put(`/unknown`)\n\t.query(true)\n\t.reply(404, {})\n;\n\ndescribe('DB', function () {\n\n\tdescribe('DB Controller', function () {\n\t\tbefore(function () {\n\t\t\tcontroller = new DbController(program);\n\t\t});\n\n\t\tit('should be defined', function (done) {\n\t\t\tassert(DbController);\n\t\t\tdone();\n\t\t});\n\n\t\tit('should create instance', function (done) {\n\t\t\tassert(controller);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tdescribe('DB Routes', function () {\n\n\t\tit('GET - /api/v1/db - should return all docs', function (done) {\n\t\t\trequest(app)\n\t\t\t\t.get('/api/v1/db')\n\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t.expect(200, done);\n\t\t});\n\n\t\tit('POST - /api/v1/db - should create doc', function (done) {\n\t\t\trequest(app)\n\t\t\t\t.post('/api/v1/db')\n\t\t\t\t.send(testDoc)\n\t\t\t\t.expect(function (res) {\n\t\t\t\t\ttestDoc._id = res.body._id;\n\t\t\t\t})\n\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t.expect(201, done);\n\t\t});\n\n\t\tit('PUT - /api/v1/db - should update doc and return 200', function (done) {\n\t\t\ttestDoc.title = 'updated';\n\t\t\trequest(app)\n\t\t\t\t.put(`/api/v1/db/${testDoc._id}`)\n\t\t\t\t.send(testDoc)\n\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t.expect(200, done);\n\t\t});\n\n\t\tit('GET - /api/v1/db/:id - should get doc', function (done) {\n\t\t\trequest(app)\n\t\t\t\t.get(`/api/v1/db/${testDoc._id}`)\n\t\t\t\t.expect(200, done);\n\t\t});\n\n\t\txit('GET - /api/v1/db/:id - should return 404 if doc not found', function (done) {\n\t\t\trequest(app)\n\t\t\t\t.get(`/api/v1/db/unknown`)\n\t\t\t\t.expect(404, done);\n\t\t});\n\n\t\tit('DELETE - /api/v1/db - should remove doc', function (done) {\n\t\t\trequest(app)\n\t\t\t\t.delete(`/api/v1/db/${testDoc._id}`)\n\t\t\t\t.expect(200, done);\n\t\t});\n\n\t\txit('DELETE - /api/v1/db/:id - should return 404 if doc not found', function (done) {\n\t\t\trequest(app)\n\t\t\t\t.delete(`/api/v1/db/unknown`)\n\t\t\t\t.expect(404, done);\n\t\t});\n\n\t\txit('PUT - /api/v1/db - should not update unknown doc 404', function (done) {\n\t\t\tdelete testDoc._id;\n\t\t\trequest(app)\n\t\t\t\t.put(`/api/v1/db/unknown`)\n\t\t\t\t.send(testDoc)\n\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t.expect(404, done);\n\t\t});\n\n\t});\n\n});\n"
  },
  {
    "__docId__": 242,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe48",
    "testId": 48,
    "memberof": "specs/db-controller-spec.js",
    "testDepth": 0,
    "longname": "specs/db-controller-spec.js~describe48",
    "access": null,
    "description": "DB",
    "lineNumber": 33
  },
  {
    "__docId__": 243,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe49",
    "testId": 49,
    "memberof": "specs/db-controller-spec.js~describe48",
    "testDepth": 1,
    "longname": "specs/db-controller-spec.js~describe48.describe49",
    "access": null,
    "description": "DB Controller",
    "lineNumber": 35
  },
  {
    "__docId__": 244,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it50",
    "testId": 50,
    "memberof": "specs/db-controller-spec.js~describe48.describe49",
    "testDepth": 2,
    "longname": "specs/db-controller-spec.js~describe48.describe49.it50",
    "access": null,
    "description": "should be defined",
    "lineNumber": 40
  },
  {
    "__docId__": 245,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it51",
    "testId": 51,
    "memberof": "specs/db-controller-spec.js~describe48.describe49",
    "testDepth": 2,
    "longname": "specs/db-controller-spec.js~describe48.describe49.it51",
    "access": null,
    "description": "should create instance",
    "lineNumber": 45
  },
  {
    "__docId__": 246,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe52",
    "testId": 52,
    "memberof": "specs/db-controller-spec.js~describe48",
    "testDepth": 1,
    "longname": "specs/db-controller-spec.js~describe48.describe52",
    "access": null,
    "description": "DB Routes",
    "lineNumber": 51
  },
  {
    "__docId__": 247,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it53",
    "testId": 53,
    "memberof": "specs/db-controller-spec.js~describe48.describe52",
    "testDepth": 2,
    "longname": "specs/db-controller-spec.js~describe48.describe52.it53",
    "access": null,
    "description": "GET - /api/v1/db - should return all docs",
    "lineNumber": 53
  },
  {
    "__docId__": 248,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it54",
    "testId": 54,
    "memberof": "specs/db-controller-spec.js~describe48.describe52",
    "testDepth": 2,
    "longname": "specs/db-controller-spec.js~describe48.describe52.it54",
    "access": null,
    "description": "POST - /api/v1/db - should create doc",
    "lineNumber": 60
  },
  {
    "__docId__": 249,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it55",
    "testId": 55,
    "memberof": "specs/db-controller-spec.js~describe48.describe52",
    "testDepth": 2,
    "longname": "specs/db-controller-spec.js~describe48.describe52.it55",
    "access": null,
    "description": "PUT - /api/v1/db - should update doc and return 200",
    "lineNumber": 71
  },
  {
    "__docId__": 250,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it56",
    "testId": 56,
    "memberof": "specs/db-controller-spec.js~describe48.describe52",
    "testDepth": 2,
    "longname": "specs/db-controller-spec.js~describe48.describe52.it56",
    "access": null,
    "description": "GET - /api/v1/db/:id - should get doc",
    "lineNumber": 80
  },
  {
    "__docId__": 251,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it57",
    "testId": 57,
    "memberof": "specs/db-controller-spec.js~describe48.describe52",
    "testDepth": 2,
    "longname": "specs/db-controller-spec.js~describe48.describe52.it57",
    "access": null,
    "description": "DELETE - /api/v1/db - should remove doc",
    "lineNumber": 92
  },
  {
    "__docId__": 252,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/db-spec.js",
    "memberof": null,
    "longname": "specs/db-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n/**\n * Created by jps on 12/17/15.\n */\nvar assert = require('assert'),\n\tpath = require('path'),\n\tfs = require('fs-extra'),\n\tos = require('os');\n\n\n//Test vars\nvar testPassName = 'Test_Pass_';\nvar testId = 'test-doc';\nvar testPassDir = path.resolve(__dirname, '../../.tmp/');\n\nvar mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nvar program = mocks.program;\n//var program = require(path.resolve(__dirname, '../../lib/program.js'))();\nvar config = program.config.defaults;\nvar db = program.db;\nvar mockDevice = mocks.mockDevice;\nvar mockPass = mocks.mockPass;\n\n\ndescribe('db', function() {\n\tit('should be defined', function(done) {\n\t\tassert(db);\n\t\tdone();\n\t});\n\n\tit('should have allDocs, get, remove, put methods', function(done) {\n\t\tassert(db.allDocs, 'should have allDocs');\n\t\tassert(db.remove);\n\t\tassert(db.put);\n\t\tassert(db.get);\n\t\tassert(db.find, 'should have find');\n\t\tassert(db.post, 'should have post');\n\t\tassert(db.bulkDocs, 'should have bulkDocs');\n\t\tassert(db.saveAll, 'should have saveAll');\n\t\tdone();\n\t});\n\n\tit('bulkDocs(array) - should save array of docs', function(done) {\n\t\tdb.bulkDocs([\n\t\t\tmockDevice,\n\t\t\tmockPass\n\t\t]).then(function(resp) {\n\t\t\tassert(resp);\n\t\t\tassert(resp.length === 2);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('put(obj) - should create file with id', function(done) {\n\t\tdb.put({\n\t\t\t_id: 'test-file',\n\t\t\tname: 'test',\n\t\t\tdocType: 'log'\n\t\t}).then(function(resp) {\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('post(obj) - should create doc with generated', function(done) {\n\t\tdb.post({\n\t\t\tname: 'test2',\n\t\t\tdocType: 'log'\n\t\t}).then(function(resp) {\n\t\t\ttestId = resp._id;\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('get(id) - should get doc with id and resolve promise', function(done) {\n\t\tdb.get('test-file').then(function(resp) {\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('remove(id) - should remove doc with id and resolve promise', function(done) {\n\t\tdb.remove('test-file').then(function(resp) {\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\tit('remove(id) - should not remove doc with invalid id and reject promise', function(done) {\n\t\tdb.remove('not-a-test-file').then(function(resp) {\n\t\t\tassert.fail(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('find(params) - should find params and resolve promise', function(done) {\n\t\tdb.find({\n\t\t\tdeviceLibraryIdentifier: mockDevice.deviceLibraryIdentifier\n\t\t}).then(function(resp) {\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('findBy(params) - should find object and return first match', function(done) {\n\t\tdb.findBy({\n\t\t\tserialNumber: mockPass.serialNumber\n\t\t}).then(function(resp) {\n\t\t\tassert(resp);\n\t\t\t///assert(resp.name === 'test-file');\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('findOne(params) - should find item by params and resolve promise', function(done) {\n\t\tdb.findOne({\n\t\t\tserialNumber: mockPass.serialNumber\n\t\t}).then(function(row) {\n\t\t\tassert.equal(row.serialNumber, mockPass.serialNumber, 'match');\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('findOne(params) - should not find item by non-matching params and reject promise', function(done) {\n\t\tdb.findOne({\n\t\t\tsomeKey: 'someValue'\n\t\t}).then(function(row) {\n\t\t\tassert.fail(row);\n\t\t\tdone();\n\t\t}).catch(function(err) {\n\t\t\tassert(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n});\n"
  },
  {
    "__docId__": 253,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe58",
    "testId": 58,
    "memberof": "specs/db-spec.js",
    "testDepth": 0,
    "longname": "specs/db-spec.js~describe58",
    "access": null,
    "description": "db",
    "lineNumber": 25
  },
  {
    "__docId__": 254,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it59",
    "testId": 59,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it59",
    "access": null,
    "description": "should be defined",
    "lineNumber": 26
  },
  {
    "__docId__": 255,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it60",
    "testId": 60,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it60",
    "access": null,
    "description": "should have allDocs, get, remove, put methods",
    "lineNumber": 31
  },
  {
    "__docId__": 256,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it61",
    "testId": 61,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it61",
    "access": null,
    "description": "bulkDocs(array) - should save array of docs",
    "lineNumber": 43
  },
  {
    "__docId__": 257,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it62",
    "testId": 62,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it62",
    "access": null,
    "description": "put(obj) - should create file with id",
    "lineNumber": 54
  },
  {
    "__docId__": 258,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it63",
    "testId": 63,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it63",
    "access": null,
    "description": "post(obj) - should create doc with generated",
    "lineNumber": 65
  },
  {
    "__docId__": 259,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it64",
    "testId": 64,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it64",
    "access": null,
    "description": "get(id) - should get doc with id and resolve promise",
    "lineNumber": 79
  },
  {
    "__docId__": 260,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it65",
    "testId": 65,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it65",
    "access": null,
    "description": "remove(id) - should remove doc with id and resolve promise",
    "lineNumber": 89
  },
  {
    "__docId__": 261,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it66",
    "testId": 66,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it66",
    "access": null,
    "description": "remove(id) - should not remove doc with invalid id and reject promise",
    "lineNumber": 98
  },
  {
    "__docId__": 262,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it67",
    "testId": 67,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it67",
    "access": null,
    "description": "find(params) - should find params and resolve promise",
    "lineNumber": 108
  },
  {
    "__docId__": 263,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it68",
    "testId": 68,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it68",
    "access": null,
    "description": "findBy(params) - should find object and return first match",
    "lineNumber": 120
  },
  {
    "__docId__": 264,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it69",
    "testId": 69,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it69",
    "access": null,
    "description": "findOne(params) - should find item by params and resolve promise",
    "lineNumber": 133
  },
  {
    "__docId__": 265,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it70",
    "testId": 70,
    "memberof": "specs/db-spec.js~describe58",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe58.it70",
    "access": null,
    "description": "findOne(params) - should not find item by non-matching params and reject promise",
    "lineNumber": 145
  },
  {
    "__docId__": 266,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/device-spec.js",
    "memberof": null,
    "longname": "specs/device-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst path = require('path');\nconst _ = require('lodash');\nconst assert = require('assert');\nconst mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nconst program = mocks.program;\nconst Device = program.require('models/device');\n\nvar d;\n\ndescribe('Device Model', function() {\n\tbefore(function() {\n\t\td = new Device({\n      pushToken: '0123456789876543210',\n    \tdeviceLibraryIdentifier: '0123456789876543210',\n    \tserialNumber: '0123456789876543210',\n    \tpassTypeIdentifier: mocks.mockIdentifer.passTypeIdentifier\n\t\t});\n\t});\n\n\tit('should be defined', function(done) {\n\t\tassert(Device);\n\t\tdone();\n\t});\n\n});\n"
  },
  {
    "__docId__": 267,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe71",
    "testId": 71,
    "memberof": "specs/device-spec.js",
    "testDepth": 0,
    "longname": "specs/device-spec.js~describe71",
    "access": null,
    "description": "Device Model",
    "lineNumber": 11
  },
  {
    "__docId__": 268,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it72",
    "testId": 72,
    "memberof": "specs/device-spec.js~describe71",
    "testDepth": 1,
    "longname": "specs/device-spec.js~describe71.it72",
    "access": null,
    "description": "should be defined",
    "lineNumber": 21
  },
  {
    "__docId__": 269,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/jps-passbook-spec.js",
    "memberof": null,
    "longname": "specs/jps-passbook-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "var assert = require('assert'),\n\tpath = require('path'),\n\t_ = require('lodash'),\n\tfs = require('fs-extra'),\n\tSignPass = require(path.resolve(__dirname, '../../lib/signpass')),\n\tPassbook = require(path.resolve(__dirname, '../../lib/jps-passbook'));\n\nvar mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nvar program = mocks.program;\nvar jpsPassbook = new Passbook(program);\n\nvar mockIdentifer = mocks.mockIdentifer;\nvar mockPass = mocks.mockPass;\nvar mockPasses = mocks.mockPasses;\nvar _passes = [];\nvar passFiles = [];\n\ndescribe('jps-passbook', function() {\n\t\tthis.timeout(20000);\n\tdescribe('Batching', function() {\n\t\tbefore(function() {\n\t\t\tprogram.db.saveAll(mocks.mockPasses).then(function(resp) {\n\t\t\t\tmockPasses = resp;\n\t\t\t\tconsole.log('GOT PASSES', resp);\n\t\t\t});\n\t\t});\n\n\t\tit('batchPromise(\"create\", passes) - should create each pass in database', function(done) {\n\t\t\tjpsPassbook.batchPromise('create', mockPasses).then(function(_resp) {\n\t\t\t\tassert(_resp);\n\t\t\t\tdone();\n\t\t\t}).catch(function(err) {\n\t\t\t\tassert.fail(err);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit('batchPromise(\"sign\", passes) - should create each pass in database', function(done) {\n\n\t\t\tvar mockIds = _.pluck(mockPasses, '_id');\n\t\t\tconsole.log('mockIds', mockIds);\n\t\t\tjpsPassbook.batchPromise('sign', mockPasses).then(function(_resp) {\n\t\t\t\tconsole.log(_resp);\n\t\t\t\tassert(_resp);\n\t\t\t\tassert(mockIds.length === _resp.length);\n\t\t\t\tassert(fs.existsSync(p.dest), 'returns .pkpass path');\n\t\t\t\tdone();\n\t\t\t}).catch(function(err) {\n\t\t\t\tassert.fail(err);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t});\n\n\n\tdescribe('Passes', function() {\n\n\t\tit('savePassTypeIdentifier() - should create pass certs and save passTypeIdentifier to database successfully.',\n\t\t\tfunction(done) {\n\t\t\t\tjpsPassbook.savePassTypeIdentifierPromise(mockIdentifer).then(function(p) {\n\t\t\t\t\tassert(p);\n\t\t\t\t\tdone();\n\t\t\t\t}).catch(function(err) {\n\t\t\t\t\tassert.fail(err);\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t\t});\n\n\t\tit('savePassTypeIdentifier() - should should fail when no p12 present.', function(done) {\n\t\t\tjpsPassbook.savePassTypeIdentifierPromise({\n\t\t\t\tpassphrase: 'test',\n\t\t\t\tpassTypeIdentifier: 'test'\n\t\t\t}).then(function(p) {\n\t\t\t\tassert.fail(p);\n\t\t\t\tdone();\n\t\t\t}).catch(function(err) {\n\t\t\t\tassert(err);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit('savePassTypeIdentifier() - should should fail when no passphrase present.', function(done) {\n\t\t\tjpsPassbook.savePassTypeIdentifierPromise({\n\t\t\t\tpassTypeIdentifier: 'test'\n\t\t\t}).then(function(p) {\n\t\t\t\tassert.fail(p);\n\t\t\t\tdone();\n\t\t\t}).catch(function(err) {\n\t\t\t\tassert(err);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit('getPassCerts() - should get pass certs from database successfully.', function(done) {\n\t\t\tjpsPassbook.getPassCerts(mockPass.passTypeIdentifier, function(err, p) {\n\t\t\t\tif (err) {\n\t\t\t\t\tassert.fail(err);\n\t\t\t\t}\n\t\t\t\tassert.ok(p);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit('getPassCerts() - should get pass certs from database fail.', function(done) {\n\t\t\tjpsPassbook.getPassCerts('unknown-id', function(err, p) {\n\t\t\t\tassert(err);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit('createPassPromise() - should create pass .raw and resolve promise', function(done) {\n\t\t\tjpsPassbook.createPassPromise(mockPass).then(function(p) {\n\t\t\t\tassert(fs.existsSync(p.rawFilename), 'returns .raw path');\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\n\t\tdescribe('Signing', function() {\n\n\t\t\tbefore(function(done) {\n\t\t\t\tprogram.db.get(mockPass._id).then(function(resp) {\n\t\t\t\t\tmockPass = resp;\n\t\t\t\t\t//\tmockPass = resp[0];\n\t\t\t\t\tconsole.log('Using Mock Pass', mockPass);\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('signPass() - should sign .raw package into a .pkpass', function(done) {\n\t\t\t\tjpsPassbook.signPass(mockPass, function(err, p) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tassert.fail(err);\n\t\t\t\t\t}\n\t\t\t\t\tassert(fs.existsSync(p.dest), 'returns .pkpass path');\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('signPassPromise() - should sign pass .raw into .pkpass and resolve promise', function(done) {\n\t\t\t\tjpsPassbook.signPassPromise(mockPass).then(function(p) {\n\t\t\t\t\tassert(fs.existsSync(p.dest), 'returns .pkpass path');\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tdescribe('Validation', function() {\n\t\t\t\tit('validatePass() - should validate a pass', function(done) {\n\t\t\t\t\tjpsPassbook.validatePass(mockPass, function(err, p) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tassert.fail(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tassert(p, 'returns pass');\n\t\t\t\t\t\t//\tassert(p.filename, 'returns pass filename');\n\t\t\t\t\t\tassert(fs.existsSync(path.resolve(p.rawFilename, './manifest.json')));\n\t\t\t\t\t\tdone();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tit('validatePassPromise() - should validate pass .pkpass signature and resolve promise', function(done) {\n\t\t\t\t\tdone();\n\t\t\t\t});\n\n\t\t\t});\n\t\t});\n\t});\n\n\n\n});\n"
  },
  {
    "__docId__": 270,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe73",
    "testId": 73,
    "memberof": "specs/jps-passbook-spec.js",
    "testDepth": 0,
    "longname": "specs/jps-passbook-spec.js~describe73",
    "access": null,
    "description": "jps-passbook",
    "lineNumber": 18
  },
  {
    "__docId__": 271,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe74",
    "testId": 74,
    "memberof": "specs/jps-passbook-spec.js~describe73",
    "testDepth": 1,
    "longname": "specs/jps-passbook-spec.js~describe73.describe74",
    "access": null,
    "description": "Batching",
    "lineNumber": 20
  },
  {
    "__docId__": 272,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it75",
    "testId": 75,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe74",
    "testDepth": 2,
    "longname": "specs/jps-passbook-spec.js~describe73.describe74.it75",
    "access": null,
    "description": "batchPromise(\"create\", passes) - should create each pass in database",
    "lineNumber": 28
  },
  {
    "__docId__": 273,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it76",
    "testId": 76,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe74",
    "testDepth": 2,
    "longname": "specs/jps-passbook-spec.js~describe73.describe74.it76",
    "access": null,
    "description": "batchPromise(\"sign\", passes) - should create each pass in database",
    "lineNumber": 38
  },
  {
    "__docId__": 274,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe77",
    "testId": 77,
    "memberof": "specs/jps-passbook-spec.js~describe73",
    "testDepth": 1,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77",
    "access": null,
    "description": "Passes",
    "lineNumber": 56
  },
  {
    "__docId__": 275,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it78",
    "testId": 78,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77",
    "testDepth": 2,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.it78",
    "access": null,
    "description": "savePassTypeIdentifier() - should create pass certs and save passTypeIdentifier to database successfully.",
    "lineNumber": 58
  },
  {
    "__docId__": 276,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it79",
    "testId": 79,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77",
    "testDepth": 2,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.it79",
    "access": null,
    "description": "savePassTypeIdentifier() - should should fail when no p12 present.",
    "lineNumber": 69
  },
  {
    "__docId__": 277,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it80",
    "testId": 80,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77",
    "testDepth": 2,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.it80",
    "access": null,
    "description": "savePassTypeIdentifier() - should should fail when no passphrase present.",
    "lineNumber": 82
  },
  {
    "__docId__": 278,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it81",
    "testId": 81,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77",
    "testDepth": 2,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.it81",
    "access": null,
    "description": "getPassCerts() - should get pass certs from database successfully.",
    "lineNumber": 94
  },
  {
    "__docId__": 279,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it82",
    "testId": 82,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77",
    "testDepth": 2,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.it82",
    "access": null,
    "description": "getPassCerts() - should get pass certs from database fail.",
    "lineNumber": 104
  },
  {
    "__docId__": 280,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it83",
    "testId": 83,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77",
    "testDepth": 2,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.it83",
    "access": null,
    "description": "createPassPromise() - should create pass .raw and resolve promise",
    "lineNumber": 111
  },
  {
    "__docId__": 281,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe84",
    "testId": 84,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77",
    "testDepth": 2,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.describe84",
    "access": null,
    "description": "Signing",
    "lineNumber": 119
  },
  {
    "__docId__": 282,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it85",
    "testId": 85,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77.describe84",
    "testDepth": 3,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.describe84.it85",
    "access": null,
    "description": "signPass() - should sign .raw package into a .pkpass",
    "lineNumber": 130
  },
  {
    "__docId__": 283,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it86",
    "testId": 86,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77.describe84",
    "testDepth": 3,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.describe84.it86",
    "access": null,
    "description": "signPassPromise() - should sign pass .raw into .pkpass and resolve promise",
    "lineNumber": 140
  },
  {
    "__docId__": 284,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe87",
    "testId": 87,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77.describe84",
    "testDepth": 3,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.describe84.describe87",
    "access": null,
    "description": "Validation",
    "lineNumber": 147
  },
  {
    "__docId__": 285,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it88",
    "testId": 88,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77.describe84.describe87",
    "testDepth": 4,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.describe84.describe87.it88",
    "access": null,
    "description": "validatePass() - should validate a pass",
    "lineNumber": 148
  },
  {
    "__docId__": 286,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it89",
    "testId": 89,
    "memberof": "specs/jps-passbook-spec.js~describe73.describe77.describe84.describe87",
    "testDepth": 4,
    "longname": "specs/jps-passbook-spec.js~describe73.describe77.describe84.describe87.it89",
    "access": null,
    "description": "validatePassPromise() - should validate pass .pkpass signature and resolve promise",
    "lineNumber": 160
  },
  {
    "__docId__": 287,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/jps-utils-spec.js",
    "memberof": null,
    "longname": "specs/jps-utils-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst assert = require('assert');\nconst _ = require('lodash');\nconst child_process = require('child_process');\nconst path = require('path');\nconst utils = require(path.resolve(__dirname, '../../lib/utils'));\nconst mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nconst program = mocks.program;\nconst config = program.config.defaults;\nconst Passbook = require(path.resolve(__dirname, '../../lib/jps-passbook'));\nconst cert_url = path.resolve(__dirname, '../../certificates/pass.p12');\nconst cert_pass = 'fred';\nconst jpsPassbook = new Passbook(program);\n\ndescribe('Utils', function(done) {\n\tthis.timeout(20000);\n\tit('should be defined', function(done) {\n\t\tassert(utils);\n\t\tdone();\n\t});\n\n\tit('should return Github Pass', function(done) {\n\t\tthis.slow(5000);\n\t\tutils.githubToPass('jonniespratley', function(err, user) {\n\t\t\tassert(user);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('should create Github Pass', function(done) {\n\t\tconst GITHUB_USERS = [ /*'sindresorhus', 'eddiemonge', 'addyosmani', */ 'jonniespratley'];\n\t\tvar _done = _.after(GITHUB_USERS.length, function() {\n\t\t\tdone();\n\t\t});\n\t\t_.forEach(GITHUB_USERS, function(n) {\n\t\t\tutils.githubToPass(n, function(err, res) {\n\t\t\t\tassert(res.pass, 'has pass');\n\t\t\t\tassert(res.user, 'has user');\n\t\t\t\tjpsPassbook.createPass(res.pass, function(err, resp) {\n\t\t\t\t\tassert(resp, 'has response');\n\t\t\t\t\t_done();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\tit('checksum() - should create a checksum hash', function(done) {\n\t\tvar hash1 = utils.checksum('This is my test text');\n\t\tvar hash1_expected = 'e53815e8c095e270c6560be1bb76a65d';\n\t\tvar hash2_expected = 'cd5855be428295a3cc1793d6e80ce47562d23def';\n\t\tvar hash2 = utils.checksum('This is my test text', 'sha1');\n\t\tassert(hash1 === hash1_expected);\n\t\tassert(hash2 === hash2_expected);\n\t\tdone();\n\t});\n});\n"
  },
  {
    "__docId__": 288,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe90",
    "testId": 90,
    "memberof": "specs/jps-utils-spec.js",
    "testDepth": 0,
    "longname": "specs/jps-utils-spec.js~describe90",
    "access": null,
    "description": "Utils",
    "lineNumber": 15
  },
  {
    "__docId__": 289,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it91",
    "testId": 91,
    "memberof": "specs/jps-utils-spec.js~describe90",
    "testDepth": 1,
    "longname": "specs/jps-utils-spec.js~describe90.it91",
    "access": null,
    "description": "should be defined",
    "lineNumber": 17
  },
  {
    "__docId__": 290,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it92",
    "testId": 92,
    "memberof": "specs/jps-utils-spec.js~describe90",
    "testDepth": 1,
    "longname": "specs/jps-utils-spec.js~describe90.it92",
    "access": null,
    "description": "should return Github Pass",
    "lineNumber": 22
  },
  {
    "__docId__": 291,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it93",
    "testId": 93,
    "memberof": "specs/jps-utils-spec.js~describe90",
    "testDepth": 1,
    "longname": "specs/jps-utils-spec.js~describe90.it93",
    "access": null,
    "description": "should create Github Pass",
    "lineNumber": 30
  },
  {
    "__docId__": 292,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it94",
    "testId": 94,
    "memberof": "specs/jps-utils-spec.js~describe90",
    "testDepth": 1,
    "longname": "specs/jps-utils-spec.js~describe90.it94",
    "access": null,
    "description": "checksum() - should create a checksum hash",
    "lineNumber": 47
  },
  {
    "__docId__": 293,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/models-spec.js",
    "memberof": null,
    "longname": "specs/models-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "const path = require('path');\nconst _ = require('lodash');\nconst assert = require('assert');\nconst mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nconst program = mocks.program;\n\nvar docTypes = [];\n\ndescribe('Passes', function() {\n\tit('should return only passes', function(done) {\n\t\tprogram.models.Passes.getPasses().then(function(resp) {\n\t\t\tdocTypes = _.pluck(resp, '_key');\n\t\t\tconsole.log('docTypes', docTypes);\n\t\t\tdone();\n\t\t});\n\t});\n});\n"
  },
  {
    "__docId__": 294,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe95",
    "testId": 95,
    "memberof": "specs/models-spec.js",
    "testDepth": 0,
    "longname": "specs/models-spec.js~describe95",
    "access": null,
    "description": "Passes",
    "lineNumber": 9
  },
  {
    "__docId__": 295,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it96",
    "testId": 96,
    "memberof": "specs/models-spec.js~describe95",
    "testDepth": 1,
    "longname": "specs/models-spec.js~describe95.it96",
    "access": null,
    "description": "should return only passes",
    "lineNumber": 10
  },
  {
    "__docId__": 296,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/pass-model-spec.js",
    "memberof": null,
    "longname": "specs/pass-model-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "var path = require('path');\nvar assert = require('assert');\nvar Device = require(path.resolve(__dirname, '../../lib/models/device.js'));\nvar Pass = require(path.resolve(__dirname, '../../lib/models/pass.js'));\nvar p;\nvar program = require(path.resolve(__dirname, '../../lib/program.js'))();\nvar config = program.config.defaults;\n\ndescribe('Pass', function() {\n\tit('should create default generic Pass', function(done) {\n\t\tassert(Pass);\n\t\tp = new Pass();\n\t\tassert.ok(p._id);\n\t\tassert.equal(p.type, 'generic');\n\t\tdone()\n\t});\n\n\tit('should create pass model with [storeCard] type', function(done) {\n\t\tp = new Pass({\n\t\t\ttype: 'storeCard'\n\t\t});\n\t\tassert.ok(p.storeCard);\n\t\tassert.equal(p.type, 'storeCard');\n\t\tdone();\n\t});\n\n\tit('should create pass model with teamIdentifier, passTypeIdentifier, and webServiceURL from config', function(done) {\n\t\tp = new Pass({\n\t\t\ttype: 'generic'\n\t\t});\n\n\t\tassert.equal(p.type, 'generic');\n\t\tassert(p.generic);\n\n\t\tassert(p.serialNumber);\n\t\tassert(p.teamIdentifier);\n\t\tassert(p.passTypeIdentifier);\n\t\tassert(p.webServiceURL);\n\t\tdone();\n\t});\n});\n"
  },
  {
    "__docId__": 297,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe97",
    "testId": 97,
    "memberof": "specs/pass-model-spec.js",
    "testDepth": 0,
    "longname": "specs/pass-model-spec.js~describe97",
    "access": null,
    "description": "Pass",
    "lineNumber": 9
  },
  {
    "__docId__": 298,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it98",
    "testId": 98,
    "memberof": "specs/pass-model-spec.js~describe97",
    "testDepth": 1,
    "longname": "specs/pass-model-spec.js~describe97.it98",
    "access": null,
    "description": "should create default generic Pass",
    "lineNumber": 10
  },
  {
    "__docId__": 299,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it99",
    "testId": 99,
    "memberof": "specs/pass-model-spec.js~describe97",
    "testDepth": 1,
    "longname": "specs/pass-model-spec.js~describe97.it99",
    "access": null,
    "description": "should create pass model with [storeCard] type",
    "lineNumber": 18
  },
  {
    "__docId__": 300,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it100",
    "testId": 100,
    "memberof": "specs/pass-model-spec.js~describe97",
    "testDepth": 1,
    "longname": "specs/pass-model-spec.js~describe97.it100",
    "access": null,
    "description": "should create pass model with teamIdentifier, passTypeIdentifier, and webServiceURL from config",
    "lineNumber": 27
  },
  {
    "__docId__": 301,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/passes-model-spec.js",
    "memberof": null,
    "longname": "specs/passes-model-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "var path = require('path');\nvar assert = require('assert');\n\n\nvar Passes = require(path.resolve(__dirname, '../../lib/models/passes.js'));\nvar p;\n\nvar mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nvar program = mocks.program;\nvar config = program.config.defaults;\n\nvar mocks = require('../helpers/mocks');\ndescribe('Passes', function() {\n\tit('should be defined', function(done) {\n\t\tassert(Passes);\n\t\tdone();\n\t});\n\n\tit('getPasses() - should return all passes', function(done) {\n\t\tPasses.getPasses().then(function(resp) {\n\t\t\tassert.ok(resp);\n\t\t\tdone();\n\t\t}, function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('add() - should add pass', function(done) {\n\t\tPasses.add(mocks.mockPass).then(function(resp) {\n\t\t\tassert.ok(resp);\n\t\t\tdone();\n\t\t}, function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('get() - should get pass', function(done) {\n\t\tPasses.get(mocks.mockPass._id).then(function(resp) {\n\t\t\tassert.ok(resp);\n\t\t\tdone();\n\t\t}, function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\n\tit('find(params) - should resolve pass that meets params', function(done) {\n\t\tPasses.find({\n\t\t\t//_id: 'mock-generic'\n\t\t\tserialNumber: mocks.mockPass.serialNumber\n\t\t}).then(function(resp) {\n\t\t\tconsole.log(resp);\n\t\t\tassert.ok(resp.serialNumber === mocks.mockPass.serialNumber);\n\t\t\tassert.ok(resp);\n\t\t\tdone();\n\t\t}, function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('find(params) - should reject promise pass that meets params', function(done) {\n\t\tPasses.find({\n\t\t\t//_id: 'mock-generic'\n\t\t\tserialNumber: 'none'\n\t\t}).then(function(resp) {\n\t\t\tassert.fail(resp);\n\t\t\tdone();\n\t\t}, function(err) {\n\t\t\tassert.ok(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('findBySerial(num) - should return pass by serial number', function(done) {\n\t\tPasses.findPassBySerial(mocks.mockPass.serialNumber).then(function(resp) {\n\t\t\tassert.ok(resp);\n\t\t\tdone();\n\t\t}, function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('remove() - should remove pass', function(done) {\n\t\tPasses.remove(mocks.mockPass._id).then(function(resp) {\n\t\t\tassert.ok(resp);\n\t\t\tdone();\n\t\t}, function(err) {\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n});\n"
  },
  {
    "__docId__": 302,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe101",
    "testId": 101,
    "memberof": "specs/passes-model-spec.js",
    "testDepth": 0,
    "longname": "specs/passes-model-spec.js~describe101",
    "access": null,
    "description": "Passes",
    "lineNumber": 13
  },
  {
    "__docId__": 303,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it102",
    "testId": 102,
    "memberof": "specs/passes-model-spec.js~describe101",
    "testDepth": 1,
    "longname": "specs/passes-model-spec.js~describe101.it102",
    "access": null,
    "description": "should be defined",
    "lineNumber": 14
  },
  {
    "__docId__": 304,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it103",
    "testId": 103,
    "memberof": "specs/passes-model-spec.js~describe101",
    "testDepth": 1,
    "longname": "specs/passes-model-spec.js~describe101.it103",
    "access": null,
    "description": "getPasses() - should return all passes",
    "lineNumber": 19
  },
  {
    "__docId__": 305,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it104",
    "testId": 104,
    "memberof": "specs/passes-model-spec.js~describe101",
    "testDepth": 1,
    "longname": "specs/passes-model-spec.js~describe101.it104",
    "access": null,
    "description": "add() - should add pass",
    "lineNumber": 29
  },
  {
    "__docId__": 306,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it105",
    "testId": 105,
    "memberof": "specs/passes-model-spec.js~describe101",
    "testDepth": 1,
    "longname": "specs/passes-model-spec.js~describe101.it105",
    "access": null,
    "description": "get() - should get pass",
    "lineNumber": 39
  },
  {
    "__docId__": 307,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it106",
    "testId": 106,
    "memberof": "specs/passes-model-spec.js~describe101",
    "testDepth": 1,
    "longname": "specs/passes-model-spec.js~describe101.it106",
    "access": null,
    "description": "find(params) - should resolve pass that meets params",
    "lineNumber": 50
  },
  {
    "__docId__": 308,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it107",
    "testId": 107,
    "memberof": "specs/passes-model-spec.js~describe101",
    "testDepth": 1,
    "longname": "specs/passes-model-spec.js~describe101.it107",
    "access": null,
    "description": "find(params) - should reject promise pass that meets params",
    "lineNumber": 65
  },
  {
    "__docId__": 309,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it108",
    "testId": 108,
    "memberof": "specs/passes-model-spec.js~describe101",
    "testDepth": 1,
    "longname": "specs/passes-model-spec.js~describe101.it108",
    "access": null,
    "description": "findBySerial(num) - should return pass by serial number",
    "lineNumber": 78
  },
  {
    "__docId__": 310,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it109",
    "testId": 109,
    "memberof": "specs/passes-model-spec.js~describe101",
    "testDepth": 1,
    "longname": "specs/passes-model-spec.js~describe101.it109",
    "access": null,
    "description": "remove() - should remove pass",
    "lineNumber": 88
  },
  {
    "__docId__": 311,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/program-spec.js",
    "memberof": null,
    "longname": "specs/program-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "var path = require('path');\nvar assert = require('assert');\nvar program = require(path.resolve(__dirname, '../../lib/program.js'))();\nvar config = program.config.defaults;\n\ndescribe('program', function() {\n\tit('should defined', function(done) {\n\t\tassert(program);\n\t\tdone();\n\t});\n\tit('should have getLogger', function(done) {\n\t\tassert(program.getLogger);\n\t\tdone();\n\t});\n\tit('should have db', function(done) {\n\t\tassert(program.db);\n\t\tdone();\n\t});\n});\n"
  },
  {
    "__docId__": 312,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe110",
    "testId": 110,
    "memberof": "specs/program-spec.js",
    "testDepth": 0,
    "longname": "specs/program-spec.js~describe110",
    "access": null,
    "description": "program",
    "lineNumber": 6
  },
  {
    "__docId__": 313,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it111",
    "testId": 111,
    "memberof": "specs/program-spec.js~describe110",
    "testDepth": 1,
    "longname": "specs/program-spec.js~describe110.it111",
    "access": null,
    "description": "should defined",
    "lineNumber": 7
  },
  {
    "__docId__": 314,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it112",
    "testId": 112,
    "memberof": "specs/program-spec.js~describe110",
    "testDepth": 1,
    "longname": "specs/program-spec.js~describe110.it112",
    "access": null,
    "description": "should have getLogger",
    "lineNumber": 11
  },
  {
    "__docId__": 315,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it113",
    "testId": 113,
    "memberof": "specs/program-spec.js~describe110",
    "testDepth": 1,
    "longname": "specs/program-spec.js~describe110.it113",
    "access": null,
    "description": "should have db",
    "lineNumber": 15
  },
  {
    "__docId__": 316,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/redis-spec.js",
    "memberof": null,
    "longname": "specs/redis-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nvar assert = require('assert'),\n\t_ = require('lodash'),\n\tpath = require('path');\n\nconst redis = require(\"redis-mock\");\nconst RedisDB = require(path.resolve(__dirname, '../../lib/adapters/db-redis.js'));\nconst mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nconst program = mocks.program;\nconst config = program.config.defaults;\n\nlet mockPass = mocks.mockPass;\nlet client;\nlet db;\n\ndescribe('Adapters', function() {\n\n\tdescribe('redis', function() {\n\t\tbefore(function() {\n\t\t\tclient = redis.createClient();\n\t\t\tdb = new RedisDB({\n\t\t\t\tclient: client\n\t\t\t});\n\t\t});\n\n\t\tit('should be have mock client', function(done) {\n\t\t\tassert(client);\n\t\t\tdone();\n\t\t});\n\n\t\tit('should be defined', function(done) {\n\t\t\tassert(db);\n\t\t\tdone();\n\t\t});\n\n\t\tit('should save object', function(done) {\n\t\t\tdb.put(mockPass).then(function(resp) {\n\t\t\t\tassert(resp);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit('should get object', function(done) {\n\t\t\tdb.get(mockPass._id).then(function(resp) {\n\t\t\t\tassert(resp._id === mockPass._id);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit('should remove object', function(done) {\n\t\t\tdb.remove(mockPass._id).then(function(resp) {\n\t\t\t\tassert(resp);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit('should get all docs', function(done) {\n\t\t\tdb.allDocs().then(function(resp) {\n\t\t\t\tassert(resp);\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\n\t});\n\n});\n"
  },
  {
    "__docId__": 317,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe114",
    "testId": 114,
    "memberof": "specs/redis-spec.js",
    "testDepth": 0,
    "longname": "specs/redis-spec.js~describe114",
    "access": null,
    "description": "Adapters",
    "lineNumber": 17
  },
  {
    "__docId__": 318,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe115",
    "testId": 115,
    "memberof": "specs/redis-spec.js~describe114",
    "testDepth": 1,
    "longname": "specs/redis-spec.js~describe114.describe115",
    "access": null,
    "description": "redis",
    "lineNumber": 19
  },
  {
    "__docId__": 319,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it116",
    "testId": 116,
    "memberof": "specs/redis-spec.js~describe114.describe115",
    "testDepth": 2,
    "longname": "specs/redis-spec.js~describe114.describe115.it116",
    "access": null,
    "description": "should be have mock client",
    "lineNumber": 27
  },
  {
    "__docId__": 320,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it117",
    "testId": 117,
    "memberof": "specs/redis-spec.js~describe114.describe115",
    "testDepth": 2,
    "longname": "specs/redis-spec.js~describe114.describe115.it117",
    "access": null,
    "description": "should be defined",
    "lineNumber": 32
  },
  {
    "__docId__": 321,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it118",
    "testId": 118,
    "memberof": "specs/redis-spec.js~describe114.describe115",
    "testDepth": 2,
    "longname": "specs/redis-spec.js~describe114.describe115.it118",
    "access": null,
    "description": "should save object",
    "lineNumber": 37
  },
  {
    "__docId__": 322,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it119",
    "testId": 119,
    "memberof": "specs/redis-spec.js~describe114.describe115",
    "testDepth": 2,
    "longname": "specs/redis-spec.js~describe114.describe115.it119",
    "access": null,
    "description": "should get object",
    "lineNumber": 44
  },
  {
    "__docId__": 323,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it120",
    "testId": 120,
    "memberof": "specs/redis-spec.js~describe114.describe115",
    "testDepth": 2,
    "longname": "specs/redis-spec.js~describe114.describe115.it120",
    "access": null,
    "description": "should remove object",
    "lineNumber": 51
  },
  {
    "__docId__": 324,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it121",
    "testId": 121,
    "memberof": "specs/redis-spec.js~describe114.describe115",
    "testDepth": 2,
    "longname": "specs/redis-spec.js~describe114.describe115.it121",
    "access": null,
    "description": "should get all docs",
    "lineNumber": 58
  },
  {
    "__docId__": 325,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/routes-spec.js",
    "memberof": null,
    "longname": "specs/routes-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nvar assert = require('assert'),\n\tpath = require('path'),\n\tfs = require('fs-extra'),\n\trequest = require('supertest'),\n\texpress = require('express'),\n\tos = require('os');\n\n\n//Test vars\nvar testPassName = 'Test_Pass_';\nvar testPassDir = path.resolve(__dirname, '../../.tmp/');\n\nvar app = express();\nvar passes;\n\n// TODO: Program\nvar mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nvar program = mocks.program;\nvar db = program.db;\nvar config = program.config.defaults;\n\n//Test Instances\n\nvar mockDevice = mocks.mockDevice;\nvar mockPass = mocks.mockPass;\n\nvar mockIdentifer = {\n\tpassTypeIdentifier: 'pass.io.passbookmanager',\n\twwdr: path.resolve(__dirname, '../../certificates/wwdr-authority.pem'),\n\tp12: path.resolve(__dirname, '../../certificates/pass.io.passbookmanager.p12'),\n\tpassphrase: 'fred'\n};\n\nvar jpsPassbook = require(path.resolve(__dirname, '..' + path.sep + '..' + path.sep + 'routes' + path.sep +\n\t'jps-passbook-routes'))(program, app);\n\ndescribe('routes', function() {\n\n\tit('GET - /api/v1 - should return api', function(done) {\n\t\trequest(app)\n\t\t\t.get('/api/v1')\n\t\t\t.expect('Content-Type', /json/)\n\t\t\t.expect(200, done);\n\t});\n\n\n\n\tdescribe('PassKit Web Service', function() {\n\n\t\tbeforeEach(function() {\n\t\t\t//console.log('Using Device', mockDevice);\n\t\t\t//console.log('Using Pass', mockPass);\n\t\t});\n\n\t\tdescribe('Devices', function() {\n\t\t\tit(\n\t\t\t\t'POST - /api/v1/devices/:device_id/registrations/:pass_type_id/:serial_number - register a new device for pass',\n\t\t\t\tfunction(done) {\n\t\t\t\t\trequest(app)\n\t\t\t\t\t\t.post(\n\t\t\t\t\t\t\t//'/api/v1/devices/012345678987654321/registrations/pass.jsapps.io/012345678987654321'\n\t\t\t\t\t\t\t`/api/v1/devices/${mockDevice.deviceLibraryIdentifier}/registrations/${mockPass.passTypeIdentifier}/${mockPass.serialNumber}`\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.send({\n\t\t\t\t\t\t\tpushToken: mockDevice.pushToken\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.set('Authorization', mockDevice.authorization)\n\t\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t\t.expect(201, done);\n\t\t\t\t});\n\n\t\t\tit(\n\t\t\t\t'POST - /api/v1/devices/:device_id/registrations/:pass_type_id/:serial_number - return existing device for pass',\n\t\t\t\tfunction(done) {\n\t\t\t\t\trequest(app)\n\t\t\t\t\t\t.post(\n\t\t\t\t\t\t\t//'/api/v1/devices/012345678987654321/registrations/pass.jsapps.io/012345678987654321'\n\t\t\t\t\t\t\t`/api/v1/devices/${mockDevice.deviceLibraryIdentifier}/registrations/${mockPass.passTypeIdentifier}/${mockPass.serialNumber}`\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.send({\n\t\t\t\t\t\t\tpushToken: mockDevice.pushToken\n\t\t\t\t\t\t})\n\t\t\t\t\t\t//.set('Authorization', 'ApplePass ' + mockPass.authenticationToken)\n\t\t\t\t\t\t.set('Authorization', mockDevice.authorization)\n\t\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t\t.expect(200, done);\n\t\t\t\t});\n\n\t\t\tit('GET - /api/v1/devices/:device_id/push/:token - send push to device', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get('/api/v1/devices/' + mockDevice.deviceLibraryIdentifier + '/push/' + mockDevice.token)\n\t\t\t\t\t.set('Authorization', mockDevice.authorization)\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\n\t\t\tit('GET - /api/v1/devices/:device_id/registrations/:pass_type_id - get serial numbers',\n\t\t\t\tfunction(done) {\n\t\t\t\t\trequest(app)\n\t\t\t\t\t\t.get('/api/v1/devices/' + mockDevice.deviceLibraryIdentifier + '/registrations/' + mockPass.passTypeIdentifier)\n\t\t\t\t\t\t.set('Authorization', mockDevice.authorization)\n\t\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t\t.expect(200, done);\n\t\t\t\t});\n\n\t\t\tit('GET - /api/v1/devices/:device_id/registrations/:pass_type_id?passesUpdatedSince=tag - get serial numbers',\n\t\t\t\tfunction(done) {\n\t\t\t\t\trequest(app)\n\t\t\t\t\t\t.get('/api/v1/devices/' + mockDevice.deviceLibraryIdentifier + '/registrations/' + mockPass.passTypeIdentifier +\n\t\t\t\t\t\t\t'?tag=now')\n\t\t\t\t\t\t.set('Authorization', mockDevice.authorization)\n\t\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t\t.expect(200, done);\n\t\t\t\t});\n\n\t\t\tit('GET - /api/v1/devices/:device_id/:registrations/:pass_type_id', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get('/api/v1/devices/' + mockDevice.deviceLibraryIdentifier + '/registrations/' + mockPass.passTypeIdentifier)\n\t\t\t\t\t.set('Authorization', mockDevice.authorization)\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(function(res) {\n\t\t\t\t\t\tassert.ok(res.body.serialNumbers);\n\t\t\t\t\t})\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\n\t\t\tit('DELETE - /api/v1/devices/:device_id/:pass_type_id/:serial_number - un-register device',\n\t\t\t\tfunction(done) {\n\t\t\t\t\trequest(app)\n\t\t\t\t\t\t.delete(\n\t\t\t\t\t\t\t`/api/v1/devices/${mockDevice.deviceLibraryIdentifier}/registrations/${mockPass.passTypeIdentifier}/${mockPass.serialNumber}`\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.set('Authorization', mockDevice.authorization)\n\t\t\t\t\t\t//.expect('Content-Type', /json/)\n\t\t\t\t\t\t.expect(200, done);\n\t\t\t\t});\n\t\t});\n\n\t\tdescribe('Logs', function() {\n\t\t\tit('POST - /api/v1/log - should store logs', function(done) {\n\t\t\t\tthis.slow(5000);\n\t\t\t\trequest(app)\n\t\t\t\t\t.post('/api/v1/log')\n\t\t\t\t\t.send({\n\t\t\t\t\t\tlogs: ['test log']\n\t\t\t\t\t})\n\t\t\t\t\t.expect('Content-Type', /json/)\n\t\t\t\t\t.expect(200, done);\n\t\t\t});\n\t\t});\n\t\tdescribe('Passes', function() {\n\n\t\t\tit('GET - /api/v1/passes/:pass_type_id/:serial_number - 401', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get(`/api/v1/passes/${mockPass.passTypeIdentifier}/${mockPass.serialNumber}111`)\n\t\t\t\t\t.expect(401, done);\n\t\t\t});\n\n\t\t\tit('GET - /api/v1/passes/:pass_type_id/:serial_number', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get(`/api/v1/passes/${mockPass.passTypeIdentifier}/${mockPass.serialNumber}`)\n\t\t\t\t\t.set('Authorization', mockDevice.authorization)\n\t\t\t\t\t//.expect('Content-Type', /application\\/vnd.apple.pkpass/)\n\t\t\t\t\t.expect(200, done);\n\n\t\t\t});\n\n\t\t\tit('GET - /api/v1/passes/:pass_type_id/:serial_number - ?updated since date', function(done) {\n\t\t\t\trequest(app)\n\t\t\t\t\t.get(`/api/v1/passes/${mockPass.passTypeIdentifier}/${mockPass.serialNumber}?updatedSince=` + Date.now())\n\t\t\t\t\t.set('Authorization', mockDevice.authorization)\n\t\t\t\t\t//.expect('Content-Type', /application\\/vnd.apple.pkpass/)\n\t\t\t\t\t.expect(204, done);\n\n\t\t\t});\n\t\t});\n\n\n\n\n\n\t});\n});\n"
  },
  {
    "__docId__": 326,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe122",
    "testId": 122,
    "memberof": "specs/routes-spec.js",
    "testDepth": 0,
    "longname": "specs/routes-spec.js~describe122",
    "access": null,
    "description": "routes",
    "lineNumber": 38
  },
  {
    "__docId__": 327,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it123",
    "testId": 123,
    "memberof": "specs/routes-spec.js~describe122",
    "testDepth": 1,
    "longname": "specs/routes-spec.js~describe122.it123",
    "access": null,
    "description": "GET - /api/v1 - should return api",
    "lineNumber": 40
  },
  {
    "__docId__": 328,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe124",
    "testId": 124,
    "memberof": "specs/routes-spec.js~describe122",
    "testDepth": 1,
    "longname": "specs/routes-spec.js~describe122.describe124",
    "access": null,
    "description": "PassKit Web Service",
    "lineNumber": 49
  },
  {
    "__docId__": 329,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe125",
    "testId": 125,
    "memberof": "specs/routes-spec.js~describe122.describe124",
    "testDepth": 2,
    "longname": "specs/routes-spec.js~describe122.describe124.describe125",
    "access": null,
    "description": "Devices",
    "lineNumber": 56
  },
  {
    "__docId__": 330,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it126",
    "testId": 126,
    "memberof": "specs/routes-spec.js~describe122.describe124.describe125",
    "testDepth": 3,
    "longname": "specs/routes-spec.js~describe122.describe124.describe125.it126",
    "access": null,
    "description": "POST - /api/v1/devices/:device_id/registrations/:pass_type_id/:serial_number - register a new device for pass",
    "lineNumber": 57
  },
  {
    "__docId__": 331,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it127",
    "testId": 127,
    "memberof": "specs/routes-spec.js~describe122.describe124.describe125",
    "testDepth": 3,
    "longname": "specs/routes-spec.js~describe122.describe124.describe125.it127",
    "access": null,
    "description": "POST - /api/v1/devices/:device_id/registrations/:pass_type_id/:serial_number - return existing device for pass",
    "lineNumber": 73
  },
  {
    "__docId__": 332,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it128",
    "testId": 128,
    "memberof": "specs/routes-spec.js~describe122.describe124.describe125",
    "testDepth": 3,
    "longname": "specs/routes-spec.js~describe122.describe124.describe125.it128",
    "access": null,
    "description": "GET - /api/v1/devices/:device_id/push/:token - send push to device",
    "lineNumber": 90
  },
  {
    "__docId__": 333,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it129",
    "testId": 129,
    "memberof": "specs/routes-spec.js~describe122.describe124.describe125",
    "testDepth": 3,
    "longname": "specs/routes-spec.js~describe122.describe124.describe125.it129",
    "access": null,
    "description": "GET - /api/v1/devices/:device_id/registrations/:pass_type_id - get serial numbers",
    "lineNumber": 98
  },
  {
    "__docId__": 334,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it130",
    "testId": 130,
    "memberof": "specs/routes-spec.js~describe122.describe124.describe125",
    "testDepth": 3,
    "longname": "specs/routes-spec.js~describe122.describe124.describe125.it130",
    "access": null,
    "description": "GET - /api/v1/devices/:device_id/registrations/:pass_type_id?passesUpdatedSince=tag - get serial numbers",
    "lineNumber": 107
  },
  {
    "__docId__": 335,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it131",
    "testId": 131,
    "memberof": "specs/routes-spec.js~describe122.describe124.describe125",
    "testDepth": 3,
    "longname": "specs/routes-spec.js~describe122.describe124.describe125.it131",
    "access": null,
    "description": "GET - /api/v1/devices/:device_id/:registrations/:pass_type_id",
    "lineNumber": 117
  },
  {
    "__docId__": 336,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it132",
    "testId": 132,
    "memberof": "specs/routes-spec.js~describe122.describe124.describe125",
    "testDepth": 3,
    "longname": "specs/routes-spec.js~describe122.describe124.describe125.it132",
    "access": null,
    "description": "DELETE - /api/v1/devices/:device_id/:pass_type_id/:serial_number - un-register device",
    "lineNumber": 128
  },
  {
    "__docId__": 337,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe133",
    "testId": 133,
    "memberof": "specs/routes-spec.js~describe122.describe124",
    "testDepth": 2,
    "longname": "specs/routes-spec.js~describe122.describe124.describe133",
    "access": null,
    "description": "Logs",
    "lineNumber": 140
  },
  {
    "__docId__": 338,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it134",
    "testId": 134,
    "memberof": "specs/routes-spec.js~describe122.describe124.describe133",
    "testDepth": 3,
    "longname": "specs/routes-spec.js~describe122.describe124.describe133.it134",
    "access": null,
    "description": "POST - /api/v1/log - should store logs",
    "lineNumber": 141
  },
  {
    "__docId__": 339,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe135",
    "testId": 135,
    "memberof": "specs/routes-spec.js~describe122.describe124",
    "testDepth": 2,
    "longname": "specs/routes-spec.js~describe122.describe124.describe135",
    "access": null,
    "description": "Passes",
    "lineNumber": 152
  },
  {
    "__docId__": 340,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it136",
    "testId": 136,
    "memberof": "specs/routes-spec.js~describe122.describe124.describe135",
    "testDepth": 3,
    "longname": "specs/routes-spec.js~describe122.describe124.describe135.it136",
    "access": null,
    "description": "GET - /api/v1/passes/:pass_type_id/:serial_number - 401",
    "lineNumber": 154
  },
  {
    "__docId__": 341,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it137",
    "testId": 137,
    "memberof": "specs/routes-spec.js~describe122.describe124.describe135",
    "testDepth": 3,
    "longname": "specs/routes-spec.js~describe122.describe124.describe135.it137",
    "access": null,
    "description": "GET - /api/v1/passes/:pass_type_id/:serial_number",
    "lineNumber": 160
  },
  {
    "__docId__": 342,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it138",
    "testId": 138,
    "memberof": "specs/routes-spec.js~describe122.describe124.describe135",
    "testDepth": 3,
    "longname": "specs/routes-spec.js~describe122.describe124.describe135.it138",
    "access": null,
    "description": "GET - /api/v1/passes/:pass_type_id/:serial_number - ?updated since date",
    "lineNumber": 169
  },
  {
    "__docId__": 343,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/signpass-spec.js",
    "memberof": null,
    "longname": "specs/signpass-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst fs = require('fs-extra');\nconst _ = require('lodash');\nconst assert = require('assert');\nconst path = require('path');\nconst mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nconst program = mocks.program;\nconst config = program.config.defaults;\nconst SignPass = require(path.resolve(__dirname, '../../lib/signpass'));\nconst jpsPassbook = require(path.resolve(__dirname, '../../lib/jps-passbook'))(program);\n\nvar options = mocks.mockIdentifer;\n\nvar signpass;\nvar mockPass = mocks.mockPass;\nvar passes = mocks.mockPasses;\n\nvar testPasses = [];\ndescribe('SignPass', function() {\n\n\n\n\tit('should be defined', function(done) {\n\t\tassert(SignPass);\n\t\tdone();\n\t});\n\n\txit('should create SignPass instance', function(done) {\n\t\tsignpass = new SignPass(options);\n\t\tassert(signpass);\n\t\tdone();\n\t});\n\n\tdescribe('Certs', function() {\n\n\t\tit('should return PassTypeId object', function(done) {\n\t\t\toptions = SignPass.createPassTypeId(mockPass.passTypeIdentifier, {});\n\t\t\tassert(options);\n\t\t\tdone();\n\t\t});\n\n\t\tit('createPems() - should create -cert.pem and -key.pem files from a .p12 certficate.', function(done) {\n\t\t\tSignPass.createPems({\n\t\t\t\tpassphrase: mocks.mockIdentifer.passphrase,\n\t\t\t\tpassTypeIdentifier: mocks.mockIdentifer.passTypeIdentifier,\n\t\t\t\tp12: mocks.mockIdentifer.p12,\n\t\t\t\toutput: program.config.defaults.dataPath\n\t\t\t}, function(err, resp) {\n\t\t\t\toptions = resp;\n\t\t\t\tif (err) {\n\t\t\t\t\tassert.fail(err);\n\t\t\t\t\tdone();\n\t\t\t\t}\n\n\t\t\t\tassert(fs.existsSync(resp.key));\n\t\t\t\tassert(fs.existsSync(resp.p12));\n\t\t\t\tassert(fs.existsSync(resp.wwdr));\n\t\t\t\tassert(fs.existsSync(resp.cert));\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\t\tit('should be fetch pass type info', function(done) {\n\t\t\tjpsPassbook.getPassCerts(mocks.mockIdentifer.passTypeIdentifier, function(err, resp) {\n\t\t\t\toptions = resp;\n\t\t\t\tif (err) {\n\t\t\t\t\tassert.fail(err);\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t\tassert(options);\n\t\t\t\tassert(fs.existsSync(resp.key));\n\t\t\t\tassert(fs.existsSync(resp.p12));\n\t\t\t\tassert(fs.existsSync(resp.wwdr));\n\t\t\t\tassert(fs.existsSync(resp.cert));\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\t});\n\n\n\tdescribe('Siging', function() {\n\n\t\tbefore(function() {\n\t\t\tjpsPassbook.createPassPromise(mockPass).then(function(resp) {\n\t\t\t\tmockPass = resp;\n\t\t\t\t//\tmockPass = resp[0];\n\t\t\t\tconsole.log('Using Mock Pass', mockPass);\n\n\t\t\t});\n\t\t});\n\n\t\tit('sign() - should create .zip and .pkpass files', function(done) {\n\t\t\toptions.passFilename = mockPass.rawFilename || mockPass.filename;\n\t\t\tsignpass = new SignPass(options);\n\t\t\tsignpass.sign(function(err, resp) {\n\t\t\t\tconsole.log('\\n\\n Signed using', options.passFilename);\n\t\t\t\tif (err) {\n\t\t\t\t\tassert.fail(err);\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t\tassert(resp);\n\t\t\t\tassert(fs.existsSync(resp.dest));\n\t\t\t\tdone();\n\t\t\t});\n\t\t});\n\n\n\n\t\tdescribe('Batching', function() {\n\t\t\tvar _passes = [];\n\t\t\tvar _mockPassFilenames = [];\n\n\n\t\t\tbefore(function(done) {\n\t\t\t\tprogram.db.find({\n\t\t\t\t\tdocType: 'pass'\n\t\t\t\t}).then(function(resp) {\n\t\t\t\t\t_passes = resp;\n\t\t\t\t\t_mockPassFilenames = _.pluck(resp, 'filename');\n\t\t\t\t\tconsole.log('GOT PASSES', resp);\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t\t});\n\n\n\t\t\txit('sign() - all passes - should create .zip and .pkpass for each pass type', function(done) {\n\t\t\t\tthis.timeout(10000);\n\t\t\t\tvar _done = _.after(_mockPassFilenames.length, function() {\n\t\t\t\t\tdone();\n\t\t\t\t});\n\n\t\t\t\t_.forEach(_mockPassFilenames, function(filename) {\n\t\t\t\t\toptions.passFilename = filename;\n\t\t\t\t\tsignpass = new SignPass(options);\n\t\t\t\t\tsignpass.signPromise().then(function(resp) {\n\t\t\t\t\t\tassert(resp);\n\t\t\t\t\t\tassert(fs.existsSync(resp.dest));\n\t\t\t\t\t\t_done(resp);\n\t\t\t\t\t}).catch(function(err) {\n\t\t\t\t\t\tassert.fail(err);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t});\n\n\t});\n\n\n});\n"
  },
  {
    "__docId__": 344,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe139",
    "testId": 139,
    "memberof": "specs/signpass-spec.js",
    "testDepth": 0,
    "longname": "specs/signpass-spec.js~describe139",
    "access": null,
    "description": "SignPass",
    "lineNumber": 19
  },
  {
    "__docId__": 345,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it140",
    "testId": 140,
    "memberof": "specs/signpass-spec.js~describe139",
    "testDepth": 1,
    "longname": "specs/signpass-spec.js~describe139.it140",
    "access": null,
    "description": "should be defined",
    "lineNumber": 23
  },
  {
    "__docId__": 346,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe141",
    "testId": 141,
    "memberof": "specs/signpass-spec.js~describe139",
    "testDepth": 1,
    "longname": "specs/signpass-spec.js~describe139.describe141",
    "access": null,
    "description": "Certs",
    "lineNumber": 34
  },
  {
    "__docId__": 347,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it142",
    "testId": 142,
    "memberof": "specs/signpass-spec.js~describe139.describe141",
    "testDepth": 2,
    "longname": "specs/signpass-spec.js~describe139.describe141.it142",
    "access": null,
    "description": "should return PassTypeId object",
    "lineNumber": 36
  },
  {
    "__docId__": 348,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it143",
    "testId": 143,
    "memberof": "specs/signpass-spec.js~describe139.describe141",
    "testDepth": 2,
    "longname": "specs/signpass-spec.js~describe139.describe141.it143",
    "access": null,
    "description": "createPems() - should create -cert.pem and -key.pem files from a .p12 certficate.",
    "lineNumber": 42
  },
  {
    "__docId__": 349,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it144",
    "testId": 144,
    "memberof": "specs/signpass-spec.js~describe139.describe141",
    "testDepth": 2,
    "longname": "specs/signpass-spec.js~describe139.describe141.it144",
    "access": null,
    "description": "should be fetch pass type info",
    "lineNumber": 63
  },
  {
    "__docId__": 350,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe145",
    "testId": 145,
    "memberof": "specs/signpass-spec.js~describe139",
    "testDepth": 1,
    "longname": "specs/signpass-spec.js~describe139.describe145",
    "access": null,
    "description": "Siging",
    "lineNumber": 81
  },
  {
    "__docId__": 351,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it146",
    "testId": 146,
    "memberof": "specs/signpass-spec.js~describe139.describe145",
    "testDepth": 2,
    "longname": "specs/signpass-spec.js~describe139.describe145.it146",
    "access": null,
    "description": "sign() - should create .zip and .pkpass files",
    "lineNumber": 92
  },
  {
    "__docId__": 352,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe147",
    "testId": 147,
    "memberof": "specs/signpass-spec.js~describe139.describe145",
    "testDepth": 2,
    "longname": "specs/signpass-spec.js~describe139.describe145.describe147",
    "access": null,
    "description": "Batching",
    "lineNumber": 109
  },
  {
    "__docId__": 353,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/user-spec.js",
    "memberof": null,
    "longname": "specs/user-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst path = require('path');\nconst _ = require('lodash');\nconst assert = require('assert');\nconst mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nconst program = mocks.program;\nconst User = program.require('models/user');\n\nvar u;\n\ndescribe('User Model', function() {\n\tbefore(function() {\n\t\tu = new User({\n\t\t\temail: 'jonnie@test.com',\n\t\t\tdisplayName: 'jonnie',\n\t\t\t_json: {\n\t\t\t\tname: 'test'\n\t\t\t},\n\t\t\t_raw: ''\n\t\t});\n\t});\n\n\tit('should be defined', function(done) {\n\t\tassert(User);\n\t\tdone();\n\t});\n\n\tit('should create instance', function(done) {\n\t\tassert(u);\n\t\tassert(u.username === 'jonnie');\n\t\tdone();\n\t});\n\n\tit('should not have _json', function(done) {\n\t\tassert(u);\n\t\tassert(!u._json);\n\t\tassert(u.data);\n\t\tdone();\n\t});\n\n\tit('should not have _raw', function(done) {\n\t\tassert(u);\n\t\tassert(!u._raw);\n\t\tdone();\n\t});\n\n});\n"
  },
  {
    "__docId__": 354,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe148",
    "testId": 148,
    "memberof": "specs/user-spec.js",
    "testDepth": 0,
    "longname": "specs/user-spec.js~describe148",
    "access": null,
    "description": "User Model",
    "lineNumber": 11
  },
  {
    "__docId__": 355,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it149",
    "testId": 149,
    "memberof": "specs/user-spec.js~describe148",
    "testDepth": 1,
    "longname": "specs/user-spec.js~describe148.it149",
    "access": null,
    "description": "should be defined",
    "lineNumber": 23
  },
  {
    "__docId__": 356,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it150",
    "testId": 150,
    "memberof": "specs/user-spec.js~describe148",
    "testDepth": 1,
    "longname": "specs/user-spec.js~describe148.it150",
    "access": null,
    "description": "should create instance",
    "lineNumber": 28
  },
  {
    "__docId__": 357,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it151",
    "testId": 151,
    "memberof": "specs/user-spec.js~describe148",
    "testDepth": 1,
    "longname": "specs/user-spec.js~describe148.it151",
    "access": null,
    "description": "should not have _json",
    "lineNumber": 34
  },
  {
    "__docId__": 358,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it152",
    "testId": 152,
    "memberof": "specs/user-spec.js~describe148",
    "testDepth": 1,
    "longname": "specs/user-spec.js~describe148.it152",
    "access": null,
    "description": "should not have _raw",
    "lineNumber": 41
  },
  {
    "__docId__": 359,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/users-spec.js",
    "memberof": null,
    "longname": "specs/users-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nconst path = require('path');\nconst _ = require('lodash');\nconst assert = require('assert');\nconst mocks = require(path.resolve(__dirname, '../helpers/mocks'));\nconst program = mocks.program;\nconst Users = program.require('models/users')(program.db);;\nconst User = program.require('models/user');\nvar u;\nvar testUserId = null;\n\nvar testUser = {\n\tusername: 'test',\n\temail: 'test@gmail.com',\n\tpassword: 'test'\n};\n\nvar testUser1 = {\n\temail: 'test1@gmail.com',\n\tpassword: 'test'\n};\nvar testUser2 = {\n\temail: 'test2@gmail.com',\n\tpassword: 'test'\n};\nvar testUser3 = {\n\temail: 'test3@gmail.com',\n\tpassword: 'test'\n};\n\ndescribe('Users Model', function() {\n/*\n  after(function(done) {\n    program.db.remove(testUserId).then(function(resp) {\n      console.log('Removed', resp);\n      done();\n    }).catch(function(err) {\n      done();\n    });\n  });*/\n\n  it('be defined', function() {\n    assert(Users);\n  });\n\n\tit('create(user, done) - should create a user', function (done) {\n\t\tUsers.create(testUser, function(err, resp){\n\t\t\tif (err) {\n\t\t\t\tassert.fail(err);\n\t\t\t\tdone();\n\t\t\t}\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('getUsers() - should fetch users and resolve promise on success', function (done) {\n\t\tUsers.getUsers().then(function(resp){\n\t\t\tconsole.log('GOT USERS', resp);\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t}).catch(function(err){\n\t\t\tassert.fail(err);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('save(user, done) - should create a user', function (done) {\n\t\tUsers.save(testUser1, function(err, resp){\n\t\t\tif (err) {\n\t\t\t\tassert.fail(err);\n\t\t\t\tdone();\n\t\t\t}\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('findOrCreate(profile, done) - should find/create user successfully', function(done) {\n\t\tassert.ok(Users.findOrCreate);\n\t\tUsers.findOrCreate(testUser2, function(err, resp) {\n\t\t\tif (err) {\n\t\t\t\tassert.fail(err);\n\t\t\t\tdone();\n\t\t\t}\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t});\n\t});\n\n  it('findOrCreate(profile, done) - should find/create user successfully', function(done) {\n    Users.findOrCreate(testUser3, function(err, resp) {\n      if (err) {\n        assert.fail(err);\n      }\n      testUserId = resp._id;\n      assert(resp);\n      done();\n    });\n  });\n\n  it('find(profile, done) - should find user unsuccessfully', function(done) {\n    assert.ok(Users.find);\n    Users.find({\n      username: 'unknown'\n    }, function(err, resp) {\n      if (err) {\n        assert(err, 'returns error');\n        done();\n      }\n      assert.fail(resp);\n      done();\n    });\n  });\n\n\tit('validate(user, done) - find valid user by username/password', function (done) {\n\t\tUsers.validate(testUser3, function(err, resp){\n\t\t\tif (err) {\n\t\t\t\tassert.fail(err);\n\t\t\t\tdone();\n\t\t\t}\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t});\n\t});\n\n\tit('findByUsername(profile, done) - should find user successfully', function(done) {\n\t\tassert.ok(Users.findByUsername);\n\t\tUsers.findByUsername('test3', function(err, resp) {\n\t\t\tif (err) {\n\t\t\t\tassert.fail(err);\n\t\t\t}\n\t\t\tassert(resp);\n\t\t\tdone();\n\t\t});\n\t});\n\n\n\n});\n"
  },
  {
    "__docId__": 360,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe153",
    "testId": 153,
    "memberof": "specs/users-spec.js",
    "testDepth": 0,
    "longname": "specs/users-spec.js~describe153",
    "access": null,
    "description": "Users Model",
    "lineNumber": 31
  },
  {
    "__docId__": 361,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it154",
    "testId": 154,
    "memberof": "specs/users-spec.js~describe153",
    "testDepth": 1,
    "longname": "specs/users-spec.js~describe153.it154",
    "access": null,
    "description": "be defined",
    "lineNumber": 42
  },
  {
    "__docId__": 362,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it155",
    "testId": 155,
    "memberof": "specs/users-spec.js~describe153",
    "testDepth": 1,
    "longname": "specs/users-spec.js~describe153.it155",
    "access": null,
    "description": "create(user, done) - should create a user",
    "lineNumber": 46
  },
  {
    "__docId__": 363,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it156",
    "testId": 156,
    "memberof": "specs/users-spec.js~describe153",
    "testDepth": 1,
    "longname": "specs/users-spec.js~describe153.it156",
    "access": null,
    "description": "getUsers() - should fetch users and resolve promise on success",
    "lineNumber": 57
  },
  {
    "__docId__": 364,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it157",
    "testId": 157,
    "memberof": "specs/users-spec.js~describe153",
    "testDepth": 1,
    "longname": "specs/users-spec.js~describe153.it157",
    "access": null,
    "description": "save(user, done) - should create a user",
    "lineNumber": 68
  },
  {
    "__docId__": 365,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it158",
    "testId": 158,
    "memberof": "specs/users-spec.js~describe153",
    "testDepth": 1,
    "longname": "specs/users-spec.js~describe153.it158",
    "access": null,
    "description": "findOrCreate(profile, done) - should find/create user successfully",
    "lineNumber": 79
  },
  {
    "__docId__": 366,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it159",
    "testId": 159,
    "memberof": "specs/users-spec.js~describe153",
    "testDepth": 1,
    "longname": "specs/users-spec.js~describe153.it159",
    "access": null,
    "description": "findOrCreate(profile, done) - should find/create user successfully",
    "lineNumber": 91
  },
  {
    "__docId__": 367,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it160",
    "testId": 160,
    "memberof": "specs/users-spec.js~describe153",
    "testDepth": 1,
    "longname": "specs/users-spec.js~describe153.it160",
    "access": null,
    "description": "find(profile, done) - should find user unsuccessfully",
    "lineNumber": 102
  },
  {
    "__docId__": 368,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it161",
    "testId": 161,
    "memberof": "specs/users-spec.js~describe153",
    "testDepth": 1,
    "longname": "specs/users-spec.js~describe153.it161",
    "access": null,
    "description": "validate(user, done) - find valid user by username/password",
    "lineNumber": 116
  },
  {
    "__docId__": 369,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it162",
    "testId": 162,
    "memberof": "specs/users-spec.js~describe153",
    "testDepth": 1,
    "longname": "specs/users-spec.js~describe153.it162",
    "access": null,
    "description": "findByUsername(profile, done) - should find user successfully",
    "lineNumber": 127
  }
]