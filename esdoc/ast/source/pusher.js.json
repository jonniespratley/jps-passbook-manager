{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Literal",
        "value": "use strict",
        "raw": "'use strict'",
        "range": [
          0,
          12
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 12
          }
        }
      },
      "range": [
        0,
        13
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 13
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module",
            "range": [
              15,
              21
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 3,
                "column": 6
              }
            }
          },
          "property": {
            "type": "Identifier",
            "name": "exports",
            "range": [
              22,
              29
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 7
              },
              "end": {
                "line": 3,
                "column": 14
              }
            }
          },
          "range": [
            15,
            29
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 14
            }
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": {
            "type": "Identifier",
            "name": "exports",
            "range": [
              22,
              29
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 7
              },
              "end": {
                "line": 3,
                "column": 14
              }
            }
          },
          "params": [
            {
              "type": "Identifier",
              "name": "options",
              "range": [
                41,
                48
              ],
              "loc": {
                "start": {
                  "line": 3,
                  "column": 26
                },
                "end": {
                  "line": 3,
                  "column": 33
                }
              }
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [],
            "range": [
              50,
              1146
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 35
              },
              "end": {
                "line": 50,
                "column": 1
              }
            },
            "trailingComments": [
              {
                "type": "Block",
                "value": "\n  const apn = require('apn');\n  const utils = require('./utils');\n\n  var logger = utils.getLogger('pusher');\n\n    var defaults = {\n      \"production\": false,\n      cert: '../certificates/passbookmanager-apns-cert.pem',\n      //certData: null,\n      key: '../certificates/passbookmanager-apns-key.p12',\n      //keyData: null,\n      passphrase: 'fred',\n      ca: '../certificates/AppleWWDRCA.cer',\n      //pfx: null,\n\n      //pfxData: null,\n\n      gateway: 'gateway.push.apple.com',\n      //gateway: 'gateway.sandbox.push.apple.com',\n\n      port: 2195,\n\n      rejectUnauthorized: true,\n\n      enhanced: true,\n      //errorCallback: onError,\n\n      cacheLength: 100,\n\n      autoAdjustCache: true,\n\n      connectionTimeout: 0\n    };\n    var token = '8701addcd7c847b07776c95883b79243527c5b959b12f81658d74fe2c1938fd';\n    var apnConnection = new apn.Connection(options);\n    var myDevice = new apn.Device(token);\n\n    var note = new apn.Notification();\n    note.expiry = Math.floor(Date.now() / 1000) + 3600;\n    note.payload = {};\n\n    apnConnection.pushNotification(note, myDevice);\n\n    ",
                "range": [
                  55,
                  1144
                ],
                "loc": {
                  "start": {
                    "line": 5,
                    "column": 2
                  },
                  "end": {
                    "line": 49,
                    "column": 6
                  }
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "range": [
            32,
            1146
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 17
            },
            "end": {
              "line": 50,
              "column": 1
            }
          }
        },
        "range": [
          15,
          1146
        ],
        "loc": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 1
          }
        }
      },
      "range": [
        15,
        1147
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 50,
          "column": 2
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "\nvar options = {\n  \"batchFeedback\": true,\n  \"interval\": 300\n};\n\nvar feedback = new apn.Feedback(options);\nfeedback.on(\"feedback\", function(devices) {\n  devices.forEach(function(item) {\n    logger('feedback', item);\n    // Do something with item.device and item.time;\n  });\n});\n",
          "range": [
            1148,
            1429
          ],
          "loc": {
            "start": {
              "line": 51,
              "column": 0
            },
            "end": {
              "line": 64,
              "column": 2
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    1147
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 50,
      "column": 2
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "\n  const apn = require('apn');\n  const utils = require('./utils');\n\n  var logger = utils.getLogger('pusher');\n\n    var defaults = {\n      \"production\": false,\n      cert: '../certificates/passbookmanager-apns-cert.pem',\n      //certData: null,\n      key: '../certificates/passbookmanager-apns-key.p12',\n      //keyData: null,\n      passphrase: 'fred',\n      ca: '../certificates/AppleWWDRCA.cer',\n      //pfx: null,\n\n      //pfxData: null,\n\n      gateway: 'gateway.push.apple.com',\n      //gateway: 'gateway.sandbox.push.apple.com',\n\n      port: 2195,\n\n      rejectUnauthorized: true,\n\n      enhanced: true,\n      //errorCallback: onError,\n\n      cacheLength: 100,\n\n      autoAdjustCache: true,\n\n      connectionTimeout: 0\n    };\n    var token = '8701addcd7c847b07776c95883b79243527c5b959b12f81658d74fe2c1938fd';\n    var apnConnection = new apn.Connection(options);\n    var myDevice = new apn.Device(token);\n\n    var note = new apn.Notification();\n    note.expiry = Math.floor(Date.now() / 1000) + 3600;\n    note.payload = {};\n\n    apnConnection.pushNotification(note, myDevice);\n\n    ",
      "range": [
        55,
        1144
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 2
        },
        "end": {
          "line": 49,
          "column": 6
        }
      }
    },
    {
      "type": "Block",
      "value": "\nvar options = {\n  \"batchFeedback\": true,\n  \"interval\": 300\n};\n\nvar feedback = new apn.Feedback(options);\nfeedback.on(\"feedback\", function(devices) {\n  devices.forEach(function(item) {\n    logger('feedback', item);\n    // Do something with item.device and item.time;\n  });\n});\n",
      "range": [
        1148,
        1429
      ],
      "loc": {
        "start": {
          "line": 51,
          "column": 0
        },
        "end": {
          "line": 64,
          "column": 2
        }
      }
    }
  ]
}